url: https://docs2bm.readthedocs.io/en/latest/index.html
title: 2-BM Docs — 2-BM Docs 0.1.1 documentation
accessed: 2023-07-15


# 2-BM Docs

  <image project-logo.png: project>

Manual and troubleshoting information to operate the APS beamline 2-BM

## Content

1. About
2. APS-U
3. Overview
4. User Manual
5. Operation
6. TroubleShoot
7. Ask for support
8. Publications


|- # About

The sector 2 bending magnet beamline is fully dedicated to microtomography with capability to perform large field of view (20 x 2 mm 2) fast 2D phase contrast imaging for slow dynamic phenomena studies (0.1m/s). The applications of this beamline range from life science, geoscience, physics, material science and engineering and paleontology. The flexibility of switching setups and capabilities of developing on-demand accessory experimental techniques make this beamline versatile in tomography applications.

  <image project-logo.png: project>


|- # APS-U

The APS Upgrade involves replacing the whole storage ring currently operating at 7 GeV with a new storage ring using a multi-bend achromat lattice operating at 6 GeV. The new stored current is 200 mA compared to the previous 100 mA. The change of the storage ring is to generate extremely small emittance beams.

The previous double bend APS lattice ahs being replaced by a new 7 bend achromat lattice. This new lattice is aligned in the existing storage ring enclosure. The location of the ID beamline has been fixed based on the layout. However, this change in lattice results in a displacement to the BM source.

  <image apsu_bm_01.png: project>

In the old APS, the BM beamlines received a total of 6 mrad horizontal fan of radiation from the B dipole magnet. In the new APS-U, the centerline of the BM source fan is shifted inboard and also upstream. The new BM source fan comes from multiple dipole magnets namely B:M4 and B:M3. In addition, due to the reverse bend lattice, radiation from the B:Q8 magnet also overlaps with the BM beamline source fans. Below is an illustration of the APS-U focusing-drift-defocusing-drift (FODO) section where the BM beamline source originates with a schematic of how the electron trajectory through the various magnets in the FODO.

  <image apsu_bm_02.png: project>

  <image apsu_bm_03.png: project>

Based on the above electron trajectory, the radiation fan as seen by the beamline is:

  <image apsu_bm_04.png: project>

The SR extraction port limits the available radiation to a 5.4 mrad fan.


|- # Overview

The 2-BM tomography instrument of the APS for in situ micro-tomography

• Sample preparation


|-- # Sample preparation

to be completed

• IMPORTANT:
In computed tomography, in order to obtain 3D reconstructions with the highest quality possible, the sample must remain in the field of view at every angles!

• Samples are loaded on kinematic mounts.

CXRO website (http://henke.lbl.gov/optical_constants/).


|- # User Manual

1. Beamline Control
 1.1. beamline
 1.2. tomography
2. Data Analisys
 2.1. At the APS
 2.2. At your home institution
 2.3. Mosaic
3. Data Collection
 3.1. TomoScan
 3.2. Streaming data collection
 3.3. Streaming data reconstruction
 3.4. Bluesky
4. Data Download
 4.1. Step-by-step instructions
5. Data Tagging
6. Data Visualization
 6.1. Raw Data
 6.2. Reconstructed Data
7. Detection
 7.1. Cameras
 7.2. Lenses
 7.3. Scintillators
 7.4. CCD Lens calculator
 7.5. Visualization
8. Energy change
9. Guide to Home-Built Electronics
 9.1. Requirements
 9.2. Design Suggestions
10. Proximity sensors
11. Remote access
12. Robot
13. Sample
 13.1. Environment
 13.2. Mounting
 13.3. Alignment
14. Video Demo
15. Visible Lens
 15.1. Triple Objective


|-- # Beamline Control

All beamline components and detectors are controlled using EPICS (https://epics-controls.org/) and areaDetector (https://areadetector.github.io/master/index.html).
Each device can be configure and controlled through a graphic user interface (GUI) or through a python script using PyEpics (https://cars9.uchicago.edu/software/python/pyepics3/).


|-- ## beamline

To start the main 2-BM beamline control user interface:

  [user2bmb@arcturus,42,~]$ start_epics

  <image 2bma_beamline.png: 2bma_beamline>

  <image 2bmb_beamline.png: 2bmb_beamline>


|-- ## tomography

To start the main tomography control screens for 2-BM-A or 2-BM-B for scanning or streaming data collection select in the main beamline control screens the corresponding screen for user, admin, tomoscan, tomoscan 2-BM:

  <image tomo_00.png: tomo_00>

User interface:

  <image tomo_01.png: tomo_01>

Admin interface:

  <image tomo_02.png: tomo_02>

Main tomography control screen

  <image tomo_03.png: tomo_02>

To start tomoScanStream:

  <image tomo_04.png: tomo_03>

Main tomoScanStream control screen

  <image tomo_05.png: tomo_02>

Main tomoStream control screen to control the real time reconstruction:

  <image tomo_06.png: tomo_02>

If some of the above screen contains whirte fields, it means that the corresponding EPICS IOC is not running. To check/start/stop any IOC associated with tomograhy use the ioc_start user interface:

  <image tomo_07.png: tomo_02>


|-- # Data Analisys

The micro tomography computing infrastructure for the Imaging group is located at 2-BM:

Station Name       Product     Part list  Model                       Quote
--------------------------------------------------------------------------------------
2-BM    tomo 1-2   MNJ15421064 cluster    Supermicro 740GP-TNRT node  cluster_quote
2-BM    tomo 3     MNJ15421064 cluster_01 Supermicro 740GP-TNRT node  cluster_quote_01
2-BM    tomo 4-5   MNJ16235754 cluster_02 Supermicro 220GQ-TNAR+ node cluster_quote_02
2-BM    disk array MNJ15508749 disk_array SYS-220U-TNR Storage        disk_array_quote


|-- ## At the APS

Your raw data are automatically copied from the detector to the analysis computer (handyn in this example) under the folder /local/data/YYYY-MM/PI_lastName.


|-- ### Manual

To manually reconstruct a data set, use the tomopy cli tool (https://github.com/tomography/tomopy-cli).

  [tomo@tomo1,~]$ bash
  [tomo@tomo1,~]$ conda activate tomopy

then for help:

  [tomo@tomo1,~]$ tomopy recon -h

To do a test reconstruction type:

  [tomo@tomo1,~]$ tomopy recon --file-name /local/data/YYYY-MM/PI_lastName/file.h5


|-- ### Automatic

To setup a reconstruction to start and publish automatically the results on a google slide with tomolog (https://tomologcli.readthedocs.io/en/latest/index.html),
edit tomorec_log

  [tomo@tomo1,~]$ bash
  [tomo@tomo1,~]$ conda activate tomocupy
  (tomocupy) [tomo@tomo1,~]$ sublime ~/bin/tomorec_log

by updating the –presentation-url to match the new google slide url

  #!/usr/bin/bash
  tomocupy recon --file-name $1 --remove-stripe-method fw --reconstruction-type full --rotation-axis-auto auto --find-center-end-row 1500
  tomolog run --presentation-url https://docs.google.com/presentation/d/1YuxMttfW8w2sfwbaw634R3_LgPIsaHblz4Lrsjzn6ufQ/edit?usp=sharing --file-name $1 --beamline 2-bm --zoom [1,2,4]

then type:

  (tomocupy) [tomo@tomo1,~]$ auto_rec /local/data/YYYY-MM/PI_lastName/

any new raw dataset uploade in /local/data/YYYY-MM/PI_lastName/ will be automatically reconstructed and results will be published on a google slide using tomolog (https://tomologcli.readthedocs.io/en/latest/index.html).

  <image tomolog_01.png: tomo_01>


|-- ## At your home institution

Install the following:

1. Download and install anaconda python for your operative system. (https://www.anaconda.com/download/)
2. Create a conda environment:

  $ conda create -n tomopy python=3.9

1. Activate the newly created conda environment:

  $ conda activate tomopy

1. Install tomopy: (https://tomopy.readthedocs.io/en/latest/)

  $ conda install --channel conda-forge tomopy

1. Install dxchange: (https://dxchange.readthedocs.io/en/latest/)

  $ conda install -c conda-forge dxchange

1. Install tomopy cli: (https://tomopycli.readthedocs.io/en/latest/)

  $ git clone https://github.com/tomography/tomopy-cli.git
  $ cd tomopy-cli
  $ python setup.py install

For Windows installation of tomopy-cli watch this video (https://anl.box.com/s/182dsmpnxx25o2xsy6n1ozgj8rx5omjg).

1. Install tomopy cli dependecy: (https://github.com/tomography/tomopy-cli/blob/master/requirements.txt)

  pip install opencv-python

To run a reconstuction you can now run:

  $ tomopy recon --file-name /data/file.h5


|-- ## Mosaic

For samples larger than the field of view we collect multiple data sets consisiting of overlapping tiles to form a mosaic.
To reconstruct these type of data please use tile (https://tile.readthedocs.io/en/latest/)  command-line-interface for mosaic tomography data processing.


|-- # Data Collection


|-- ## TomoScan

The tomography scans are managed by tomoScan (https://tomoscan.readthedocs.io/en/latest/index.html). Please refer to the tomoScan (https://tomoscan.readthedocs.io/en/latest/index.html) documentation for details.

To configure a single tomographic scan enter the acquistion parameters at:

  <image tomoScan.png: tomoScan>

To run a single scan with the parameters set in the tomoScan screen press the gree Start Scan button. To collect the same from the command line interface:

  [user2bmb@pg10ge]$ tomoscan single

tomoscan supports also vertical, horizontal and mosaic tomographic scans with:

  [user2bmb@pg10ge]$ tomoscan vertical
  [user2bmb@pg10ge]$ tomoscan horizontal
  [user2bmb@pg10ge]$ tomoscan mosaic

to run a vertical scan:

  $ [user2bmb@pg10ge]$ tomoscan vertical --vertical-start 0 --vertical-step-size 0.1 --vertical-steps 2

  2020-05-29 16:54:03,354 - vertical scan start
  2020-05-29 16:54:03,356 - vertical positions (mm): [0.  0.1]
  2020-05-29 16:54:03,358 - SampleInY stage start position: 0.000 mm
  2020-05-29 16:54:03,362 - single scan start
  2020-05-29 16:54:51,653 - single scan time: 0.805 minutes
  2020-05-29 16:54:51,654 - SampleInY stage start position: 0.100 mm
  2020-05-29 16:54:51,658 - single scan start
  2020-05-29 16:55:47,607 - single scan time: 0.932 minutes
  2020-05-29 16:55:47,607 - vertical scan time: 1.738 minutes
  2020-05-29 16:55:47,608 - vertical scan end

to run a series of vertical scans starting from different locations:

  [user2bmb@pg10ge]$ for k in {0,5.2,10.4,15.6,20.8,26}; do tomoscan vertical --vertical-start $k --vertical-step-size 1.3 --vertical-steps 4; done

this will run:

  [user2bmb@pg10ge]$ tomoscan vertical --vertical-start 0 --vertical-step-size 1.3 --vertical-steps 4
  [user2bmb@pg10ge]$ tomoscan vertical --vertical-start 5.2 --vertical-step-size 1.3 --vertical-steps 4
  [user2bmb@pg10ge]$ tomoscan vertical --vertical-start 10.4 --vertical-step-size 1.3 --vertical-steps 4
  [user2bmb@pg10ge]$ tomoscan vertical --vertical-start 15.6 --vertical-step-size 1.3 --vertical-steps 4
  [user2bmb@pg10ge]$ tomoscan vertical --vertical-start 20.8 --vertical-step-size 1.3 --vertical-steps 4
  [user2bmb@pg10ge]$ tomoscan vertical --vertical-start 26 --vertical-step-size 1.3 --vertical-steps 4

please check the command line manual (https://tomoscan.readthedocs.io/en/latest/demo.html#using-the-tomoscan-cli) for more details.


|-- ## Streaming data collection

tomoScan (https://tomoscan.readthedocs.io/en/latest/index.html) provides also support for streaming data collection (see tomoScanStream (https://tomoscan.readthedocs.io/en/latest/api/tomoscan_stream_2bm.html) documentation for details). When collecting data in streaming mode, projections,
dark and flat images are broadcasted using PVaccess (https://epics-controls.org/resources-and-support/documents/pvaccess/) and can be retrieved as EPICS PVs.

Streaming data collection features are:

• Projection, dark and flat image broadcast as PV access variables
• On-demand retake of dark-flat field images
• On-demand data capturing with saving in a standard Data Exchange hdf5file (https://dxfile.readthedocs.io/en/latest/source/xraytomo.html)
• Set a number of projectons (“Pre count”) collected before a triggered data capturing event to be also saved in the same hdf5 file

All TomoScanStream functionalies can be controlled from the Streaming Control section of:

  <image tomoScanStream.png: ../../_images/tomoScanStream.png>


|-- ## Streaming data reconstruction

The projection, dark and flat image broadcast provided by tomoScanStream (https://tomoscan.readthedocs.io/en/latest/api/tomoscan_stream_2bm.html) can be used to reconstruct in real-time 3 orthogonal slices. This task is accomplished by tomoStream (https://tomostream.readthedocs.io/en/latest/about.html).

Streaming data reconstruction features are:

• Streaming reconstruction of 3 (X-Y-Z) ortho-slices through the sample
• On demand adjustment of the
 • X Y Z ortho-slice positions
 • reconstruction rotation center
 • reconstruction filter

• X Y Z ortho-slice positions
 • reconstruction rotation center
 • reconstruction filter

All tomoStream (https://tomostream.readthedocs.io/en/latest/about.html) functionalies can be controlled from the tomoStream user interface:

  <image tomoStream.png: ../../_images/tomoStream.png>

The output of tomostream is a live reconstruction diplaying in ImageJ using the EPICS_NTNDA_Viewer (https://cars9.uchicago.edu/software/epics/areaDetectorViewers.html) plug-in:

  <image tomoStreamRecon.png: ../../_images/tomoStreamRecon.png>

While the sample is rotating is possible to optimize instrument (alignment, focus, sample to detector distance etc.) and  beamline (energy etc.) conditions and monitor the effect live on the 3 orthogonal slices. It is also possible to automatically trigger data capturing based on events occurring in the sample and its environment as a result of segmentation or machine learning.


|-- ## Bluesky

To operate 2-BM using bluesky (currently in beta test in 2-BM-B) type:

  user2bmb@lyra$ use_bluesky.sh 2bmb

Once in the ipython shell type:

  RE(user_tomo_scan(), comment="my tomo fly scan", sample="wood stick")

or:

  RE(user_tomo_scan(acquire_time=0.1), comment="my tomo fly scan", sample="wood stick")
  RE(user_tomo_scan(acquire_time=0.1, iteration=10), comment="my tomo fly scan", sample="wood stick")


|-- # Data Download

At the beginning of the beamtime all users listed in the proposal receive an email with a direct link and instructions on how to download data from the APS.

Data sets are distributed using a Globus (https://www.globus.org), to use it you need to create a Globus Account (https://docs.globus.org/how-to/get-started/)  and set up your computer as
a Globus EndPoint (https://www.globus.org/globus-connect-personal).


|-- ## Step-by-step instructions

Note This only applies if your data were stored on the APS data magement system.

Please follow these steps:

1. login into Globus (with your personal globus credential)
2. go to “Collection/Search” and search for the aps data select aps#data
3. login in the the APS data management system using the same badge number/password combination that use to access the APS poroposal system but put a “d” in front of the badge number
4. if you forgot your password you can reset it here (https://beam.aps.anl.gov/pls/apsweb/forgot_password.start_process)
5. go to /gdata/dm/2BM/ then seach for your data by PI_last_name-year-month/
6. set an end point on your computer (see Globus EndPoint) (https://www.globus.org/globus-connect-personal)
7. download the data!


|-- # Data Tagging

To tag the datasets collected during the experiment with user information we use DMagic (https://dmagic.readthedocs.io/en/latest/).

DMagic automatically retrieved the current user information from the Advanced Photon Source (http://www.aps.anl.gov)
scheduling system (https://schedule.aps.anl.gov/).

To use DMagic during an experiment:

  [usertxm@txmtwo]$ bash
  [usertxm@txmtwo]$ conda activate dm
  [usertxm@txmtwo]$ source /home/dm_id/etc/dm.setup.sh
  [usertxm@txmtwo]$ dmagic -h
  [usertxm@txmtwo]$ dmagic show

if required set the beamline name and tomoScan prefix with:

  [user2bmb@arcturus]$ dmagic show --beamline 2-BM --tomoscan-prefix 2bmb:TomoScan

  2021-07-08 13:00:55,946 - Today's date: 2021-07-08 13:00:55.946907
  2021-07-08 13:00:56,525 - Added fenter@anl.gov to the e-mail list.
  2021-07-08 13:00:56,526 - Added sturchio@udel.edu to the e-mail list.
  2021-07-08 13:00:56,526 - Added sslee@anl.gov to the e-mail list.
  2021-07-08 13:00:56,526 - Added ialmazn@anl.gov to the e-mail list.
  2021-07-08 13:00:56,526 - Added bektur@udel.edu to the e-mail list.
  2021-07-08 13:00:56,526 - Added youngjkm@anl.gov to the e-mail list.
  2021-07-08 13:00:56,596 -       Run Name: 2021-2
  2021-07-08 13:00:56,596 -       Proposal Title: Replacement of calcium carbonate (CaCO3) polymorphs by lead, zinc, and cadmium carbonates
  2021-07-08 13:00:56,596 -       PI Name: Youngjae Kim
  2021-07-08 13:00:56,596 -       Start time: 2021-07-08 08:00:00-05:00
  2021-07-08 13:00:56,597 -       End Time: 2021-07-11 08:00:00-05:00
  2021-07-08 13:00:56,597 -       User email address:
  2021-07-08 13:00:56,597 -               fenter@anl.gov
  2021-07-08 13:00:56,597 -               sturchio@udel.edu
  2021-07-08 13:00:56,597 -               sslee@anl.gov
  2021-07-08 13:00:56,597 -               ialmazn@anl.gov
  2021-07-08 13:00:56,597 -               bektur@udel.edu
  2021-07-08 13:00:56,598 -               youngjkm@anl.gov
  2021-07-08 13:00:56,598 - General
  2021-07-08 13:00:56,598 -   config           /home/beams/USERTXM/dmagic.conf
  2021-07-08 13:00:56,598 -   verbose          True
  2021-07-08 13:00:56,598 - Settings
  2021-07-08 13:00:56,598 -   beamline         2-BM
  2021-07-08 13:00:56,598 -   tomoscan_prefix  2bmb:TomoScan

To automatically fill the tomoScan current user info:

  [user2bmb@arcturus]$ dmagic tag


|-- # Data Visualization


|-- ## Raw Data

To view the tomographic raw data we suggest to install Fiji (https://imagej.net/Fiji) and add
the HDF plugin (https://github.com/paulscherrerinstitute/ch.psi.imagej.hdf5)

Other options are hdfview (https://support.hdfgroup.org/products/java/hdfview/) or
argos (https://github.com/titusjan/argos)

To view the tomographic raw data we suggest to install Fiji (https://imagej.net/Fiji) and add
the HDF plugin (https://github.com/paulscherrerinstitute/ch.psi.imagej.hdf5)

Other options are hdfview (https://support.hdfgroup.org/products/java/hdfview/) or
argos (https://github.com/titusjan/argos)


|-- ## Reconstructed Data


|-- ### Dragonfly

After your data are reconstructed you can visualize using Dragonfly (https://www.theobjects.com/dragonfly/index.html).

Login at the beamline Linux machine and then type:

  [tomo@handyn]$ cd /local/tomo/software/dragonfly
  [tomo@handyn]$ ./Dragonfly


|-- ### Avizo

After your data are reconstructed you can visualize using Avizo.

Login at the beamline Linux machine and then type:

  [tomo@handyn]$ cd /local/AmiraAvizo3D/2021.1/bin/
  [tomo@handyn]$ ./Avizo3D


|-- # Detection

The detection system consists of camera, lens and scintillator screens. Below we list of all the camera, lens and scintillator screens options available at 2-BM.

These are the computers supporting detectors at 2-BM:

Station Name   Model            Product No. Serial No.   Manual
------------------------------------------------------------------
2-BM-A  pg10ge HP Z8 G4         3GF37UT#ABA pg10ge label pg10ge SM
2-BM-B  lyra   HP EliteDesk 800 P4K18UT#ABA lyra label   lyra SM

For each machine part list at purchase time and for the list of supported hardware enter the serial numeber in the HP support (https://partsurfer.hp.com/Search.aspx) web page.

These are the model/part number of the cameras in use at 2-BM:


|-- ## Cameras

Camera                                                     pixels (HxV) pixels size (μm) bit  fps        Manual       Part number                             Images                                 Purchase orider
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Grasshopper3 9.1 MP Mono USB3 Vision (Sony ICX814)         3376 x 2704  3.69             14   9          camera_00001 GS3-U3-91S6M-C                                                                 camera_order_00001
Grasshopper3 2.3 MP Mono USB3 Vision (Sony Pregius IMX174) 1920 x 1200  5.86             10   163        camera_00002 GS3-U3-23S6M-C                                                                 camera_order_00001
Grasshopper3 5.0 MP Mono USB3 Vision (Sony Pregius IMX250) 2448 x 2048  3.45             10   75         camera_00003 GS3-U3-51S5M-C                                                                 camera_order_00001
PCO DIMAX HS4                                              2000 x 2000  11               12   100 (2277) camera_00004 camera link                             dimax_01.png,dimax_02.png,dimax_03.png
PCO EDGE 4.2                                               2048 x 2048  6.5              16   100        camera_00005 camera link
Adimec 12 MP (*)                                           4000 x 3000  5.5              8    187        camera_00006 Quartz quad CoaXPress Q-12A180 CMV12000                                        camera_order_00003
Oryx 5.0 MP Mono 10GigE                                    2448 x 2048  3.45             8-12 162        camera_00007 ORX-10G-51S5M-C                         flir_0.png,flir_1.png                  camera_order_00002
Oryx 31.0 MP Mono 10GigE (**)                              6464 x 4852  3.45             8-12 26         camera_00008 ORX-10G-310S9M                                                                 camera_order_00004

  <image dimax_01.png: dimax_01>

  <image dimax_02.png: dimax_02>

  <image dimax_03.png: dimax_03>

  <image flir_0.png: flir>

  <image flir_1.png: flir>

  <image flir_2.png: flir>

(*) use Euresys Quad-G3 CXP framegrabber
(**) use Myricom ARC Series C-Class Network adapter

() Only applies to detector with on board memory, transfer speed to on boad memory.

Different combinations of camera, lens and scintillator screensare are possible allowing for flexible data collection speed, pixel size, resolution and field of view.  Here are few examples:

Pixels (H) Pixels (V) Detector pixel size  (μm) Lens Mag Sample pixel size (μm) H filed of view (mm) V filed of view (mm)
-------------------------------------------------------------------------------------------------------------------------
2448       2048       3.45                      2        1.73                   4.22                 3.53
2448       2048       3.45                      5        0.69                   1.69                 1.41
2448       2048       3.45                      7.5      0.46                   1.13                 0.94
2448       2048       3.45                      10       0.35                   0.84                 0.71
2448       2048       3.45                      20       0.17                   0.42                 0.35
2448       2048       6.5                       2        3.25                   7.96                 6.66
2448       2048       6.5                       5        1.30                   3.18                 2.66
2448       2048       6.5                       7.5      0.87                   2.12                 1.77
2448       2048       6.5                       10       0.65                   1.59                 1.33
2448       2048       6.5                       20       0.33                   0.80                 0.67


|-- ### FLIR

To use the Flir Oryx camera ORX-10G-51S5M installed at 2-BM-B and connected to pg10ge:

  [user2bmb@parcturus]$ start_epics

then select Scan/Admin from:

  <image start_epics.png: tomo_user>

to obtain the FLIR Oryx areadetector main control in the mct_main screen select:

  <image mct_main.png: tomo_user>

  <image flir_main.png: tomo_user>

To collect an image press Acquire Start.


|-- #### Startup

To start/stop the area detector IOC for the FLIR Oryx (model 10GS 51S5) camera login into user2bmb@pg10ge then type:

  [user2bmb@pg10ge]$ 2bmbOryx -h
  Usage: 2bmbSpinnaker.sh {start|stop|restart|status|console|run|medm|caqtdm}


|-- #### Manuals

• FLIR Installation Guide (https://anl.box.com/s/7pe793z5x9cspayqimscavzqhdcc9og7)
• FLIR Technical Reference (https://anl.box.com/s/iyysb20lkr9uwbbefy3s0n2pkq3lyktq)


|-- ### Point Grey

To use the Point Grey GS3-U3-23S6M-C installed at 2-BM-B and connected to lyra:

  [user2bmb@lyra]$ start_mona

then select MONA/User/detectors/Point Grey camera (PG3) to obtain the Point Grey areadetector main control screen:

  <image item_007.png: tomo_user>

To collect an image press Acquire Start.


|-- #### Startup

To start/stop the areadetector IOC for the Point Grey (model GS3-U3-23S6M-C) camera login into user2bmb@lyra then type:

  [user2bmb@lyra]$ 2bmbPG3
   Usage: 2bmbPG3.sh {start|stop|restart|status|console|run}
  [user2bmb@lyra]$ 2bmbPG3 status
  [user2bmb@lyra]$ 2bmbPG3 start


|-- #### Manuals

• PG Installation Guide (https://anl.box.com/s/ds559pqv1rsq8fmxdavyjycio4n3a7e0)
• PG Technical Reference (https://anl.box.com/s/52w064y82yura524d9fkz27yst39597v)


|-- ### Adimec

To use the Quartz quad CoaXPress Q-12A180 CMV12000 installed at 2-BM-A and connected to chiwawa-113,
start the Adimec areadetector main control screen

Old version:

  [user2bmb@chiwawa-113]$ cd /local/epics/areaDetector-3-2/ADCoaxLink/iocs/coaxLinkIOC/iocBoot/iocCoaxLink
  [user2bmb@chiwawa-113]$ ./Start_Adimec_Display.sh
  [user2bmb@chiwawa-113]$ ./Start_Adimec.sh

  <image adimec.png: tomo_user>

New version:

  [user2bmb@chiwawa-113]$ cd /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADCoaxLink/iocs/coaxLinkIOC/iocBoot/iocCoaxLink/softioc/
  [user2bmb@chiwawa-113]$ ./Adimec.sh
    Usage: Adimec.sh {start|stop|restart|status|console|run|medm|caqtdm}
    Additional options:
    Adimec.sh start {screen|procServ|ps|shell}

  <image adimec_new.png: tomo_user>


|-- #### Startup

To start/stop the areadetector IOC for the  Quartz quad CoaXPress Q-12A180 CMV12000  camera login into user2bmb@chiwawa-113 then type:

  [user2bmb@chiwawa-113]$ cd /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADCoaxLink/iocs/coaxLinkIOC/iocBoot/iocCoaxLink/softioc/
  [user2bmb@chiwawa-113]$ ./Adimec.sh
    Usage: Adimec.sh {start|stop|restart|status|console|run|medm|caqtdm}
    Additional options:
    Adimec.sh start {screen|procServ|ps|shell}

Old version:

  [user2bmb@chiwawa-113]$ cd /local/epics/areaDetector-3-2/ADCoaxLink/iocs/coaxLinkIOC/iocBoot/iocCoaxLink
  [user2bmb@chiwawa-113]$ ./Start_Adimec.sh

To collect an image press Acquire Start.


|-- #### Manuals

• Adimec Installation Guide (https://anl.box.com/s/zyyt72lhttnhksgnwi2f02p8wbsoz9r7)
• Adimec Technical Reference (https://anl.box.com/s/zyyt72lhttnhksgnwi2f02p8wbsoz9r7)


|-- ### VieWorks 604MP

Test at txmthree:

  (base) usertxm@txmthree ~ $ conda create -n egrabber python=3.9
  (base) usertxm@txmthree ~/egrabber $ conda activate egrabber
  (egrabber) usertxm@txmthree ~/egrabber $ pip install harvesters
  (egrabber) usertxm@txmthree ~/egrabber $ conda install -c conda-forge tifffile
  (egrabber) usertxm@txmthree ~/egrabber $ python A3_Hardware_Trigger_v1.3.6_BM_async.py

Camera browser:

  (egrabber) usertxm@txmthree ~/egrabber $ /opt/euresys/egrabber/bin/x86_64/genicam-browser

  <image vieworks.png: tomo_user>


|-- ## Lenses

These are the model/part number of the microscope objective available at  at 2-BM:

Brand    each Part Number Magnification WD (mm) NA
-----------------------------------------------------
Mitutoyo 3x   NT-46-142   2x            34      0.055
Mitutoyo 3x   NT46-143    5x            34      0.14
Mitutoyo 3x   NT66-383    7.5x          35      0.21
Mitutoyo 3x   NT46-144    10x           34      0.28
Mitutoyo 2x   NT46-145    20x           20      0.42

The purchase record can be found at lens_order_00001 (https://apps.inside.anl.gov/paris/req.jsp?reqNbr=F0-144093), lens_order_00002 (https://apps.inside.anl.gov/paris/req.jsp?reqNbr=F1-153142), lens_order_00003 (https://apps.inside.anl.gov/paris/req.jsp?reqNbr=F1-165089).


|-- ## Scintillators

Source    Type    Thickness (μm) Size (mm) Specification           Order Ref.
----------------------------------------------------------------------------------
ESRF      GGG:Eu  2              8 x 8     esrf1_specs             esrf1_order
ESRF      GGG:Eu  5              8 x 8     esrf1_specs             esrf1_order
ESRF      GGG:Eu  23             8 x 8     esrf1_specs             esrf1_order
ESRF      LOS:Tb  6              8 x 8     esrf1_specs             esrf1_order
ESRF      GGG:Eu  17             8 x 8     esrf2_specs             esrf2_order
ESRF      GGG:Eu  21             8 x 8     esrf2_specs             esrf2_order
ESRF      GGG:Eu  25             8 x 8     esrf2_specs             esrf2_order
Marketech LuAG:Ce 100            25.4                              marketech_order
Marketech LuAG:Ce 200            25.4                              marketech_order
Crytur    LuAG:Ce 20             10                                crytur_order_01
Crytur    LuAG:Ce 25             10                                crytur_order_01
Crytur    LuAG:Ce 10             10        glued on 1 mm quartz.   crytur_order_01
Crytur    LuAG:Ce 10             10        glued on 0.17 mm quartz crytur_order_01
Crytur    LuAG:Ce 50             25.5                              crytur_order_02


|-- ### Crytur cleaning crystal surfaces

1. use a mixture of HCl:HNO3 =3:2, (to remove Al coatings use NaOH)
2. rins in DI water


|-- ### Scintillator emissions

Below are the emission spectrum plots of common scintillator screens:

  <image scintillator_qe_01.png: tomo_user>

  <image scintillator_qe_02.png: tomo_user>

  <image scintillator_qe_03.png: tomo_user>

  <image scintillator_qe_04.png: tomo_user>

  <image scintillator_qe_05.png: tomo_user>

  <image scintillator_qe_06.png: tomo_user>


|-- ## CCD Lens calculator

To calculate the pixel size / resolution for an arbitrary lens/scintillator/detector combination you can use the CCD Lens calculator (https://anl.box.com/s/800n760yv7dx1332yt2rk1znstpa7wtq) to obtain the following:

  <image CCD_Lenses_calculator.png: tomo_user>


|-- ## Visualization

To view the images collected by the detector press ImageJ on the main beamline control screen:

  <image item_004.png: tomo_user>

then make sure the areaDetector plug-in for ImageJ, ImageJ_Viewer (https://cars9.uchicago.edu/software/epics/areaDetectorViewers.html#ImageJViewers),  is running select:

  <image item_005.png: tomo_user>

and press start at:

  <image item_006.png: tomo_user>

To open the hdf files saved by the detector use:

1. fiji: https://imagej.net/Fiji (https://imagej.net/Fiji)
2. hdf: plugin from https://github.com/paulscherrerinstitute/ch.psi.imagej.hdf5 (https://github.com/paulscherrerinstitute/ch.psi.imagej.hdf5)
3. hdfview https://support.hdfgroup.org/products/java/hdfview/ (https://support.hdfgroup.org/products/java/hdfview/)
4. argos https://github.com/titusjan/argos (https://github.com/titusjan/argos)


|-- # Energy change

The beamline x-ray energy change is managed by the energy cli (https://github.com/xray-imaging/energy) python library.

For user operation the energy cli is called from the mctOptics user interface (https://mctoptics.readthedocs.io/en/latest/index.html):

  <image dmm_03.png: tomo_user>

The DMM energy change operates in two modes. The first uses pre-stored energy calibration files. To select this mode set to “No” the “Use File” button:

  <image dmm_04.png: tomo_user>

Then you can select any available energy from the drop down list:

  <image dmm_05.png: tomo_user>

Once the desired energy is selected press the “Set” button to move the DMM.

The second mode allows the use of arbitrary configuration files. You can enable this mode by selecting “Yes” in the “Use File” button:

  <image dmm_06.png: tomo_user>

In this example we are setting the DMM to 17.04 keV using the energy2bm_Mono_17.04.conf configuration file. Press the “Set” button to move the DMM to this energy.

You can create new configuration files with the energy cli (https://github.com/xray-imaging/energy) by moving the DMM to a known energy, i.e. using calibration
foils, and storing that DMM positions in a new config file with:

  [user2bmb@arcturus,42,~]$ energy save --mode Mono --energy-value 27.00

in this case a new config file called energy2bm_Mono_27.0_2022-11-03_23_26_17.conf is automatically generated and it can be used by updating the “Folder” and “File” entries in the
user iterface.

Finally, if you want to set the DMM to an arbitrary energy that is not a calibration point, let’s say 27.18, you can use the “interpolate” function. To do so, enter an abritrary energy
within the energy calibrated range, in our case between 11.10 and 33.20 keV, in the user inteface.

The intepolation function will create a config file for 27.18 keV by intepolating linearly all DMM positions between the 2 closest calibrated energies.
For 27.18 keV, the intepolation will occur using 25.51 and 30.00 keV.  Once the new energy2bm_interp_27.18.conf is generated, its name will be automacally
copied in the “File” entry of the user interface. To move the DMM to this energy press the “Set” button.

  <image dmm_07.png: tomo_user>

More information on how to operate the mctOptics user inteface is here (https://mctoptics.readthedocs.io/en/latest/usage.html).


|-- # Guide to Home-Built Electronics

Custom-built electronics are a part of many experiments at APS.  Argonne takes electrical safety seriously, and all electronics that will handle > 50 V require an inspection to show that they can safely be operated.  Many custom-built electronic units are built by researchers themselves who often lack training in electrical work.  Based on past experience, poor construction of electronics can lead to significant delays in experiments for users, limitations on experiments, and extra work for beamline staff and electrical inspectors.

This document is meant to serve as a guide to users on what to do to make sure there are no undue delays in their experiments due to electrical inspection issues.


|-- ## Requirements

1. Make sure that all components in the box are fixed in place, including connectors protruding from the box.  Loose components mean an almost automatic rejection.
2. Don’t put unnecessary materials in the box.  Padding with flammable materials (paper towels or foam) will lead to an almost automatic rejection.
3. Ensure there is sufficient space around components in the box.  If any components will dissipate heat, ensure sufficient ventilation.
4. Make sure there is fusing for the power input that is appropriate for the equipment being powered.
5. For metal enclosures, make sure that the enclosure is grounded to the power input ground, and that any exposed metal (connectors, etc.) and all internal subsystems are properly bonded to the equipment ground as well.
6. Make sure to use NRTL components for those components that will see > 50 V.
7. The wires and components need to be rated for the maximum voltage/amperage they carry.
8. Connectors and plugs need to be labeled with their function and voltage.
9. Try to follow standard wire color schemes.  Green wires should only be used for ground conductors.  White wires should only be used for neutral wires.
10. Ground wires are to protect workers and equipment.  DO NOT deliberately flow current through ground wires.
11. Shrink wrap exists to cover exposed metal to improve safety, not to hide flaws in wiring.  For example, below is a 110 VAC conductor where the wires were simply twisted together and covered with shrink wrap, rather than being properly joined (solder or crimp connectors would have been suitable here).  This is not acceptable practice.

  <image bad_wiring_shrink_wrap.png: Example of poor wiring practice>


|-- ## Design Suggestions

• Avoid making custom-built electrical enclosures using voltages > 50 V.  For example, use an external NRTL-listed power supply to feed a box with low-voltage DC rather than making an enclosure with an AC input and a DC converter inside.  While a box with only < 50 V still needs to be well-built, it does not require an electrical inspection.
• In the same vein, don’t unnecessarily mix low and high voltage equipment.
• Use standard connectors.  You are more likely to be able to find spares if rewiring is needed.  Bring extra connectors with you in case changes are needed.  If a connector will handle > 50 V, make sure it is NRTL listed.
• Don’t use standard connectors in non-standard ways.  For example, don’t use a standard power cord plug for components that aren’t going to be connected to 110 VAC.
• Use terminal strips inside of the enclosure so that if things need to be rewired, it can be done more easily.  If wires are directly connected between cables entering the box, it makes it very difficult to trace connections or modify the wiring if needed.  This example is from an enclosure built by an APS scientific associate.  Note how the terminal strip aids in both tracing wires and in making modifications to the wiring.

  <image terminal_strip.png: Example of poor wiring practice>

• Consider using power entry modules rather than a power cord end with a grommet.  It makes for a cleaner, safer assembly.  For example, note the power entry module shown below.  It provides a power switch, fusing, and an interface to a standard computer power cord.

  <image power_entry.png: Example of poor wiring practice>

• Consider using wire-end ferrules when using stranded wire.  It makes for a much cleaner termination into terminal blocks.

  <image bare_wires.png: Example of poor wiring practice>

  <image wire_ferrule.png: Example of poor wiring practice>


|-- # Proximity sensors

While performing experiment at the APS you are required to use a Wearable Proximity Device.

  <image proximity_sensor.png: tomo_user>

For more information check:

FAQ (https://anl.us2.list-manage.com/track/click?u=12b0bf5a3c2bf2e87f5cab8a4&id=045c7d99c9&e=ca7c1f2ce9)

Kiosk locations (https://anl.box.com/s/977bgwx4bd9f9ea6kz5qg466f4k4j8xk)

Training slide deck (https://anl.box.com/s/rq9xs5lb5g7gjcgborx37yzx4ak2g3ta)


|-- # Remote access

Remote access to beamline control computers is granted to users having a valid badge number and an active/scheduled proposal.
To connect to 2-BM main control system please go to https://delos.aps.anl.gov and login using as user name d+badge number
and the password you use to submit your APS prosal, then select “ARCTURUS, WS, Red Hat Enterprise Linux Workstation”.

  <image delos_001.png: tomo_user>

  <image delos_002.png: tomo_user>

  <image delos_003.png: tomo_user>

Once connected you have full control of the tomography system via the usual user interface:

  <image delos_004.png: tomo_user>

For enable users for remote access see

• https://wiki-ext.aps.anl.gov/remoteaccess/index.php/Main_Page
• https://forge.xray.aps.anl.gov
• https://delos.aps.anl.gov


|-- # Robot

The tomography instrument is using a Universal Robots e-Series for sample loading and unloading.

  <image robot.png: robot>

Documentation:

• Operating Instruction and safety procedure (https://anl.box.com/s/diyehzhu6jfcbnd0ocx9n43rmfmg7zde)
• User Manual (https://anl.box.com/s/w2sk8msmm1gt7c2dzgk9kh77hor5irp5)
• Gripper Manual (https://anl.box.com/s/jhqaawq3s6mbi8pkagzyum9bvq0s6izx)
• Wrist Camera Manual (https://anl.box.com/s/ernzj3w56db9lecs0jjo0yw7j6uof8u7)
• Mounting Hole Pattern (https://anl.box.com/s/bnvgo6yn8mjbc1a2j13lnqcwjekz5ac5)


|-- # Sample


|-- ## Environment

The 2-BM microCT instrument has been designed to accomodate different kind of in situ cells.


|-- ### Battery cell

to be completed


|-- ### Furnace

Type      Temp. Range   Atmosphere Image Contact          Loan Info            More info
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Induction up to 1000 °C Air              Pavel Shevchenko Ask  box link 0001 1 Custom: water cooled
Induction up to 1500 °C Air              Alex Deriy       Ask  box link 0002 2 Commercial parts: THM 200 heater, BK power supply, PTC 10 controller, 3 AWG welding wires, plus custom water cooler

  <image furnace_00001.png: 00001>

  <image furnace_00002.png: 00002>

The furnaces use a Eurotherm temperature controller. To start the Eurotherm epics IOC and medm screens for the two controllers:

  <image eurotherm_01.png: ../../_images/eurotherm_01.png>

Eurotherm 1 (left controller):

  [user2bmb@arcturus] $ /net/s2dserv/xorApps/epics/synApps_6_2_1/ioc/2bmEuroTherm/iocBoot/ioc2bmEuroTherm1/softioc/2bmEuroTherm1.sh run
  [user2bmb@arcturus] $ /net/s2dserv/xorApps/epics/synApps_6_2_1/ioc/2bmEuroTherm/iocBoot/ioc2bmEuroTherm1/softioc/2bmEuroTherm1.sh medm

  <image eurotherm_02.png: ../../_images/eurotherm_02.png>

Eurotherm 2 (right controller):

  [user2bmb@arcturus] $ /net/s2dserv/xorApps/epics/synApps_6_2_1/ioc/2bmEuroTherm/iocBoot/ioc2bmEuroTherm2/softioc/2bmEuroTherm2.sh run
  [user2bmb@arcturus] $ /net/s2dserv/xorApps/epics/synApps_6_2_1/ioc/2bmEuroTherm/iocBoot/ioc2bmEuroTherm2/softioc/2bmEuroTherm2.sh medm

  <image eurotherm_03.png: ../../_images/eurotherm_03.png>


|-- ### Load

Type       Model     Load Range Image                         Commercial Contact          Info
--------------------------------------------------------------------------------------------------------
Load cell  Custom    600 N                                    No         Pavel Shevchenko
Controller Int. 9820            load_00003.png,load_00003.png Yes        Pavel Shevchenko box link l0001

  <image load_00001.png: l00001>

  <image load_00002.png: l00002>

  <image load_00003.png: l00003>

  <image load_00003.png: l00004>


|-- ### Cryo

Type     Model      Image Commercial Contact          Info
--------------------------------------------------------------------
Cryo Jet OXFORD 800       Yes        Pavel Shevchenko box link c0001

  <image cryo_00001.jpg: c00001>


|-- ### Pressure

Type                           Temp. Range Pressure         Image Commercial Contact          Info
--------------------------------------------------------------------------------------------------------------
Teledyne ISCO 65D Syringe Pump             up to 20,000 psi       Yes        Mark Rivers      box link p0001 1
Teledyne 1000D Syringe Pump    120 °C      up to 12,000 psi       Yes        Pavel Shevchenko box link p0002 1
Vindum VP-12K dual-piston Pump 120 °C      up to 12,000 psi       Yes        Mark Rivers      web link p0003 1

  <image press_00001.png: p00001>

  <image press_00002.png: p00002>

  <image press_00003.png: p00003>

Epics support for the pumps: https://github.com/epics-modules/SyringePump. Note: modbus version should be R3-2 (or higher). To run the Teledyne 1000D Syringe Pump at 2-BM:

  [user2bmb@arcturus,478,~]$ cd ~/epics/synApps/support/syringepump/iocBoot/iocISCO

  [user2bmb@arcturus,478,~]$ ./start_IOC

  [user2bmb@arcturus,478,~]$ ./start_medm

opens the pump control screen:

  <image pump_00001.png: tomo_user>


|-- ## Mounting

Samples are mounted on a custom tip (https://anl.app.box.com/folder/123584924093) as shown below:

  <image sample_kinematic.png: tomo_user>

this is mounted on the rotary stage using a KBT25 (http://www.thorlabs.com/thorProduct.cfm?partNumber=KBT25/M)/KBB25 (http://www.thorlabs.com/thorProduct.cfm?partNumber=KBB25/M) pair. New KBT25T kinematic (http://www.thorlabs.com/thorProduct.cfm?partNumber=KBT25T/M) could also be used.


|-- ## Alignment

In order to align the sample on the center of rotation of the rotary stage 4 motorized axis are needed:

• Sample Y (vertical motion)
• Sample X (horizontal motion perpendicular to the beam)
• Sample top X (horizontal motion above the rotary stage)
• Sample top Z (horizontal motion normal to “sample top X” above the rotary stage)
  <image tomo_refs.png: tomo_user>

Load the sample on the kinematic mount (if using the automatic alignemt cli Adjust (https://github.com/xray-imaging/adjust) use the tungsten sphere (https://www.vxb.com/0-5mm-Tungsten-Carbide-One-0-0197-inch-Dia-p/0-5mmtungstenballs.htm) as sample) then using:

  <image tomo_admin.png: tomo_user>

move the sample up/down by adjusting Tomo_Sam_Y in the positive/negative direction until the sample is in the field of view of detector.


|-- ### Automatic

Adjust (https://github.com/xray-imaging/adjust) is a python script that automates all tomography instrument alignemt taks.

Adjust (https://github.com/xray-imaging/adjust)  works in combination with a 0.5 mm tungsten sphere (https://www.vxb.com/0-5mm-Tungsten-Carbide-One-0-0197-inch-Dia-p/0-5mmtungstenballs.htm) that needs to be installed as a sample on top of the rotary stage making sure is in the field of view at least when the rotation axis is at 0 and 10 degrees.

Adjust (https://github.com/xray-imaging/adjust)’s funtions include automatic finding of:

• detector pixel size
• scintillator focus location
• rotation axis location
• centering of the sample on the rotation axis
• rotation axis pitch and roll

First step is to mesaure the image pixel size by running:

  user2bmb@pg10ge $ adjust resolution

then:

  user2bmb@pg10ge $ adjust focus
  user2bmb@pg10ge $ adjust center
  user2bmb@pg10ge $ adjust roll
  user2bmb@pg10ge $ adjust pitch


|-- ### Manual

To center the sample on the rotation axis move the rotary stage Tomo_Rot at 0o then by adjusting the motor called “Tomo@0deg” (which is the sample stage on top of the rotary stage moving in the X director when the rotary stage at 0o) move the sample towards the center of the field of view. Finally move the Tomo_Rot at 180o then by adjusting the motor called “Tomo@1800deg” (which is the sample stage on top of the rotary stage moving in the X director when the rotary stage at 180o) move again the sample towards the center. The same process is described in the 4 steps below:

  <image sample_alignment.png: project>

Note: “Tomo_Sam_X” is used to align the center of rotation in respect to the beam, not to align samples on the rotation axis. While moving the sample vertically with Tomo_Sam_Y, some parasitic motions might detune “Tomo_Sam_X” by few μm. Therefore, it is expected to realign Tomo_Sam_X from one sample to another but only within few μm range.

|-- # Video Demo

Video 1 (https://anl.box.com/s/qc6ab5ozbc8ehjoc96xdgpa2k2u5hesu): How to use tomostream with zooming, changing rotation speed, and data capturing


|-- # Visible Lens

We installed an Optique Peter (http://www.optiquepeter.com/) system for visible light detection (https://anl.box.com/s/mib4c51emgr6dj8hs2e2qu3g1ozearsg)
at synchrotron facility (https://anl.box.com/s/y7dvpe53laghdmjwnmm63ztfks6l4ltd).


|-- ## Triple Objective

  <image optique_peter_triple.png: tomo_user>

1. Manuals (https://anl.app.box.com/folder/138012188876)
2. Specs (https://anl.box.com/s/8j9pkf96bkrijataekvnpjfmw89wzfdk)

Reference documentation (https://anl.box.com/s/ppb53bvkusbzvnx3j5ezgjsic4yetz81)


|- # Operation

This section contains beamline operation instructions.

1. AreaDetector
2. Alignment
3. Check list
4. Computing
5. Continuous rotation
6. Cross crosshair
7. Data Management
8. Energy change
9. FDT data transfer
10. GIT
11. Globus
12. Linear Stages
13. Logs
14. Optique Peter
15. Oscilloscope setup
16. Reconstruction
17. Reference
18. Rotary Stages
19. Scanning
20. Slack
21. User mail list
22. Vibration Monitors
23. SSH key update
24. Video recording
25. Web Cam
26. Windows


|-- # AreaDetector


|-- ## Install directions


|-- ### Build EPICS base

Warning

Make sure the disk partition hosting ~/epics is not larger than 2 TB. See tech talk (https://epics.anl.gov/tech-talk/2017/msg00046.php) and  Diamond Data Storage (https://epics.anl.gov/meetings/2012-10/program/1023-A3_Diamond_Data_Storage.pdf) document.

  $ mkdir ~/epics
  $ cd epics

• Download EPICS base latest release from https://github.com/epics-base/epics-base:
$ git clone https://github.com/epics-base/epics-base.git
$ cd epics-base
$ make -sj


 (https://github.com/epics-base/epics-base)

  $ git clone https://github.com/epics-base/epics-base.git
  $ cd epics-base
  $ make -sj


|-- ### Build ADSimDetector

Copy in ~/epics assemble_synApps.sh (https://docs2bm.readthedocs.io/en/latest/_downloads/1d614a4d479109280142250a420432b2/assemble_synApps.sh) making sure

  EPICS_BASE=/home/beams/USER2BMB/epics/epics-base

points to your epics-base location.

then:

  $ chmod +x assemble_synApps
  $ ./assemble_synApps

In the support folder verify that all modules are present in the Makefile:

  $ cd support
  $ vi Makefile

  ###### Support Modules ######

  MODULE_LIST =  ALLEN_BRADLEY
  MODULE_LIST += ALIVE
  MODULE_LIST += AREA_DETECTOR
  MODULE_LIST += ASYN
  MODULE_LIST += AUTOSAVE
  MODULE_LIST += BUSY
  MODULE_LIST += CALC
  MODULE_LIST += CAMAC
  MODULE_LIST += CAPUTRECORDER
  MODULE_LIST += DAC128V
  MODULE_LIST += DELAYGEN
  MODULE_LIST += DEVIOCSTATS
  MODULE_LIST += DXP
  MODULE_LIST += DXPSITORO
  MODULE_LIST += ETHERIP
  MODULE_LIST += IPAC
  MODULE_LIST += IP
  MODULE_LIST += IP330
  MODULE_LIST += IPUNIDIG
  MODULE_LIST += LOVE
  MODULE_LIST += LUA
  MODULE_LIST += MCA
  MODULE_LIST += MEASCOMP
  MODULE_LIST += MODBUS
  MODULE_LIST += MOTOR
  MODULE_LIST += OPTICS
  MODULE_LIST += QUADEM
  MODULE_LIST += SNCSEQ
  MODULE_LIST += SOFTGLUE
  MODULE_LIST += SOFTGLUEZYNQ
  MODULE_LIST += SSCAN
  MODULE_LIST += STD
  MODULE_LIST += STREAM
  MODULE_LIST += VAC
  MODULE_LIST += VME
  MODULE_LIST += XXX
  MODULE_LIST += YOKOGAWA_DAS
  MODULE_LIST += IOCSTATS

configure/RELEASE check all modules are listed:

  ASYN=$(SUPPORT)/asyn-R4-42
  AUTOSAVE=$(SUPPORT)/autosave-R5-10-2
  BUSY=$(SUPPORT)/busy-R1-7-3
  CALC=$(SUPPORT)/calc-R3-7-4
  DEVIOCSTATS=$(SUPPORT)/iocStats-3-1-16
  SSCAN=$(SUPPORT)/sscan-R2-11-5
  AREA_DETECTOR=$(SUPPORT)/areaDetector-R3-11
  ADCORE=$(AREA_DETECTOR)/ADCore
  ADSUPPORT=$(AREA_DETECTOR)/ADSupport
  SNCSEQ=$(SUPPORT)/seq-2-2-9

asyn configure/RELEASE comment out IPAC and SBCEQ:

  #IPAC=$(SUPPORT)/ipac-2-15
  #SNCSEQ=$(SUPPORT)/seq-2-2-5

asyn support/configure/CONFIG_SITE un-comment TIRPC=YES (for RH8 only):

  TIRPC=YES

Build with:

  $ make -sj


|-- ### Testing ADSimDetector

  cd ~/epics/synApps/support/areaDetector-master/ADSimDetector/iocs/simDetectorIOC/iocBoot/iocSimDetector

rename envPaths as envPaths.linux

edit st.cmd.linux from:

  < envPaths.linux
  < st_base.cmd

to:

  < ./envPaths.linux
  < ./st_base.cmd

edit start_epics from:

  #medm -x -macro "P=13SIM1:, R=cam1:" simDetector.adl &
  ../../bin/linux-x86_64/simDetectorApp st.cmd.linux

to:

  #!/bin/csh
  setenv EPICS_APP_AD /home/beams/USER2BMB/epics-ad/synApps/support/areaDetector-master/ADCore
  setenv EPICS_APP_ADSIM /home/beams/USER2BMB/epics-ad/synApps/support/areaDetector-master/ADSimDetector
  #####################
  # prepare MEDM path
  #
  if (! ${?EPICS_DISPLAY_PATH}) setenv EPICS_DISPLAY_PATH '.'
  setenv EPICS_DISPLAY_PATH $EPICS_DISPLAY_PATH':'$EPICS_APP_ADSIM/simDetectorApp/op/adl
  setenv EPICS_DISPLAY_PATH $EPICS_DISPLAY_PATH':'$EPICS_APP_AD/ADApp/op/adl
  medm -x -macro "P=13SIM1:, R=cam1:" ../../../../simDetectorApp/op/adl/simDetector.adl &
  ../../bin/linux-x86_64/simDetectorApp st.cmd.linux


|-- #### Start ADSimDetector

  ./start_epics

  <image ADSim_00.png: ADSim_00>

  <image ADSim_01.png: ADSim_01>


|-- ## Install ADAravis

Detailed instructions are here (https://areadetector.github.io/master/ADAravis/ADAravis.html).

Make sure the assemble_synApps.sh (https://docs2bm.readthedocs.io/en/latest/_downloads/1d614a4d479109280142250a420432b2/assemble_synApps.sh) script includes:

  git submodule update ADAravis
  git submodule update ADGenICam

in the

  if [[ $AREA_DETECTOR ]]
      then

section, the run assemble_synApps.sh (https://docs2bm.readthedocs.io/en/latest/_downloads/1d614a4d479109280142250a420432b2/assemble_synApps.sh) again and build ADGenICam

  $ cd ~/epics/synApps/support/areaDetector-R3-11/ADGenICam
  $ make -sj

then install the aravis (https://github.com/AravisProject/aravis) following the area detector documentation (https://areadetector.github.io/master/ADGenICam/ADGenICam.html#adgenicam-installing-aravis) in the ADAravis directory, i.e. aravis-8_0_1 is located in:

  ~/epics/synApps/support/areaDetector-R3-11/ADAravis

edit

  ~/epics/synApps/support/areaDetector-R3-11/ADAravis/Makefile

to add

  DIRS := $(DIRS) aravis-8_0_1

then build ADAravis:

  cd /epics/synApps/support/areaDetector-R3-11/ADAravis/
  make -sj


|-- ### Testing ADAravis

  cd areaDetector-R3-11/ADAravis/iocs/aravisIOC/iocBoot/iocAravis

and edit this line:

  # Name of camera as reported by arv-tool
  epicsEnvSet("CAMERA_NAME", "FLIR-Oryx ORX-10G-51S5M-18011754")

of the st.cmd.Oryx_51S5 file to add the camera information obtained by the output of the arv-tool:

  # Name of camera as reported by arv-tool
  epicsEnvSet("CAMERA_NAME", "FLIR-Oryx ORX-10G-51S5M-19173710")
  epicsEnvSet("CAMERA_ID", "FLIR-Oryx ORX-10G-51S5M-19173710")
  epicsEnvSet("CAMERA_INFO", "FLIR-Oryx ORX-10G-51S5M-19173710 (169.254.0.51)")

edit the start_epics file as follows:

  #!/bin/csh
  setenv EPICS_APP_AD /home/beams/USER2BMB/epics-test/synApps/support/areaDetector-R3-11/ADCore
  setenv EPICS_APP_ADGENICAM /home/beams/USER2BMB/epics-test/synApps/support/areaDetector-R3-11/ADGenICam
  setenv EPICS_APP_ADARAVIS /home/beams/USER2BMB/epics-test/synApps/support/areaDetector-R3-11/ADAravis
  #####################
  # prepare MEDM path
  #
  if (! ${?EPICS_DISPLAY_PATH}) setenv EPICS_DISPLAY_PATH '.'
  setenv EPICS_DISPLAY_PATH $EPICS_DISPLAY_PATH':'$EPICS_APP_ADARAVIS/aravisApp/op/adl
  setenv EPICS_DISPLAY_PATH $EPICS_DISPLAY_PATH':'$EPICS_APP_ADGENICAM/GenICamApp/op/adl
  setenv EPICS_DISPLAY_PATH $EPICS_DISPLAY_PATH':'$EPICS_APP_AD/ADApp/op/adl

  medm -x -macro "P=13ARV1:, R=cam1:, C=FLIR-Oryx-ORX-10G-310S9M" ../../../../aravisApp/op/adl/ADAravis.adl &

  ../../bin/linux-x86_64/ADAravisApp st.cmd.Oryx_51S5


|-- #### Start ADAravis

  ./start_epics

  <image ADAravis_00.png: ADSim_00>


|-- ## Install ADSpinnaker

Detailed instructions are at the areadetector doc page (https://areadetector.github.io/master/ADSpinnaker/ADSpinnaker.html).

Make sure the assemble_synApps.sh (https://docs2bm.readthedocs.io/en/latest/_downloads/1d614a4d479109280142250a420432b2/assemble_synApps.sh) script includes:

  git submodule update ADSpinnaker
  git submodule update ADGenICam

in the

  if [[ $AREA_DETECTOR ]]
      then

section, the run assemble_synApps.sh (https://docs2bm.readthedocs.io/en/latest/_downloads/1d614a4d479109280142250a420432b2/assemble_synApps.sh) again and build ADGenICam

  $ cd ~/epics/synApps/support/areaDetector-R3-11/ADGenICam
  $ make -sj

then install the Spinnaker SDK (https://www.flir.com/products/spinnaker-sdk/) must be downloaded and installed on the Windows or Linux machine prior to running the IOC because it installs the necessary drivers.

to create the envPath file edit:

  ~/epics/synApps/support/areaDetector-R3-11/ADSpinnaker/iocs/spinnakerIOC/iocBoot/iocSpinnaker

and replace

  ARCH = linux-x86_64-ub18

with:

  ARCH = linux-x86_64

then build ADSpinnaker:

  cd /epics/synApps/support/areaDetector-R3-11/ADSpinnaker/
  make -sj


|-- ### Testing ADSpinnaker

  cd areaDetector-R3-11/ADSpinnaker/iocs/spinnakerIOC/iocBoot/iocSpinnaker

and edit this line:

  # Name of camera as reported by arv-tool
  epicsEnvSet("CAMERA_NAME", "FLIR-Oryx ORX-10G-51S5M-18011754")

of the st.cmd.Oryx_51S5 file to add the camera information obtained by the output of the arv-tool:

  # Use this line for a specific camera by serial number, in this case a BlackFlyS GigE
  epicsEnvSet("CAMERA_ID", "19173710")  # 2-BM-B 2bmbSP1:
  epicsEnvSet("CAMERA_INFO", "FLIR-Oryx ORX-10G-51S5M-19173710 (169.254.0.51)")

edit the start_epics file as follows:

  #!/bin/csh
  setenv EPICS_APP_AD /home/beams/USER2BMB/epics-test/synApps/support/areaDetector-R3-11/ADCore
  setenv EPICS_APP_ADGENICAM /home/beams/USER2BMB/epics-test/synApps/support/areaDetector-R3-11/ADGenICam
  setenv EPICS_APP_ADSpinnaker /home/beams/USER2BMB/epics-test/synApps/support/areaDetector-R3-11/ADSpinnaker
  #####################
  # prepare MEDM path
  #
  if (! ${?EPICS_DISPLAY_PATH}) setenv EPICS_DISPLAY_PATH '.'
  setenv EPICS_DISPLAY_PATH $EPICS_DISPLAY_PATH':'$EPICS_APP_ADSpinnaker/spinnakerApp/op/adl
  setenv EPICS_DISPLAY_PATH $EPICS_DISPLAY_PATH':'$EPICS_APP_ADGENICAM/GenICamApp/op/adl
  setenv EPICS_DISPLAY_PATH $EPICS_DISPLAY_PATH':'$EPICS_APP_AD/ADApp/op/adl

  medm -x -macro "P=13SP1:, R=cam1:, C=FLIR-Oryx-ORX-10G-310S9M" ../../../../spinnakerApp/op/adl/ADSpinnaker.adl &

  ../../bin/linux-x86_64/spinnakerApp st.cmd.oryx_51S5


|-- #### Start ADSpinnaker

  ./start_epics

  <image ADSpinnaker_00.png: ADSim_00>


|-- ## Configure NIC on 10gbit FLIR cameras

1. Prerequisites:

64GB memory
Cat 6A cable
Intel X550T2 ETHERNET CONVERGED Network Adapter X550-T2
2. Enable jumbo packet
3. Disable DHCP and set a fixed IP address on the Ethernet port connecting to the FLIR
4. Increase the receive buffer size (MTU ~ 9000)
5. Increase the Network parameters in the kernel
6. Set the NIC tx queue length

64GB memory
Cat 6A cable
Intel X550T2 ETHERNET CONVERGED Network Adapter X550-T2

1. is available from Sorcium as Part#: 3E9073
2. FLIR doc: https://www.flir.com/support-center/iis/machine-vision/knowledge-base/lost-ethernet-data-packets-on-linux-systems/

 (https://www.flir.com/support-center/iis/machine-vision/knowledge-base/lost-ethernet-data-packets-on-linux-systems/)
 2.1. and 4. are documented at:

FLIR doc: https://www.flir.com/support-center/iis/machine-vision/knowledge-base/lost-ethernet-data-packets-on-linux-systems/

1. is documented both at flir doc and in the areadetector doc:

FLIR doc: https://www.flir.com/support-center/iis/machine-vision/knowledge-base/lost-ethernet-data-packets-on-linux-systems/
areadetector doc: https://areadetector.github.io/master/ADGenICam/ADGenICam.html#linux-usb-and-gige-system-settings

 (https://www.flir.com/support-center/iis/machine-vision/knowledge-base/lost-ethernet-data-packets-on-linux-systems/)
2. edit /etc/sysctl.conf and add:

net.core.rmem_default=26214400
net.core.rmem_max=268435456
3. edit /etc/rc.local and add:

#NIC camera settings and  10GB nic settings  In this example the camera is attached to  ens1f1
/usr/sbin/ifconfig ens1f1 txqueuelen 3000 (this is hardware specific . i.e. this card  supports up to 4096, some max out at about 512 etc.)

FLIR doc: https://www.flir.com/support-center/iis/machine-vision/knowledge-base/lost-ethernet-data-packets-on-linux-systems/

areadetector doc: https://areadetector.github.io/master/ADGenICam/ADGenICam.html#linux-usb-and-gige-system-settings

net.core.rmem_default=26214400
net.core.rmem_max=268435456

#NIC camera settings and  10GB nic settings  In this example the camera is attached to  ens1f1
/usr/sbin/ifconfig ens1f1 txqueuelen 3000 (this is hardware specific . i.e. this card  supports up to 4096, some max out at about 512 etc.)


|-- # Alignment


|-- ## Single

For a single tomography data collection, the python script Adjust (https://github.com/xray-imaging/adjust) fully automates all tomography instrument alignemt taks.

  <image tomo_refs.png: tomo_user>

Adjust (https://github.com/xray-imaging/adjust)  works in combination with a 0.5 mm tungsten sphere (https://www.vxb.com/0-5mm-Tungsten-Carbide-One-0-0197-inch-Dia-p/0-5mmtungstenballs.htm) that needs to be installed as a sample on top of the rotary stage making sure is in the field of view at least when the rotation axis is at 0 and 10 degrees.

Adjust (https://github.com/xray-imaging/adjust)’s funtions include automatic finding of:

1. detector pixel size
2. scintillator focus location
3. rotation axis location
4. centering of the sample on the rotation axis
5. rotation axis pitch and roll

First step is to mesaure the image pixel size by running:

  user2bmb@pg10ge $ adjust resolution

then:

  user2bmb@pg10ge $ adjust focus
  user2bmb@pg10ge $ adjust center
  user2bmb@pg10ge $ adjust roll
  user2bmb@pg10ge $ adjust pitch


|-- ## Mosaic

For mosaic tomography data collection, the horizonal translation stage (X) needs to precisely align so that during the X translation the sample does not move up or down. This can be accomplished by the following steps (https://anl.box.com/s/7ltz0oyxbxmo5ufy5s0tnlhwx0qh75wu) :

  <image mosaic_align_01.png: tomo_user>

  <image mosaic_align_02.png: tomo_user>

  <image mosaic_align_03.png: tomo_user>

  <image mosaic_align_04.png: tomo_user>


|-- ## Sample motor stack

The sample motor stack consists of:

1. Sample top X (horizontal motion above the rotary stage)
2. Sample top Z (horizontal motion normal to “sample top X” above the rotary stage)
3. Sample Y (vertical motion)
4. Sample Swivel Stage (2 axes roll and pitch motion)
5. Sample Y (vertical motion)
6. Sample X (horizontal motion perpendicular to the beam)


|-- ### Swivel Stages

we have different sets of swivel stages:

Station Descriptiom Model           Image Radius (mm) Base size (mm) Angular range (°) Info
---------------------------------------------------------------------------------------------------------------------------
2-BM-A  fast tomo   Kohzu SA16A-RS        220/280     160            ±10/±10           box link 0001, order 0003
2-BM-B  mona tomo   Kohzu SA07A-R2L       96/122      70             ±10/±8            box link 0001, order 0001 order 0002

  <image kohzu_00001.png: 00001>

  <image kohzu_00002.png: 00002>


|-- ### Rotary Stages

we have different sets of rotary stages:

Station Descriptiom Model             Image Controller                 Speed (rpm) Load axial (kg) Info
-------------------------------------------------------------------------------------------------------------------------------------------
2-BM    spindle     ABS2000-1000AS-RU       ENSEMBLEHLE10-40-A-MXH (*) 6000        18              box link 0004, box link 0002, order 0004
2-BM-A  fast tomo   ABS250MP-M-AS           ENSEMBLEHLE10-40-A-MXH (*) 500         66              box link 0004, box link 0003, order 0005
2-BM-B  mona tomo   ABRS-150MP-M-AS         ENSEMBLEHLE10-40-A-MXH (*) 500         8               box link 0004, order 0006

  <image aerotech_00001.png: 00003>

  <image aerotech_00002.png: 00004>

  <image aerotech_00002.png: 00004>

(*) replaced with ENSEMBLEML10-40-IO-MXH


|-- ### Ensemble

The Ensemble Parameter Setup currently in use at 2-BM-A and 2-BM-B stations can found at Ensemble Settings (https://anl.app.box.com/s/serp2nlyzk0ljvpqczc3btm7ikn9pvlj)

ABRS150MP         ABRS250MP         Units
-----------------------------------------------------------------------------
Fundamental Encoder Resolution 3600              11840             lines/rev
Encoder scale factor           148               45
Encoder pulses per revolution  532800            532800            pulses/rev
Encoder resolution             0.000675675675676 0.000675675675676 deg/pulse


|-- ### PSO

Details on the Position Synchronized Output (PSO) are in the Aerotech Manual (https://anl.box.com/s/l43qkqlhy21f4a8wetmrqbeqz9c7am72)


|-- # Check list

At the beginning of a new user beamtime login into user2bmb@arcturus then:

  [user2bmb@arcturus]$ start_tomo

and check the user info screen:

  <image medm_screen.png: tomo_user>

make sure the user PV are updated correctly from the scheduling system if not hit the update button for instructions or:

  [user2bmb@arcturus]$ bash
  [user2bmb@arcturus]$ conda activate dm
  [user2bmb@arcturus]$ source /home/dm_bm/etc/dm.setup.sh
  [user2bmb@arcturus]$ dmagic show
  [user2bmb@arcturus]$ dmagic tag

you can also enter manually the user last name/email address then you can create standard (YYYY_MM/pi_last_name) user folders on petrel with:

as user2bmb@arcturus:

  [user2bmb@arcturus]$ bash
  [user2bmb@arcturus]$ globus dirs

and you can share this folder will all users listed in the scheduled proposal with:

  [user2bmb@arcturus]$ globus email --schedule

At the end of the user beamtime make a Globus copy between

[user2bmb@pg10ge]$  /local/data/YYYY-MM/PI_lastName/

and the same YYYY-MM/PI_lastName/ on  petrel (https://app.globus.org/file-manager?origin_id=e133a81a-6d04-11e5-ba46-22000b92c6ec&origin_path=%2F2-BM%2F).


|-- # Computing

The following computers are in use in the Imaging Group:


|-- ## Data Analysis and Storage

Station Name       Product     Part list  Model                       Quote
--------------------------------------------------------------------------------------
2-BM    tomo 1-2   MNJ15421064 cluster    Supermicro 740GP-TNRT node  cluster_quote
2-BM    tomo 3     MNJ15421064 cluster_01 Supermicro 740GP-TNRT node  cluster_quote_01
2-BM    tomo 4-5   MNJ16235754 cluster_02 Supermicro 220GQ-TNAR+ node cluster_quote_02
2-BM    disk array MNJ15508749 disk_array SYS-220U-TNR Storage        disk_array_quote


|-- ## Data Collection

Station Name   Model            Product No. Serial No.   Manual
------------------------------------------------------------------
2-BM-A  pg10ge HP Z8 G4         3GF37UT#ABA pg10ge label pg10ge SM
2-BM-B  lyra   HP EliteDesk 800 P4K18UT#ABA lyra label   lyra SM

For each machine part list at purchase time and for the list of supported hardware enter the serial numeber in the HP support (https://partsurfer.hp.com/Search.aspx) web page.


|-- ## Data Visualization

The default computer is handyn where the following software is installed:


|-- ### Raw Data

To view the tomographic raw data we suggest to install Fiji (https://imagej.net/Fiji) and add
the HDF plugin (https://github.com/paulscherrerinstitute/ch.psi.imagej.hdf5)

Other options are hdfview (https://support.hdfgroup.org/products/java/hdfview/) or
argos (https://github.com/titusjan/argos)

To view the tomographic raw data we suggest to install Fiji (https://imagej.net/Fiji) and add
the HDF plugin (https://github.com/paulscherrerinstitute/ch.psi.imagej.hdf5)

Other options are hdfview (https://support.hdfgroup.org/products/java/hdfview/) or
argos (https://github.com/titusjan/argos)


|-- ### Dragonfly

After your data are reconstructed you can visualize using Dragonfly (https://www.theobjects.com/dragonfly/index.html).

Login at the beamline Linux machine and then type:

  [tomo@handyn]$ cd /local/tomo/software/dragonfly
  [tomo@handyn]$ ./Dragonfly


|-- # Continuous rotation

You can set multiple rotation tomographic data sets to be collected continuously by simply setting a larger number of angles
in the  tomoScan control screen (https://tomoscan.readthedocs.io/en/latest/tomoScanApp.html#medm-files). For example to collect 100 (0-180) data sets
with 1,500 projections each you just need to set the number of projections to 150,000 and angle step to 0.12. The resulting stop angle will be 17,999.880 degree.

Warning

because of variable type and memory allocation in the hardware controlling the fly scan there is a limitation on the maximum number of angular positions at which you can trigger the collection of an image (this is set at 2-BM-A at 400,000). Also, the angle step must be selected so that the resulting stop angle is less than 65,283 degree (181 full rotations). This is because the controller can only count +/- 2^31 encoder counts from the zero point and with the ABR250 a range of +/- 2^31-1 encoder pulses at 0.0000304 deg/pulse corresponds to +/- 65,283 deg.


|-- # Cross crosshair

While running TomoScan you can enable the crosshair on the detector image by setting up the plug-in as shown in the image below:

  <image crosshair.png: tomo_user>


|-- # Data Management

Data ownership and local storage location is managed by Dmagic (https://dmagic.readthedocs.io/en/latest/index.html) by automatically retrieving user information from the APS scheduling system and updating the user info PVs at:

  <image medm_screen.png: tomo_user>

To run a user PV adptate:

  [user2bmb@arcturus]$ bash
  [user2bmb@arcturus]$ source /home/dm_bm/etc/dm.setup.sh
  [user2bmb@arcturus]$ dmagic show
  [user2bmb@arcturus]$ dmagic tag

you can also enter manually the user last name/email address/YYYY-MM.

Data management and sharing with users is manged by Globus (https://dmagic.readthedocs.io/en/latest/index.html). The Globus servers available at Argonnne are petrel#tomography and aps#data both accessible from the Globus portal (https://www.globus.org/).

You can select with server to use with:

  [user2bmb@arcturus]$ bash
  [user2bmb@arcturus]$ globus-server-name voyager (or petrel)

To automatically create YYYY-MM/PI_lastName/ on the globus server:

  [user2bmb@arcturus]$ bash
  [user2bmb@arcturus]$ globus dirs

and you can share this folder will all users listed in the scheduled proposal with:

  [user2bmb@arcturus]$ globus email --schedule

To upload data from the beamline to the Globus server

If using petrel#tomography, make a Globus copy between:

  [user2bmb@pg10ge]$  /local/data/YYYY-MM/PI_lastName/

and the same YYYY-MM/PI_lastName/ on  petrel (https://app.globus.org/file-manager?origin_id=e133a81a-6d04-11e5-ba46-22000b92c6ec&origin_path=%2F2-BM%2F).

If using the aps#tomography:

  [user2bmb@arcturus]$ bash
  [user2bmb@arcturus]$ source /home/dm_bm/etc/dm.setup.sh
  [user2bmb@arcturus]$ dm-station-gui

For more details see the DM instruction (https://confluence.aps.anl.gov/display/DMGT/2-BM+Deployment).

Petrel#tomography status is avaialble here (https://virtualhelpdesk.cels.anl.gov/blog/).


|-- ## Example

Upload data from tomo1:/data to voyager:

  (base) [user2bmb@handyn]$ bash
  (base) [user2bmb@handyn]$ source /home/dm_bm/etc/dm.setup.sh
  (base) [user2bmb@handyn]$ dm-station-gui

and presss Start New:

  <image dm_01.png: dm>

then select Add Experiment

  <image dm_02.png: dm>

Select the GUP associated with the data set or Continue Manually if there is no GUP (e.g. internal time):

  <image dm_03.png: dm>

Set the experiment Name, Dates, Type, Storage Root Path etc., then press Save

  <image dm_04.png: dm>

Once the experiment is created you can enter in the Data Directory or single file path the location of the data on tomo1 as /data/ …

  <image dm_05.png: dm>


|-- ## Delete

To delete files already uploaded to voyager use:

  (base) [user2bmb@handyn]$ dm-delete-files --experiment 2023-03-Xu --path-pattern LCO15v18b_232_rec

  There are 75 files that match specified criteria. If you continue:

    1) Experiment files will be removed from storage.
    2) Experiment files will be removed from the catalog.

  Proceed (yes|no)? [no]: yes


|-- # Energy change

The beamline x-ray energy change is managed by the energy cli (https://github.com/xray-imaging/energy) python library.

Login into user2bmb@arcturus then:

  [user2bmb@arcturus,42,~]$ bash
  [user2bmb@arcturus,42,~]$ conda activate ops
  [user2bmb@arcturus,42,~]$ energy set --mode Mono --energy-value 20

for help:

  energy -h

More detailed istructions are here the energy cli (https://github.com/xray-imaging/energy)


|-- # FDT data transfer

Fast Data Transfer (https://fast-data-transfer.github.io) is an open source application for efficient data transfers capable of
reading and writing at disk speed over wide area networks (with standard TCP)


|-- ## Linux to Linux

At the APS FDT in available at /APSshare/bin/fdt.jar, in the example below replace /APSshare/bin/ with the folder
where you installed fdt.jar.

To copy data from the data collection machine (pg10ge) to the data analysis machine (tomo1):

1. start the fdt server on tomo1:

  [tomo@tomo1]$ java -jar /APSshare/bin/fdt.jar -S

1. start the data transfer from pg10ge to tomo1 using the following syntax:

  [user2bmb@pg10ge]$ java -jar /APSshare/bin/fdt.jar -c {remote_server} -d {remote_dir} {local_fname}

For example:

  [user2bmb@pg10ge]$ java -jar /APSshare/bin/fdt.jar -c tomo1 -d /data/2022-11/Kemner/ /local/data/2022-11/Kemner/*.h5


|-- ## Windows to Linux

To copy data from windows from:

  S:\data\2019-02\user_name\test.h5

to linux machine:

  /local/data/user_name/

first install FDT (http://monalisa.cern.ch/FDT/) on both machines then go to the linux
machine start the fdt server:

  $ cd /local/data/fdt
  $ java -jar fdt.jar

then go to the windows machine from a dos prompt start the copy (client):

  $ cd C:\Users\se2admin\Desktop\FDT\
  $ java -jar fdt.jar -c handyn -d /local/data/Dunand/ S:\data\2019-02\Dunand\test.h5


|-- # GIT

The git commands to update, commit and push your local repository are:

  $ git status
  $ git add -u
  $ git add new_files
  $ git commit -m "my commit comment"
  $ git push origin master

then go to the github repository your fork originated from and create a pull request, then merge it.


|-- # Globus

globus (https://github.com/decarlof/globus) is a python script that automatically creates a directory on a globus server as “year-month/pi_last_name” (or any other preset path) and sends a customizable notification email to “pi_email” that includes the URL to the shared folder.

year-month, pi_last_name and pi_email area automatically retrieved from the APS scheduling system for the current user (see DTagging (https://github.com/decarlof/DTagging) for more information on how to create and update epics process variables containing user and experiment information using the APS scheduling system).

globus (https://github.com/decarlof/globus) also creates automatically year_month/user folders on both data collection and data analysis machines (e.g. pg10ge and handyn)

At the beginning of a new user beamtime login into user2bmb@arcturus then:

  start_tomo

and open the user info screen:

  <image medm_screen.png: tomo_user>

and make sure the user PV are updated correctly from the scheduling system if not hit the update button or manually enter the user last name/email address then:

  [user2bmb@arcturus]$ bash
  [user2bmb@arcturus]$ conda activate dm
  [user2bmb@arcturus]$ source /home/dm_bm/etc/dm.setup.sh

to create YYYY-MM/PI_last_name directories on data collection and data analysis computers:

  [user2bmb@arcturus]$ globus dirs

to send a notification email to the experiment PI with the Globus link from where to downalod the data:

  [user2bmb@arcturus]$ globus email

to send the same to all users listed in the proposal:

  [user2bmb@arcturus]$ globus email --schedule

Full help:

  [user2bmb@arcturus]$ globus -h
  usage: globus [-h] [--config FILE]  ...

  optional arguments:
      -h, --help     show this help message and exit
      --config FILE  File name of configuration

  Commands:

      init         Create configuration file
      show         Show endpoints
      email        Create folder on endpoint and send email with link to user
      dirs         Create folders on data collection and data analysis computers


|-- # Linear Stages

Camera to detector distance can be adjusted by moving the camera on a linear stage along Z.

These are the linear stages available at 2-BM:

Station Descriptiom Model                  Travel (mm) Image Controller            Info
------------------------------------------------------------------------------------------------------------
2-BM-B  Air bearing ABL 15030-ES17034      300               ENSEMBLE CL 10-40-MXU box link 0001, order 0001
2-BM-B  mechanical  PRO 225SL-1200-ES19357 1200

  <image aerotech_00003.png: 00003>

  <image aerotech_00004.png: 00004>

Start IOC for PRO 225SL-1200-ES19357 (moving the Optique Peter system in Z):

  [user2bmb@arcturus,~]$ 2bmbAERO start


|-- # Logs


|-- ## EPICS PV logging

To log and beamline PV variable use one of the tools available a 2bm tools (https://github.com/xray-imaging/2bm-tools).


|-- ## Experiment logging

To generate user logs to be published on google slides we developed tomolog (https://tomologcli.readthedocs.io/en/latest/). tomolog creates a google slide by extracting information from the raw hdf tomography data, projection and reconstruction image data.

To view the table for data stored by tomo@handyn:

  tomo@handyn$ bash
  (base)   tomo@handyn$ conda activate google
  (googlr) tomo@handyn$ tomolog run --file-name /data/2022-02/Salcedo/ --rec-type rec

show this help message and exit

File name of configuration file

Commands:

  init         Create configuration file
  run          Run data logging to google slides
  status       Show the tomolog status

To access/view experiment meta data we developed meta (https://github.com/xray-imaging/meta)

To run meta:

  tomo@handyn$ bash
  (base) tomo@handyn ~ $ conda activate meta
  (meta) tomo@handyn ~ $ meta show --file-name /local/data/base_file_name_001.h5

show this help message and exit

File name of configuration

Commands:

  init         Create configuration file
  status       Show meta status
  show         Show meta data extracted from -fname-name
  docs         Create in --doc-dir an rst file compatible with sphinx/readthedocs containing the DataExchange hdf file meta data


|-- # Optique Peter


|-- ## Triple Objective

  <image optique_peter_triple.png: tomo_user>

1. Test Report (https://anl.box.com/s/y14sqiekd4tofg4617b3vgf4ll2og41p)
2. User manual (https://anl.box.com/s/fnfh2okx1wx9n3a1h2k02r9odlqpxf5z)
3. Manuals (https://anl.app.box.com/folder/138012188876)
4. Specs (https://anl.box.com/s/8j9pkf96bkrijataekvnpjfmw89wzfdk)

Lens Lens Mag motor position (specs) ref on lens 1 (specs) ref on lens 1 (aligned)
----------------------------------------------------------------------------------
0    10 x     121.5942               59.6099               59.0151
1    5 x      61.9841                0.0000                -0.3690
2    1.1 x    2.3006                 -59.6835              -59.6865

With FLIR Oryx ORX-10G-51S5M-C

Lens Lens Mag Pixel size (μm) (specs) Pixel size (μm) (meas.) Pixels (H) Pixels (V) Detector pixel size  (μm) H filed of view (mm) V filed of view (mm)
-------------------------------------------------------------------------------------------------------------------------------------------------------
0    10  x    0.35                    0.350787                2448       2048       3.45                      0.84                 0.71
1    5  x     0.69                    0.699447                2448       2048       3.45                      1.69                 1.41
2    1.1 x    3.14                    3.125830                2448       2048       3.45                      7.68                 6.42

Scintillators:

Lens Lens Mag Scintillator material Scintillator thickness   (μm)
-----------------------------------------------------------------
0    10  x
1    5  x
2    1.1 x

  <image optique_peter_lens_motor.png: tomo_user>

Reference documentation (https://anl.box.com/s/ppb53bvkusbzvnx3j5ezgjsic4yetz81)


|-- ## EPICS suppoort

EPICS support for the Optique Peter system is provvided by mctOpticsApp (https://mctoptics.readthedocs.io/en/latest/mctOpticsApp.html#medm-files).

  <image mctOptics.png: ../../_images/mctOptics.png>


|-- # Oscilloscope setup

To operate 2-BM Digita Oscilloscope under epics/medm you neet to start a soft epics IOC with:

  [user2bmb@arcturus]$ cd /net/s6dserv/xorApps/epics/synApps_5_8/ioc/dlm/iocBoot/iocLinux
  [user2bmb@arcturus]$ run

then in a different xterm start the medm screen with:

  [user2bmb@arcturus]$ cd /net/s6dserv/xorApps/epics/synApps_5_8/ioc/dlm
  [user2bmb@arcturus]$ start_caQtDM

and select

1. DLM400 button to start the control screen for the scope then
2. caputRec
 2.1. click on (re)start recorder
 2.2. click on Refresh Menu
 2.3. click Select Macro to pick dlm or dummy
 2.4. click DO to collect a plot

• click on (re)start recorder
 • click on Refresh Menu
 • click Select Macro to pick dlm or dummy
 • click DO to collect a plot

to save the plots use

• scanH (for Harware-assisted scans)
 • set directory/file name where to save the data (in mda format)
 • if caputRec is set with dlm macro it collect multiple plots
 • if caputRec is set with dummy macro it ….

• set directory/file name where to save the data (in mda format)
 • if caputRec is set with dlm macro it collect multiple plots
 • if caputRec is set with dummy macro it ….

To view the mda files collected by the scan record use:

  [user2bmb@arcturus]$ /home/beams/MOONEY/bin/mdaExplorer

or:

  [user2bmb@arcturus]$ /APSshare/bin/dview

To convert MDA files to ASCII:

  [user2bmb@arcturus]$ /APSshare/bin/mda2ascii


|-- # Reconstruction


|-- ## tomopy-ij

To reconstruct using the tomopy ij (https://github.com/xray-imaging/tomopy-ij):

  [tomo@handyn]$ bash
  [tomo@handyn]$ activate tomopy-cli

start Fiji:

  (tomopy-cli) tomo@handyn ~ $ /home/beams/TOMO/Software/Fiji.app/ImageJ-linux64

then ImageJ->File->Open and select /local/tomo/conda/tomopy-ij/tomopy_ij.py:

  <image imagej-ij.png: imagej-ij>

then press run on:

  <image imagej-ij-run.png: imagej-ij-run>

to obtain the main tomopy-ij screen:

  <image imagej-ij-start.png: imagej-ij-start>

for more details check tomopy ij (https://github.com/xray-imaging/tomopy-ij).


|-- ## tomopy-cli

To manually reconstruct a data set, use the tomopy cli (https://github.com/tomography/tomopy-cli):

  [tomo@handyn]$ tomopy recon --file-name /local/data/YYYY-MM/PI_lastName/file.h5

To automatically find the center for all data sets in a directory use:

  [tomo@handyn]$ tomopy find_center --file-name /local/data/2021-02/Stock/180/

this command will generate a parameter file (extra_params.yaml) containing the centers.

To run a single slice reconstruction on all the data sets using the parameter file use:

  [tomo@handyn]$ tomopy recon  --rotation-axis-auto manual  --gridrec-padding True --nsino 0.5 --reconstruction-type slice --file-name  /local/data/2021-02/Stock/180/ --parameter-file /local/data/2021-02/Stock/180/extra_params.yaml

After inspecting the reconstructed slices, you can adjust the center by editing the parameter file, then you can run the full reconstruction for all data sets with:

  [tomo@handyn]$ tomopy recon  --gridrec-padding True --remove-stripe-method fw --fw-pad True --nsino-per-chunk 128 --reconstruction-type full --file-name  /local/data/2021-02/Stock/180/ --parameter-file /local/data/2021-02/Stock/180/extra_params.yaml


|-- ### 360 deg data sets

To do a try reconstrution on a 0-360 deg data set run:

  [tomo@handyn]$ tomopy recon --reconstruction-type try --rotation-axis-auto manual --gridrec-padding True --remove-stripe-method fw --fw-pad True  --file-type double_fov --rotation-axis 50 --center-search-width 45 --file-name /local/data/2021-02/Stock/360/01_010.h5

once the center is selected run the full reconstruction with:

  [tomo@handyn]$ tomopy recon --reconstruction-type full --rotation-axis-auto manual --gridrec-padding True --remove-stripe-method fw --fw-pad True  --nsino-per-chunk 128 --file-type double_fov   --file-name /local/data/2021-02/Stock/360/01_010.h5 --rotation-axis 30.0


|-- # Reference

Here you can find links to  2-BM technical reference material like drawings, hardware manuals etc.


|-- ## Source

Parameters                           Value      Units
-------------------------------------------------------------------
Storage Ring Electron Energy         7.0        GeV
Storage Ring Electron Current        100.0      mA
Bend Radius                          38.96      m
Peak Magnetic Field                  0.6        Tesla
Critical X-ray Energy                19.5       keV
Horizontal Source Size               198        μm FWHM
Vertical Source Size                 78         μm FWHM
Vertical Source Divergence at 11 keV 157        μ rad FWHM
Flux at 19.5 keV                     1.12x10^13 /sec/0.1%BW/mrad(H)


|-- ### Steering correction

To adjust the beam position Vertical Angle or Vertical Position reported in the BMP control screen:

  <image bpm_00.png: bpm>

use the APS steering request (https://ops.aps.anl.gov/Internal/Reference/Test2/steeringqueue.php) web page.

  <image bpm_01.png: bpm>

Warning

The APS steering request web page shows the green request a steering button only on the beamline authorized computer.


|-- ## Filters

  <image filters.png: filters>


|-- ## Mirror

The pre-APS-U mirror (https://anl.box.com/s/nyvibklz6ckkm148aoo02ht3e0bowxs9) was a flat mirror with two coatings:

  <image mirror_01.png: mirror>

Coating Nominal angle (mrad)
----------------------------
Cr      2.657
Pt      2.657

This mirror and mirror tank will be replaced as specified in the Mirror Retrofit (https://anl.box.com/s/m3m0j77m081az932ae4lqrbz4lgebw4u) document.


|-- ## DMM Multi-layer

2-BM has a double crystal multi-layer monochromator (DMM) to change energy.
The beamline x-ray energy change is managed by the energy cli (https://github.com/xray-imaging/energy) python library.

Login into user2bmb@arcturus then:

  [user2bmb@arcturus,42,~]$ bash
  [user2bmb@arcturus,42,~]$ energy set --mode Mono --energy-value 20

for help:

  energy -h

More detailed instructions are here the energy cli (https://github.com/xray-imaging/energy)

Technical infomation about the DMM are available at the links below:

Station Descriptiom Images                Info
----------------------------------------------------------------------------------------------------
2-BM-A  DMM         dmm_01.png,dmm_02.png drawings1, drawings2, crystals specs, documentation folder

  <image dmm_01.png: 00001>

  <image dmm_02.png: 00002>


|-- ## Beam-Sample Distance

The distance between the table and the scintillator center (current setup) at 2-BM-B is 415 mm


|-- ## Slits Drawings

The slits at 2-BM are standard APS L3-20. Technical as-built drawings are available here (https://anl.box.com/s/sgmoux6db8tsx71pvifzkf2ajopfidqx).


|-- # Rotary Stages

we have different sets of rotary stages:

Station Descriptiom Ensemble Settings Model             Image Controller                 Speed (rpm) Load axial (kg) Info
-------------------------------------------------------------------------------------------------------------------------------------------------------------
2-BM    spindle                       ABS2000-1000AS-RU       ENSEMBLEHLE10-40-A-MXH (*) 6000        18              box link 0004, box link 0002, order 0004
2-BM-A  fast tomo   Ensemble Settings ABS250MP-M-AS           ENSEMBLEHLE10-40-A-MXH (*) 500         66              box link 0004, box link 0003, order 0005
2-BM-B  mona tomo   Ensemble Settings ABRS-150MP-M-AS         ENSEMBLEHLE10-40-A-MXH (*) 500         8               box link 0004, order 0006

  <image aerotech_00001.png: 00003>

  <image aerotech_00002.png: 00004>

  <image aerotech_00002.png: 00004>

(*) replaced with ENSEMBLEML10-40-IO-MXH


|-- ## Ensemble

The Ensemble Parameter Setup currently in use at 2-BM-A and 2-BM-B stations can found at Ensemble Settings (https://anl.app.box.com/s/serp2nlyzk0ljvpqczc3btm7ikn9pvlj)

ABRS150MP         ABRS250MP         Units
-----------------------------------------------------------------------------
Fundamental Encoder Resolution 3600              11840             lines/rev
Encoder scale factor           148               45
Encoder pulses per revolution  532800            532800            pulses/rev
Encoder resolution             0.000675675675676 0.000675675675676 deg/pulse


|-- ## PSO

Details on the Position Synchronized Output (PSO) are in the Aerotech Manual (https://anl.box.com/s/l43qkqlhy21f4a8wetmrqbeqz9c7am72)


|-- # Scanning

A regular tomographic scan at 2-BM consists of a series of projections collected in fly scan mode and a set of dark/flat images collected before/after/both the projections. These tasks are accomplished by tomoScan (https://tomoscan.readthedocs.io/en/latest/index.html). 2-BM can also collect tomographic data in streaming mode. In this case projections and dark/flat images are broadcasted as EPICS PVs and the actual data saving only occurs on-demand. The data collected in streaming mode is accomplished by tomoScanStream (https://tomoscan.readthedocs.io/en/latest/api/tomoscan_stream_2bm.html). During the streaming data collection, a real-time 3-orthogonal slice reconstruction is also generated using tomoStream (https://tomostream.readthedocs.io/en/latest/about.html)

Since at 2-BM we have two startion (A and B), tomoScan and tomoStream are installed at both station. To access the main control screens

  [user2bmb@arcturus]$ start_epics

  <image 2bma_beamline.png: 2bma_beamline>

  <image 2bmb_beamline.png: 2bmb_beamline>

To start the main tomography control screens for 2-BM-A or 2-BM-B for scanning or streaming data collection select in the main beamline control screens the corresponding screen for user, admin, tomoscan, tomoscan 2-BM:

  <image tomo_01.png: tomo_01>

  <image tomo_02.png: tomo_02>

  <image tomo_03.png: tomo_03>


|-- ## TomoScan

• Startup
• Data collection

There are 2 installation of tomoScan at 2-BM to support tomography in the A and B stations.


|-- ### Startup

For experiments in 2-BM-A:

  [user2bmb@arcturus]$ ~/tomoscan_start_A.sh

for experiments in 2-BM-B:

  [user2bmb@arcturus]$ ~/tomoscan_start_B.sh

a_tomoscan_start.sh and b_tomoscan_start.sh for scripts content.


|--- # a_tomoscan_start.sh

  gnome-terminal --tab --title "ADetector IOC" -- bash -c "ssh -t user2bmb@pg10ge \
  '/net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/iocSpinnaker/softioc/2bmbSpinnaker.sh stop; \
  sleep 1; \
  /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/iocSpinnaker/softioc/2bmbSpinnaker.sh start; \
  sleep 1; \
  /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/iocSpinnaker/softioc/2bmbSpinnaker.sh console; \
  bash'" 

  gnome-terminal --tab --title "ADetector UI" -- bash -c "ssh -t user2bmb@pg10ge \
  '/net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/iocSpinnaker/softioc/2bmbSpinnaker.sh medm; csh'" 

  sleep 10

  gnome-terminal --tab --title "tomoScan IOC" -- bash -c "ssh -t user2bmb@pg10ge \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  pkill -9 tomoScanApp; \
  ./start_IOC;\
  bash'" 

  sleep 5

  gnome-terminal --tab --title "tomoScan py server" -- bash -c "ssh -t user2bmb@pg10ge \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  bash -c \"source ~/.bashrc; python -i start_tomoscan.py\";\
  bash'" 

  gnome-terminal --tab --title "tomoScan UI" -- bash -c "ssh -t user2bmb@pg10ge \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  ./start_medm; \
  csh'"


|--- # b_tomoscan_start.sh

  gnome-terminal --tab --title "ADetector IOC" -- bash -c "ssh -t user2bmb@lyra \
  '/net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/ioc2bmbSP1/softioc/2bmbPG1.sh stop; \
  sleep 1; \
  /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/ioc2bmbSP1/softioc/2bmbPG1.sh start; \
  sleep 1; \
  /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/ioc2bmbSP1/softioc/2bmbPG1.sh console;\
  sleep 12;\
  caput 2bmbPG1:cam1:Acquire 1\
  csh'" 

  sleep 10

  gnome-terminal --tab --title "ADetector UI" -- bash -c "ssh -t user2bmb@lyra \
  '/net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/ioc2bmbSP1/softioc/2bmbPG1.sh medm; csh'" 

  gnome-terminal --tab --title "tomoScan IOC" -- bash -c "ssh -t user2bmb@lyra \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  pkill -9 tomoScanApp; \
  ./start_IOC;\
  bash'" 

  sleep 4

  gnome-terminal --tab --title "tomoScan py server" -- bash -c "ssh -t user2bmb@lyra \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  bash -c \"source ~/.bashrc; python -i start_tomoscan.py\";\
  bash'" 

  gnome-terminal --tab --title "tomoScan UI" -- bash -c "ssh -t user2bmb@lyra \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  ./start_medm; \
  csh'"

The tomoscan startup steps executed by a_tomoscan_start.sh for experiments in 2-BM-A are described in detail below.


|-- ### Data collection

Support for tomography data collection is provided by tomoScan_2bm (https://tomoscan.readthedocs.io/en/latest/api/tomoscan_2bm.html) a tomoScan (https://tomoscan.readthedocs.io/en/latest/index.html) derived classes to implement the data collection at 2-BM. To run tomoScan (https://tomoscan.readthedocs.io/en/latest/index.html) in 2-BM-A:

Start area detector
- EPICS IOC

  [user2bmb@pg10ge]$ 2bmSP2 start

• medm screen

  [user2bmb@pg10ge]$ 2bmSP2 medm

Start tomoScan

• EPICS IOC

  [user2bmb@pg10ge]$ cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BMA/
  [user2bmb@pg10ge]$ ./start_IOC

• tomoscan_2bm python server

  [user2bmb@pg10ge]$ bash
  [user2bmb@pg10ge]$ cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BMA/
  [user2bmb@pg10ge]$ python -i start_tomoscan.py

• medm screen

  [user2bmb@pg10ge]$ cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BMA/
  [user2bmb@pg10ge]$ ./start_medm

  <image tomoScan.png: tomoScan>

The tomoScan allows to configure and collect a single tomographic dataset.

Command-line-interface

  [user2bmb@pg10ge]$ tomoscan -h
  usage: tomoscan [-h] [--config FILE] [--version]  ...
  optional arguments:
    -h, --help     show this help message and exit
    --config FILE  File name of configuration file
    --version      show program's version number and exit

    Commands:

  init         Create configuration file
  status       Show tomoscan status
  single       Run a single tomographic scan
  vertical     Run a vertical tomographic scan
  horizontal   Run a horizontal tomographic scan
  mosaic       Run a mosaic tomographic scan

each command help is accessible with -h:

  Usage: tomoscan vertical [-h] [--scan-type SCAN_TYPE]
                         [--tomoscan-db-home FILE]
                         [--tomoscan-prefix TOMOSCAN_PREFIX]
                         [--in-situ-pv IN_SITU_PV]
                         [--in-situ-pv-rbv IN_SITU_PV_RBV]
                         [--in-situ-start IN_SITU_START]
                         [--in-situ-step-size IN_SITU_STEP_SIZE]
                         [--sleep-steps SLEEP_STEPS] [--sleep-time SLEEP_TIME]
                         [--vertical-start VERTICAL_START]
                         [--vertical-step-size VERTICAL_STEP_SIZE]
                         [--vertical-steps VERTICAL_STEPS] [--config FILE]
                         [--in-situ] [--logs-home FILE] [--sleep] [--testing]
                         [--verbose]

  optional arguments:
  -h, --help            show this help message and exit
  --scan-type SCAN_TYPE
                        For internal use to log the tomoscan status (default: )
  --tomoscan-db-home FILE
                        Log file directory
                        (default: /home/user2bmb/epics/synApps/support/tomoscan/db/)
  --tomoscan-prefix TOMOSCAN_PREFIX
                        The tomoscan prefix, i.e.'13BMDPG1:TS:' or
                        '2bma:TomoScan:' (default: 2bma:TomoScan:)
  --in-situ-pv IN_SITU_PV
                        Name of the in-situ EPICS process variable to set
                        (default: )
  --in-situ-pv-rbv IN_SITU_PV_RBV
                        Name of the in-situ EPICS process variable to read back (default: )
  --in-situ-start IN_SITU_START
                        In-situ start (default: 0)
  --in-situ-step-size IN_SITU_STEP_SIZE
                        In-situ step size (default: 1)
  --sleep-steps SLEEP_STEPS
                        Number of sleep/in-situ steps (default: 1)
  --sleep-time SLEEP_TIME
                        Wait time (s) between each data collection scan (default: 0)
  --vertical-start VERTICAL_START
                        Vertical start position (mm) (default: 0)
  --vertical-step-size VERTICAL_STEP_SIZE
                        Vertical step size (mm) (default: 1)
  --vertical-steps VERTICAL_STEPS
                        Number of vertical steps (default: 1)
  --config FILE         File name of configuration file
                        (default: /home/user2bmb/tomoscan.conf)
  --in-situ             Enable in-situ PV scan during sleep time (default: False)
  --logs-home FILE      Log file directory (default: /home/user2bmb/logs)
  --sleep               Enable sleep time between tomography scans (default: False)
  --testing             Enable test mode, tomography scan will not run (default: False)
  --verbose             Verbose output (default: False)

to run a single scan with the parameters set in the tomoScan IOC and the tomoscan-cli:

  [user2bmb@pg10ge]$ tomoscan single

tomoscan supports also vertical, horizontal and mosaic tomographic scans with:

  [user2bmb@pg10ge]$ tomoscan vertical
  [user2bmb@pg10ge]$ tomoscan horizontal
  [user2bmb@pg10ge]$ tomoscan mosaic

to run a vertical scan:

  $ [user2bmb@pg10ge]$ tomoscan vertical --vertical-start 0 --vertical-step-size 0.1 --vertical-steps 2

  2020-05-29 16:54:03,354 - vertical scan start
  2020-05-29 16:54:03,356 - vertical positions (mm): [0.  0.1]
  2020-05-29 16:54:03,358 - SampleInY stage start position: 0.000 mm
  2020-05-29 16:54:03,362 - single scan start
  2020-05-29 16:54:51,653 - single scan time: 0.805 minutes
  2020-05-29 16:54:51,654 - SampleInY stage start position: 0.100 mm
  2020-05-29 16:54:51,658 - single scan start
  2020-05-29 16:55:47,607 - single scan time: 0.932 minutes
  2020-05-29 16:55:47,607 - vertical scan time: 1.738 minutes
  2020-05-29 16:55:47,608 - vertical scan end

tomoscan-cli always stores the last used set of paramters so to repeat the above vertical scan:

  [user2bmb@pg10ge]$ tomoscan vertical

use -h for the list of supported parameters.

To repeat the vertical scan 5 times with 60 s wait time between each:

  [user2bmb@pg10ge]$ tomoscan vertical --sleep --sleep-steps 10 --sleep-time 60

to repeat the same:

  [user2bmb@pg10ge]$ tomoscan vertical --sleep

while:

  [user2bmb@pg10ge]$ tomoscan vertical

repeats a single vertical scan with –vertical-start 0 –vertical-step-size 0.1 –vertical-steps 5.

To reset the tomoscan-cli status:

  [user2bmb@pg10ge]$ tomoscan init

after deleting the tomoscan.conf file if already exists.


|-- ## TomoStream

There are 2 major components supporting streaming at 2-BM:

• Streaming data collection
• Streaming data reconstruction


|-- ### Startup

To start streaming data collection and streaming data reconstruction run tomostream_start.sh,

for experiments in 2-BM-A:

  [tomo@handyn]$ ~/tomostream_start.sh

for experiments in 2-BM-B:

  [user2bmb@arcturus]$ ~/tomostream_start.sh

a_tomostream_start.sh and b_tomostream_start.sh for scripts content.


|--- # a_tomostream_start.sh

  gnome-terminal --tab --title "ADetector IOC" -- bash -c "ssh -t user2bmb@pg10ge \
  '/net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/iocSpinnaker/softioc/2bmbSpinnaker.sh stop; \
  sleep 1; \
  /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/iocSpinnaker/softioc/2bmbSpinnaker.sh start; \
  sleep 1; \
  /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/iocSpinnaker/softioc/2bmbSpinnaker.sh console; \
  bash'" 

  gnome-terminal --tab --title "ADetector UI" -- bash -c "ssh -t user2bmb@pg10ge \
  '/net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/iocSpinnaker/softioc/2bmbSpinnaker.sh medm; csh'" 

  sleep 10

  gnome-terminal --tab --title "tomoScan IOC" -- bash -c "ssh -t user2bmb@pg10ge \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  pkill -9 tomoScanApp; \
  ./start_IOC;\
  bash'"

  sleep 5

  gnome-terminal --tab --title "tomoScan py server" -- bash -c "ssh -t user2bmb@pg10ge \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  bash -c \"source ~/.bashrc; python -i start_tomoscan_stream.py\";\
  bash'" 

  gnome-terminal --tab --title "tomoScan UI" -- bash -c "ssh -t user2bmb@pg10ge \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  ./start_medm; \
  csh'" 

  gnome-terminal --tab --title "tomoStream IOC" -- bash -c "ssh -t tomo@handyn \
  'cd /local/tomo/epics/synApps/support/tomostream/iocBoot/iocTomoStream/; \
  pkill -9 tomoStreamApp; \
  ./start_IOC;\
  bash'" 

  sleep 5

  gnome-terminal --tab --title "tomoStream py server" -- bash -c "ssh -t tomo@handyn \
  'cd /local/tomo/epics/synApps/support/tomostream/iocBoot/iocTomoStream/; \
  bash -c \"source ~/.bashrc; conda activate streaming; python -i start_tomostream.py\";\
  bash'" 

  sleep 5

  gnome-terminal --tab --title "tomoStream UI" -- bash -c "ssh -t tomo@handyn \
  'cd /local/tomo/epics/synApps/support/tomostream/iocBoot/iocTomoStream/; \
  ./start_medm; \
  csh'" 

  # gnome-terminal --tab --title "tomo UI" -- bash -c "ssh -t user2bmb@arcturus \
  # './start_tomo_adm; \
  # csh'"


|--- # b_tomostream_start.sh

  gnome-terminal --tab --title "ADetector IOC" -- bash -c "ssh -t user2bmb@lyra \
  '/net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/ioc2bmbSP1/softioc/2bmbPG1.sh stop; \
  sleep 1; \
  /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/ioc2bmbSP1/softioc/2bmbPG1.sh start; \
  sleep 1; \
  /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/ioc2bmbSP1/softioc/2bmbPG1.sh console;\
  sleep 12;\
  caput 2bmbPG1:cam1:Acquire 1\
  csh'" 

  sleep 10

  gnome-terminal --tab --title "ADetector UI" -- bash -c "ssh -t user2bmb@lyra \
  '/net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-1/iocs/spinnakerIOC/iocBoot/ioc2bmbSP1/softioc/2bmbPG1.sh medm; csh'" 

  gnome-terminal --tab --title "tomoScan IOC" -- bash -c "ssh -t user2bmb@lyra \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  pkill -9 tomoScanApp; \
  ./start_IOC;\
  bash'" 

  sleep 4

  gnome-terminal --tab --title "tomoScan py server" -- bash -c "ssh -t user2bmb@lyra \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  bash -c \"source ~/.bashrc; python -i start_tomoscan_stream.py\";\
  bash'" 

  gnome-terminal --tab --title "tomoScan UI" -- bash -c "ssh -t user2bmb@lyra \
  'cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScan_2BM/; \
  ./start_medm; \
  csh'" 

  gnome-terminal --tab --title "tomoStream IOC" -- bash -c "cd /local/tomo/epics/synApps/support/tomostream/iocBoot/iocTomoStream/; \
  ./start_IOC; \
  bash" 

  sleep 3

  gnome-terminal --tab --title "tomoStream py server" -- bash -c "cd /local/tomo/epics/synApps/support/tomostream/iocBoot/iocTomoStream/; \
  bash -c \"source ~/.bashrc; source activate streaming; python -i start_tomostream.py;\" \
  bash" 


  gnome-terminal --tab --title "tomoStream UI" -- bash -c "cd /local/tomo/epics/synApps/support/tomostream/iocBoot/iocTomoStream/; \
  ./start_medm; \
  bash" 

  # gnome-terminal --tab --title "tomo UI" -- bash -c "ssh -t user2bmb@arcturus \
  # './start_tomo_adm; \
  # csh'"

The streaming data collection and streaming data reconstruction startup steps executed by b_tomostream_start.sh for experiments in 2-BM-B are described in detail below.


|-- ### Streaming data collection

Support for streaming data collection is provided by tomoScanStream (https://tomoscan.readthedocs.io/en/latest/api/tomoscan_stream_2bm.html) a tomoScan (https://tomoscan.readthedocs.io/en/latest/index.html) derived classes to implement the streaming data collection. To run tomoScanStream (https://tomoscan.readthedocs.io/en/latest/api/tomoscan_stream_2bm.html) in 2-BM-B:

Start area detector

• EPICS IOC

  [user2bmb@lyra]$ 2bmbSP2 start
  [user2bmb@lyra]$ 2bmbSP2 console

• medm screen

  [user2bmb@lyra]$ 2bmbSP2 medm

Note: the IOC prefix for [user2bmb@lyra]$ 2bmbSP2 start is 2bmbSP1:

Start tomoScanStream

• EPICS IOC

  [user2bmb@lyra]$ cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScanStream_2BMB/
  [user2bmb@lyra]$ ./start_IOC

• tomoscan_stream python server

  [user2bmb@lyra]$ bash
  [user2bmb@lyra]$ cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScanStream_2BMB/
  [user2bmb@lyra]$ python -i start_tomoscan_stream.py

• medm screen

  [user2bmb@lyra]$ cd /local/user2bmb/epics/synApps/support/tomoscan/iocBoot/iocTomoScanStream_2BMB/
  [user2bmb@lyra]$ ./start_medm

  <image tomoScanStream.png: ../../_images/tomoScanStream.png>

Streaming data collection features can be controlled from the Streaming Control section and includes:

• On-demand data capturing with saving in a standard Data Exchange hdf5file (https://dxfile.readthedocs.io/en/latest/source/xraytomo.html)
• Set a number of projectons (“Pre count”) collected before a triggered data capturing event to be also saved in the same hdf5 file
• binning data streaming

dark-flat field images can be re-taken on-demand at any time during data collection by selecting Now next to the Collect flat (dark) fields.

When collecting data in streaming mode, projections, dark and flat images are broadcasted using PVaccess (https://epics-controls.org/resources-and-support/documents/pvaccess/) and can be retrieved as EPICS PVs. Projections are streamed by the detector PVA1 plugin while dark and flat are streamed by tomoScanStream with a dark/flat Stream Prefix configurable under tomoScan/Epics PV names PVs screen:

  <image tomoScanStreamEPICS_PVs.png: ../../_images/tomoScanStreamEPICS_PVs.png>

Using the dark/flat Stream Prefix above, the PVs for data and flat are:

  2bmb:TomoScanStream:flat
  2bmb:TomoScanStream:dark

These PVs together with the projection PV (in this case 2bmbSP1:Pva1:) will be passed as input to the tomography streaming reconstruction tool tomoStream (https://tomostream.readthedocs.io/en/latest/about.html).

Streaming data reconstruction

The projection, dark and flat image broadcast provided by tomoScanStream (https://tomoscan.readthedocs.io/en/latest/api/tomoscan_stream_2bm.html) can be used to reconstruct in real-time 3 orthogonal slices. This task is accomplished by tomoStream (https://tomostream.readthedocs.io/en/latest/about.html).

Start tomoStream

• EPICS IOC

  [tomo@handyn]$ cd /local/tomo/epics/synApps/support/tomostream/iocBoot/iocTomoStream/
  [tomo@handyn]$ ./start_IOC

• tomostream python server

  [tomo@handyn]$ bash
  [tomo@handyn]$ cd /local/tomo/epics/synApps/support/tomostream/iocBoot/iocTomoStream/
  [tomo@handyn]$ source activate streaming
  [tomo@handyn]$ python -i start_tomostream.py

• medm screen

  [tomo@handyn]$ bash
  [tomo@handyn]$ cd /local/tomo/epics/synApps/support/tomostream/iocBoot/iocTomoStream/
  [tomo@handyn]$ ./start_medm

  <image tomoStream.png: ../../_images/tomoStream.png>

Streaming data reconstruction features are:

• Streaming reconstruction of 3 (X-Y-Z) ortho-slices through the sample
• On demand adjustment of the
 • X Y Z ortho-slice positions
 • reconstruction rotation center
 • reconstruction filter

• X Y Z ortho-slice positions
 • reconstruction rotation center
 • reconstruction filter

and can be controlled from the main tomoStream control screen.

The output of tomostream is a live reconstruction:

  <image tomoStreamRecon.png: ../../_images/tomoStreamRecon.png>

This is broadcasted as a PVA that can be diplayed by ImageJ using the EPICS_NTNDA_Viewer (https://cars9.uchicago.edu/software/epics/areaDetectorViewers.html) plug-in:

  <image ImageJ_NTNDA_01.png: ../../_images/ImageJ_NTNDA_01.png>

  <image ImageJ_NTNDA_02.png: ../../_images/ImageJ_NTNDA_02.png>

The PVA name broadcasting the recontruction can be set in the tomoStream/Epics PV names under Recon PVA screen:

  <image tomoStreamEPICS_PVs.png: ../../_images/tomoStreamEPICS_PVs.png>

While the sample is rotating is possible to optimize instrument (alignment, focus, sample to detector distance etc.) and  beamline (energy etc.) conditions and monitor the effect live on the 3 orthogonal slices. It is also possible to automatically trigger data capturing based on events occurring in the sample and its environment as a result of segmentation or machine learning.


|-- # Slack

There are several tools support Slack integration with the beamline opereration, these include:


|-- ## slack gup

Slack GUP (https://github.com/xray-imaging/slack-gup) Creates a slack channel using General User Proposal (GUP) number (GUP-#) and invites in the channel all users listed in the proposal. To use slack gup

  (slack) usertxm@txmtwo ~ $ slack gup

  2021-11-19 14:49:19,977 - 2021-11-19 20:49:19.977194+00:00
  2021-11-19 14:49:19,977 - Found valid proposal id
  2021-11-19 14:49:20,202 - 2021-11-19 20:49:20.202317+00:00
  2021-11-19 14:49:20,202 - GUP proposal_id: 75438
  2021-11-19 14:49:20,410 - 2021-11-19 20:49:20.410172+00:00
  2021-11-19 14:49:20,410 - Found valid proposal start time
  2021-11-19 14:49:20,410 - Proposal starting date: 2021_11_19
  2021-11-19 14:49:20,634 - 2021-11-19 20:49:20.633961+00:00
  2021-11-19 14:49:20,634 - Found valid experimenters
  2021-11-19 14:49:20,634 - Proposal PI: judge
  2021-11-19 14:49:20,856 - 2021-11-19 20:49:20.856787+00:00
  2021-11-19 14:49:20,857 - Found valid experimenters
  2021-11-19 14:49:20,857 - Added kkumar26@uic.edu to the e-mail list.
  2021-11-19 14:49:20,857 - Added eallen28@uic.edu to the e-mail list.
  2021-11-19 14:49:20,857 - Added mdato2@uic.edu to the e-mail list.
  2021-11-19 14:49:20,857 - Added roy.indrani1996@gmail.com to the e-mail list.
  2021-11-19 14:49:20,857 - Added jcabana@uic.edu to the e-mail list.
  2021-11-19 14:49:20,857 - Added wjudge2@uic.edu to the e-mail list.
  2021-11-19 14:49:20,858 - Found valid emails
  2021-11-19 14:49:21,284 - Created slack channel: 2021_11_19_judge_gup_75438
  2021-11-19 14:49:21,284 - Please invite to the slack channel 32_id_c_2021_11_19_judge_gup_75438 these users ['kkumar26@uic.edu', 'eallen28@uic.edu', 'mdato2@uic.edu', 'roy.indrani1996@gmail.com', 'jcabana@uic.edu', 'wjudge2@uic.edu', 'vnikitin@anl.gov', 'decarlo@anl.gov']
  2021-11-19 14:49:21,284 - General
  2021-11-19 14:49:21,284 -   config           /home/beams/USERTXM/slack.conf
  2021-11-19 14:49:21,285 -   verbose          True
  2021-11-19 14:49:21,285 - Settings
  2021-11-19 14:49:21,285 -   beamline         32_id_c
  2021-11-19 14:49:21,285 -   set              0.0
  2021-11-19 14:49:21,285 - Beamline contacts
  2021-11-19 14:49:21,286 -   primary_beamline_contact_email vnikitin@anl.gov
  2021-11-19 14:49:21,286 -   secondary_beamline_contact_email decarlo@anl.gov

to share the newly created channels with the proposal listed above follow the share instructions (https://github.com/xray-imaging/slack-gup#share).

For help:

  (slack) usertxm@txmtwo ~ $ slack gup -h
  usage: slack gup [-h] [--beamline {None,2_bm,7_bm,8_id_i,20_bm,29_id,32_id_b,32_id_c}] [--set SET]
                   [--primary-beamline-contact-email FILE] [--secondary-beamline-contact-email FILE] [--config FILE]
                   [--verbose]

  optional arguments:
    -h, --help            show this help message and exit
    --beamline {None,2_bm,7_bm,8_id_i,20_bm,29_id,32_id_b,32_id_c}
                          When set adds the beamline name as a prefix to the slack channel name (default: None)
    --set SET             Number of +/- number days for the current date. Used for setting a channel for past/future user
                          groups (default: 0)
    --primary-beamline-contact-email FILE
                          Beamline scientist email (default: pshevchenko@anl.gov)
    --secondary-beamline-contact-email FILE
                          Beamline scientist email (default: decarlo@anl.gov)
    --config FILE         File name of configuration (default: /home/beams/USERTXM/slack.conf)
    --verbose             Verbose output (default: True)


|-- ## slack bot

Slack bot (https://github.com/xray-imaging/slack-bot) automatical responds to predefined keywords, i.e. ring, energ, users etc., returning a list of PV name/value associated with that keywords.

To start the slack bot server:

  $ slackbot start --beamline 2-bm --channel-name automated
    Bolt app is running!

usage:

  <image slack_bot_help.png: ../../_images/slack_bot_help.png>

  <image slack_bot_ring.png: ../../_images/slack_bot_ring.png>


|-- ## pv logger

pv logger (https://github.com/xray-imaging/pv) provides an EPICS PV logger with slack support

setup:

  (slack) usertxm@txmtwo $ pv set --pv-list "2bma:TomoScan:Energy, 2bma:TomoScan:EnergyMode"

usage:

  <image pv_log.png: ../../_images/pv_log.png>

  <image pv_slack.png: ../../_images/pv_slack.png>


|-- # User mail list

Actvive 2-BM user contact information is available below:

• 2020 03 (https://anl.box.com/s/4vzs8tzxrq4ikrhhuqvkpowqikxg83mz)


|-- # Vibration Monitors

The APS provides a list of EPICS PVs monitoring the vibration (https://ops.aps.anl.gov/logging/VMS.html) of the APS floor.
To access the PVs:

  [user2bmb@arcturus]$ caget caget S31:VMS:Y:RMS:200HzBW
  [user2bmb@arcturus]$ S31:VMS:Y:RMS:200HzBW      2.75468e-10

live plots (https://ops.aps.anl.gov/VMS/VMS.html) like the one below are also available:

  <image vibration.png: fastTomo>


|-- # SSH key update

To update the ssh key between beamline control and detector control machines:

  [user2bmb@arcturus] $ ssh-copy-id remote_username@server_ip_address


|-- # Video recording

To obtain comoputer screen video recording use:

  tomo@handyn ~ $ conda install -c orodbhen simple-screen-recorder
  tomo@handyn ~ $ simplescreenrecorder

You can video record an experiment with:

  tomo@handyn ~ $ simplescreenrecorder

  <image recorder.png: recorder>


|-- # Web Cam

• Multi screen
• Time Zone

To access the old beamline web cam ssh to the beamline then open web browser and use IP address:

  XXX.XX.143.19

New webcams are accessible from:

  2-BM-A: xxx.xx.113.137
   2-BM-B: xxx.xx.113.162
  32-ID-B: xxx.xx.102.71
  32-ID-B: xxx.xx.102.89
  32-ID-C: xxx.xx.102.90
  32-ID-C: xxx.xx.102.88


|-- ## Multi screen

You can dispay multiple cameras on the same web page by configurting:

  <image webCamMultiple.png: webCamMultiple>


|-- ## Time Zone

Warning

factorty default time zone is Osaka, Japan. Change these and use ntp1.xray.aps.anl.gov (164.54.100.129) or ntp2.xray.aps.anl.gov (164.54.100.155) the set the camera ntp server to synchronize with the APS time server. See below the webcam NTP configuration page.

  <image webCamNtp.png: webCamNtp>

Also you can configure webcam preset position with:

  <image webCamPreset.png: webCamPreset>

  <image webCamPresetPos.png: webCamPresetPos>


|-- # Windows

There are few windows machines at the beamline running specific software. These are reachable via remote access with:

  [user2bmb@arcturus,41,~]$ remote_Sec2LT06
  [user2bmb@arcturus,41,~]$ remote_postulate
  [user2bmb@arcturus,41,~]$ remote_turan

or directly with:

  xfreerdp -u username -d domain -g 1900x1000 computername


|- # TroubleShoot

1. Bluesky time out error
2. Detectors
3. EPICS ioc reboot
4. EPICS ioc reboot
5. Globus is down
6. GUI play/stop are disabled
7. Linux Workstation
8. Iperf
9. Make the mouse larger
10. Network
11. No Machine reboot
12. Reset user pwd
13. Rotary stage
14. Shutters
15. Sublime editor
16. Tomo@0deg and Tomo@90deg
17. User info not updating
18. Windows remote reboot


|-- # Bluesky time out error

If you get this time out error:

  <class 'str'>: (<class 'TimeoutError'>, TimeoutError('Failed to connect to mona:StopAcquisition',))

at the end of a scan using bluesky verify that the soft IOC providing the PV “mona:StopAcquisition” is up and running with:

  [user2bmb@lyra,47,startup]$ cd ~/.ipython/profile_2bmb/startup/
  [user2bmb@lyra,52,startup]$ caget mona:StopAcquisition

if you get:

  Channel connect timed out: 'mona:StopAcquisition' not found

then you need to start the soft IOC with:

  [user2bmb@lyra,47,startup]$ cd ~/.ipython/profile_2bmb/startup/

  screen
  softIoc -d mona.db
  keypresses: [^a] then [d]

and you will get:

  [user2bmb@lyra,46,startup]$ caget mona:StopAcquisition
  mona:StopAcquisition           Ok


|-- # Detectors

Here we list detector specific information userful for troubleshooting and configure areadetector.


|-- ## HDF Plugin error

In same situation the HDF plugin for areadetector will fail to save with error=3. If this happens these steps will clear the error:

  <image HDF_error3.png: tomo_user>

1. make sure TomoScan is runnung. This is because the source of the attribute “HDF5FrameLocation” is “$(TS)HDF5Location” which is used by the hdf layout file as <global name=”detector_data_destination” ndattribute=”HDF5FrameLocation” />
2. go to the hdf plugin screen and delete the XML File name “TomoScanLayout.xml”
3. select save and set the camera in continous data collection mode, taking images now should not show any error is gone
4. keep the camera running, go to the hdf plugin screen and an incorrect XML File name name e.g. “TomoScanLayout.xm”
5. enter the correct file name TomoScanLayout.xml


|-- ## Flir

The area detector IOC controlling the FLIR camera run on the linux machine named pg10ge. To check the area detector status:

  user2bmb@pg10ge$ 2bmSP2.sh status

To stop/restart area detector use

  user2bmb@pg10ge$ 2bmSP2.sh start
  user2bmb@pg10ge$ 2bmSP2.sh stop

To power cycle the camera unplug the power supply:

  <image flir_power.png: tomo_user>

Warning

If you need to reboot pg10ge keep the FLIR camera on. If you need to power cycle the camera and reboot pg10ge: 1. Turn off the camera. 2 Turn on the camera. 3. Reboot pg10ge.

Warning

If the area detector fails to boot even after a camera power cycle, it means that the last auto save file (auto_setting.sav) is corrupted or that the network adaper the camera is connected to needs a reboot. To recover from the first you need to replace the corrupted auto save with a good one, if this is not avaialble just delete all autosave files. For recovering from the the network adaper issue reboot the linux machine (pg10ge) with user2bmb@pg10ge $ sudo /usr/sbin/reboot.

To stop areadetector:

  user2bmb@pg10ge$ 2bmSP2.sh stop

then restart areadetector with:

  user2bmb@pg10ge$ ~/2bmSP2.sh start

Warning

If the camera is not performing at the max speed (when set at 8-bit should run at 160 fps) but only runs at a lower speed (~95 fps or even lower) check the settings for the ISP Enable parameter is set to No. Also increase the DeviceLinkThroughputLimit up to the same value as DeviceLinkSpeed.

  <image flir_full2.png: tomo_user>

  <image flir_IspEnable.png: tomo_user>

  <image flir_DeviceLink.png: tomo_user>

These are located in the Camera-specific features/Features #2 screen of the ADSpinnaker.adl screen. Check also the github issue (https://github.com/areaDetector/ADSpinnaker/issues/4) for more details.


|-- ### Circular Buffer

The circular buffer plug-in is used in streaming mode to store ‘past’ images (taken before the capture starts) so that the recording includes data ahead of the event that triggered the data saving. The maximum number of frames buffered in the NDPluginCircularBuff plugin can be increased (within the available computer memory) by editing:

  # The maximum number of frames buffered in the NDPluginCircularBuff plugin
  epicsEnvSet("CBUFFS", "1500")

in the st.cmd.base file located in /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-0/iocs/spinnakerIOC/iocBoot/iocSpinnaker:

  user2bmb@pg10ge$ cd /net/s2dserv/xorApps/PreBuilts/areaDetector-R3-10/ADSpinnaker-R3-0/iocs/spinnakerIOC/iocBoot/iocSpinnaker
  user2bmb@pg10ge$ sublime st.cmd.base


|-- ## Point Grey

The area detector IOC controlling the Point Grey camera run on the linux machine named lyra. To check the area detector status:

  [user2bmb@lyra]$ 2bmbPG3 status

To stop/stop area detector use

  user2bmb@pg10ge$ 2bmbPG3 start
  user2bmb@pg10ge$ 2bmbPG3 stop


|-- # EPICS ioc reboot

To reboot the 2bma or 2bmb ioc:

  [user2bmb@arcturus]$ iocConsole ioc2bma
  ico2bmb0> reboot

or:

  [user2bmb@arcturus]$ iocConsole ioc2bmb
  ico2bmb1> reboot

Before rebooting an IOC you can verify that the autosave files are up to date with:

  [user2bmb@arcturus]$ /APSshare/epics/synApps_5_8/support/autosave-5-7-1/bin/linux-x86_64/asVerify auto_positions.sav
  [user2bmb@arcturus]$ /APSshare/epics/synApps_5_8/support/autosave-5-7-1/bin/linux-x86_64/asVerify auto_settings.sav


|-- # EPICS ioc reboot

To reboot the 2bma or 2bmb ioc:

  [user2bmb@arcturus]$ iocConsole ioc2bma
  ico2bmb0> reboot

or:

  [user2bmb@arcturus]$ iocConsole ioc2bmb
  ico2bmb1> reboot

Before rebooting an IOC you can verify that the autosave files are up to date with:

  [user2bmb@arcturus]$ /APSshare/epics/synApps_5_8/support/autosave-5-7-1/bin/linux-x86_64/asVerify auto_positions.sav
  [user2bmb@arcturus]$ /APSshare/epics/synApps_5_8/support/autosave-5-7-1/bin/linux-x86_64/asVerify auto_settings.sav


|-- # Globus is down

All internal data transfer is handled by Globus (https://www.globus.org), if down make sure to
start the local Globus EndPoint (https://www.globus.org/globus-connect-personal) with:


|-- ## hadyn

Log in as tomo@handyn:

  [tomo@handyn,~]$ cd ~/Software/globusconnectpersonal-3.1.5/
  [tomo@handyn,~]$ nohup ./globusconnectpersonal -restrict-paths /local/data/ -dir $HOME/.globusonline_handyn/ -start &


|-- ## mona3

Log in as tomo@mona3:

  [tomo@mona3,~]$ cd ~/Software/globusconnectpersonal-3.1.5/
  [tomo@mona3,~]$ ./globusconnectpersonal -start -dir ~/.globusonline_mona3 -restrict-paths /local/data


|-- ## pg10ge

Log in as user2bmb@pg10ge:

  [user2bmb@pg10ge]$ bash
  [user2bmb@pg10ge]$ cd  ~/Software/globusconnectpersonal-3.1.2
  [user2bmb@pg10ge]$ ./globusconnectpersonal -status
  [user2bmb@pg10ge]$ ./globusconnectpersonal -stop
  [user2bmb@pg10ge]$ ./globusconnect -start  -restrict-paths r/local/data/ &


|-- ## tomo1

Log in as tomo@tomo1:

  cd /home/beams/TOMO/Software/globusconnectpersonal-3.1.5
  nohup ./globusconnectpersonal -restrict-paths /data/ -dir $HOME/.globusonline_tomo1/ -start &

terminal can be closed


|-- # GUI play/stop are disabled

If after loading a scan script in Tomo GUI (started with ~/MCT/tomography.sh) the play and stop buttons are disabled press the camera acquire/stop. If it stays disabled is because the camera that was run last time is off and the GUI thinks the camera to be still collecting images.
To solve the situation, go to:

  [user2bmb@arcturus,43,~]$ cd .config/UChicagoArgonneLLC/
  [user2bmb@arcturus,44,UChicagoArgonneLLC]$ ls
  [user2bmb@arcturus,44,UChicagoArgonneLLC]$ TXM.ini  TXM.ini_good

and edit the TXM.ini to change the camera IOC prefix. Another option is to copy over one of the good ini present in that folder.


|-- # Linux Workstation

• Mouse
• Workspace
• Reboot


|-- ## Mouse

If you need to make the mouse larger on a RedHat linux machine:

  $ gsettings set org.gnome.desktop.interface cursor-size 48


|-- ## Workspace

To change to 5 worskpaces:

  $ /usr/bin/gsettings set org.gnome.desktop.wm.preferences num-workspaces "5"

To change their names:

  $ /usr/bin/gsettings set org.gnome.desktop.wm.preferences workspace-names "['Com', 'Vienna', 'Test1', 'Test2','Test3']"


|-- ## Reboot

Currently these machine/username have permission to reboot from the terminal:

  user2bmb@lyra $ sudo /usr/sbin/reboot
  user2bmb@pg10ge $ sudo /usr/sbin/reboot


|-- # Iperf

To test speed between tomo1 and pg10ge:

  (base) user2bmb@pg10ge ~ $iperf3 -s -B 164.54.113.119
  (base) user2bmb@tomo1 ~ $iperf3 -c 164.54.113.119 -B 164.54.113.128


|-- # Make the mouse larger

If you need to make the mouse larger on a RedHat linux machine:

  $ gsettings set org.gnome.desktop.interface cursor-size 48


|-- # Network


|-- ## InfiniBand connection

Machines tomodata1, tomo1, and tomo2 are conencted via Mellanox Technologies MT28908 Family [ConnectX-6] rate: 100 Gb/s (4X EDR). For testing data transfer speed:

on tomo@tomo1 run a server as:

  sudo /bin/iperf3 -s -B 117.17.1.51

on tomo@tomo2 run a client as:

  sudo /bin/iperf3 -c 117.17.1.51 -B 117.17.1.52


|-- # No Machine reboot

If you need to reboot the NX server on handyn:

  tomo@handyn$ sudo /usr/NX/bin/nxserver --restart

The same has been also enabled for:

  user2bmb@arcturus$ sudo /usr/NX/bin/nxserver --restart
  tomo@handyn$ sudo /usr/NX/bin/nxserver --restart
  usr32idc@txmone$ sudo /usr/NX/bin/nxserver --restart
  usr32idc@txmtwo$ sudo /usr/NX/bin/nxserver --restart
  fast@merlot$ sudo /usr/NX/bin/nxserver --restart


|-- # Reset user pwd

If you need to reset the GUP user password, please follow this instructions (https://beam.aps.anl.gov/pls/apsweb/CHANGE_MY_APS_WEB_PASSWORD_PKG.START_PAGE).


|-- # Rotary stage

we have different sets of rotary stages:

Station Descriptiom Ensemble Settings Model             Image Controller                 Speed (rpm) Load axial (kg) Info
-------------------------------------------------------------------------------------------------------------------------------------------------------------
2-BM    spindle                       ABS2000-1000AS-RU       ENSEMBLEHLE10-40-A-MXH (*) 6000        18              box link 0004, box link 0002, order 0004
2-BM-A  fast tomo   Ensemble Settings ABS250MP-M-AS           ENSEMBLEHLE10-40-A-MXH (*) 500         66              box link 0004, box link 0003, order 0005
2-BM-B  mona tomo   Ensemble Settings ABRS-150MP-M-AS         ENSEMBLEHLE10-40-A-MXH (*) 500         8               box link 0004, order 0006

  <image aerotech_00001.png: 00003>

  <image aerotech_00002.png: 00004>

  <image aerotech_00002.png: 00004>

(*) replaced with ENSEMBLEML10-40-IO-MXH


|-- ## Ensemble

The Ensemble Parameter Setup currently in use at 2-BM-A and 2-BM-B stations can found at Ensemble Settings (https://anl.app.box.com/s/serp2nlyzk0ljvpqczc3btm7ikn9pvlj)

ABRS150MP         ABRS250MP         Units
-----------------------------------------------------------------------------
Fundamental Encoder Resolution 3600              11840             lines/rev
Encoder scale factor           148               45
Encoder pulses per revolution  532800            532800            pulses/rev
Encoder resolution             0.000675675675676 0.000675675675676 deg/pulse


|-- ## PSO

Details on the Position Synchronized Output (PSO) are in the Aerotech Manual (https://anl.box.com/s/l43qkqlhy21f4a8wetmrqbeqz9c7am72)


|-- ## Aerotech in 2-BM-A

There is a 47.09 degree offset between the rotary stage home and the pthysical dial
so when asking the motor to home (by pressing HomR or HomF buttons) the home position
reads  46.5 degree on the motor dial. To assure the user coordinate reads zero
degree when the motor physical dial is at zero set the offset as shown in the image below.

  <image rotary_a.png: tomo_user>


|-- ## Aerotech in 2-BM-B

There is a 163.3 degree offset between the rotary stage home and the pthysical dial
so when asking the motor to home (by pressing HomR or HomF buttons) the home position
reads  163.3 degree on the motor dial. To assure the user coordinate reads zero
degree when the motor physical dial is at zero set the offset as shown in the image below.

  <image rotary_b.png: tomo_user>

Warning

If the rotary stage stops responding to a move command check that the torque is enabled and that there is sufficient airflow to the stage. If the stage is still not responding issue a Home command by pressing HomR or HomF button in the motor debug medm screen.


|-- # Shutters

2-BM has two x-ray shutters:

• Front End shutter upstream of 2-BM-A
• Mono shutter upstream of 2-BM-B

If you are not able to open the 2-BM-A or 2-BM-B shutters check the following:

• Shutter permit is enabled
• To open the B shutter: A and B stations are searched
• To open the A shutter: A station is searched

If you still cannot open the shutters check that the Equipment Protection System (EPS) is clear of errors. The EPS most frequent trips are caused by:

• Low He flow caused by low He pressure
• Vacuum bump casued by filter A moving with A shutter open
• Mirror high temperature caused by A slits too wide vertically or mirror to high in the beam


|-- # Sublime editor

if the sublime editor fails to start with:

  user2bmb@pg10ge$ sublime

is because there is another session opened remotely.

To start an independent session:

  user2bmb@pg10ge$ sublime --multiinstance

To kill it:

  user2bmb@pg10ge$ ps -A | grep sublime

to find the sublime’s process id # (ex. 12345), then:

  user2bmb@pg10ge$ kill -9 12345
  user2bmb@pg10ge$ sublime


|-- # None

The Tomo@0deg and Tomo@90deg motors are not responding (control screes is white)

These two motors are controlled by an EPICS softIOC. If the screen for Tomo@0deg and Tomo@90deg
are white it means that the softIOC was not started. To solve this please run:

  [user2bmb@arcturus]$ start_2bmS1.sh

or you can directly stop/start with:

  [user2bmb@arcturus]$ cd /net/s2dserv/xorApps/epics/synApps_5_8/ioc/2bmS1/iocBoot/ioc2bmS1Linux/
  [user2bmb@arcturus]$ ./2bmS1.sh start
  [user2bmb@arcturus]$ ./2bmS1.sh stop

Warning

Make sure you are in a cshell and not in a bash when running the above commands.

To start the 2bmS1 console:

  [user2bmb@arcturus]$ cd /net/s2dserv/xorApps/epics/synApps_5_8/ioc/2bmS1/iocBoot/ioc2bmS1Linux
  [user2bmb@arcturus]$ ../../bin/linux-x86_64/2bmS1 st.cmd


|-- # User info not updating

Log in into arcturus:

  [user2bmb@arcturus,~]$ start_tomo

open the admin screen then click on “Update@arcturus”


|-- # Windows remote reboot

If you need to reboot a windows machine from a remote session use:

  Alt + F4


|- # Ask for support

Please open a ticket using the github Issue Tracker (https://github.com/decarlof/2bm-docs/issues).

Contact
Pavel Shevchenko
email: pshevchenko@anl.gov
Beamline: (630) 252-1702

Viktor Nikitin
email: vnikitin@anl.gov
Office: (630) 252-0148

Francesco De Carlo
email: decarlo@anl.gov
Office: (630) 252-0148

|- # Publications


|- ## Credits

If you use beamline 2-BM for your experiment please cite [A1]

[A1] Viktor Nikitin, Aniket Tekawade, Anton Duchkov, Pavel Shevchenko, and Francesco De Carlo. Real-time streaming tomographic reconstruction with on-demand data capturing and 3D zooming to regions of interest. Journal of Synchrotron Radiation, 29(3):, May 2022. URL: https://doi.org/10.1107/S1600577522003095, doi:10.1107/S1600577522003095 (https://doi.org/10.1107/S1600577522003095).

If you have been using tomoPy (https://tomopy.readthedocs.io/en/latest/) for the 3D reconstructions, please cite [B2]

If using data from tomobank (https://tomobank.readthedocs.io) or data exchange (https://dxchange.readthedocs.io/) tools please cite [B3] and [B1]

[B3] Francesco De Carlo, Doga Gursoy, Daniel Jackson Ching, Kees Joost Batenburg, Wolfgang Ludwig, Lucia Mancini, Federica Marone, Rajmund Mokso, Daniel M. Pelt, Jan Sijbers, and Mark Rivers. Tomobank: a tomographic data repository for computational x-ray science. Measurement Science and Technology, 2017. URL: https://doi.org/10.1088/1361-6501/aa9c19.

[B2] Gürsoy D, De Carlo F, Xiao X, and Jacobsen C. Tomopy: a framework for the analysis of synchrotron tomographic data. Journal of Synchrotron Radiation, 21(5):1188–1193, 2014.

[B1] De Carlo F, Gursoy D, Marone F, Rivers M, Parkinson YD, Khan F, Schwarz N, Vine DJ, Vogt S, Gleber SC, Narayanan S, Newville M, Lanzirotti T, Sun Y, Hong YP, and Jacobsen C. Scientific data exchange: a schema for hdf5-based storage of raw and analyzed data. Journal of Synchrotron Radiation, 21(6):1224–1230, 2014.


|- ## List

This is the up-to-date publication list (https://beam.aps.anl.gov/pls/apsweb/pub_V2_0006.query_results?i_beamline=105&I_DISCIPLINE_M=9999&i_order_by_radio=YEAR) from the 2-BM user community.

## Contribute

• Documentation (https://github.com/xray-imaging/2bm-docs/tree/master/docs)
• Issue Tracker (https://github.com/xray-imaging/2bm-docs/issues)

