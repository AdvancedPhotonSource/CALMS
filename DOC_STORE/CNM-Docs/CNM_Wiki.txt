url: https://wiki.anl.gov/cnm/
title: CNM Wiki
accessed: 2023-09-14



|-- # User contributions for Stern


|--- # Uploads by Stern

This special page shows all uploaded files.

Date                     Name                                                                             Thumbnail Size   Description                                      Versions
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15:04, August 22, 2023   HPC 2023-08-22 Lumerical License config 2023 R2.png (file)                                 89 KB                                                   1
19:15, August 23, 2022   HPC 2022-08-23 Lumerical ANSYS setup inside.png (file)                                     52 KB                                                   1
23:00, December 14, 2021 HPC Comsol licensed modules.png (file)                                                     120 KB                                                  9
18:29, November 5, 2020  HPC 2020-11-05 mac VPN DNS.png (file)                                                      397 KB                                                  1
04:33, October 23, 2020  HPC 2012-08 PuTTY config 4a command.png (file)                                             38 KB                                                   2
15:15, April 8, 2020     HPC 2019-04-12 Lumerical Floating setup inside.png (file)                                  195 KB                                                  2
22:55, January 30, 2020  HPC 2013-07-24 Lumerical FlexNet client setup.png (file)                                   185 KB                                                  3
21:33, January 17, 2020  HPC 2020-01 VNC Screen Sharing Preferences 2.png (file)                                    66 KB                                                   1
21:33, January 17, 2020  HPC 2020-01 VNC Screen Sharing Preferences 1.png (file)                                    82 KB                                                   1
19:24, April 12, 2019    HPC 2019-04-12 Argonne Network Blocking in FDTD.png (file)                                 123 KB                                                  1
19:22, April 12, 2019    HPC 2014-07-31 Lumerical 3 server About.png (file)                                         128 KB                                                  2
19:03, April 12, 2019    HPC 2019-04-12 Carbon reachability.png (file)                                              107 KB                                                  1
19:05, September 1, 2017 HPC 2014-04-28 Lumerical optimizations 3.png (file)                                        69 KB  added path copy overlays                         4
16:57, May 18, 2017      VNC add cnm to DNS 2.png (file)                                                            53 KB                                                   1
16:57, May 18, 2017      VNC add cnm to DNS 1.png (file)                                                            113 KB                                                  1
22:42, July 31, 2014     HPC 2014-07-31 Lumerical FlexNet client setup 3 servers inside.png (file)                  100 KB                                                  1
21:39, April 28, 2014    HPC 2014-04-28 Lumerical optimizations 8.png (file)                                        111 KB                                                  1
21:39, April 28, 2014    HPC 2014-04-28 Lumerical optimizations 7.png (file)                                        116 KB                                                  1
21:38, April 28, 2014    HPC 2014-04-28 Lumerical optimizations 6.png (file)                                        111 KB                                                  1
21:38, April 28, 2014    HPC 2014-04-28 Lumerical optimizations 5.png (file)                                        14 KB                                                   1
21:38, April 28, 2014    HPC 2014-04-28 Lumerical optimizations 4.png (file)                                        59 KB                                                   1
21:37, April 28, 2014    HPC 2014-04-28 Lumerical optimizations 2.png (file)                                        11 KB                                                   1
21:37, April 28, 2014    HPC 2014-04-28 Lumerical optimizations 1.png (file)                                        18 KB                                                   1
20:41, December 3, 2013  HPC 2012-10-04 VNC running.png (file)                                                      77 KB                                                   5
21:34, July 24, 2013     HPC 2013-07-24 Lumerical FlexNet client setup inside.png (file)                            86 KB                                                   2
20:51, January 28, 2013  HPC 2012-08 PuTTY config 13 loaded clogin.png (file)                                       44 KB                                                   1
17:01, October 17, 2012  HPC 2012-10 WinSCP config 12 PuTTY integration.png (file)                                  84 KB                                                   1
17:01, October 17, 2012  HPC 2012-10 WinSCP connect 11 clogin.png (file)                                            29 KB                                                   1
17:00, October 17, 2012  HPC 2012-10 WinSCP connect 10 mega.png (file)                                              22 KB                                                   1
16:49, October 17, 2012  HPC 2012-10 WinSCP config 3 clogin.png (file)                                              31 KB                                                   1
16:49, October 17, 2012  HPC 2012-10 WinSCP config 2 mega.png (file)                                                32 KB                                                   1
16:49, October 17, 2012  HPC 2012-10 WinSCP config 1 new.png (file)                                                 7 KB                                                    1
03:05, October 5, 2012   HPC 2012-10-04 VNC in Screen Sharing Preferences.png (file)                                92 KB                                                   1
02:18, October 5, 2012   HPC 2012-10-04 VNC MWM context menu.png (file)                                             6 KB                                                    1
01:37, October 5, 2012   HPC 2012-10-04 VNC in Screen Sharing View menu.png (file)                                  109 KB crop                                             2
01:37, October 5, 2012   HPC 2012-10-04 VNC in Screen Sharing Connection menu.png (file)                            110 KB                                                  1
01:26, October 5, 2012   HPC 2012-10-04 VNC in Screen Sharing with mouse hovering over toolbar.png (file)           52 KB                                                   2
00:45, October 5, 2012   HPC 2012-10-04 VNC Screen Sharing password.png (file)                                      54 KB                                                   1
00:45, October 5, 2012   HPC 2012-10-04 VNC Screen Sharing warning.png (file)                                       55 KB                                                   1
00:38, October 5, 2012   HPC 2012-10-04 VNC Finder Connect to Server.png (file)                                     48 KB                                                   1
23:10, August 29, 2012   HPC 2012-08 VNL LMX log.png (file)                                                         4 KB                                                    1
22:47, August 29, 2012   HPC 2012-08 PuTTY config 2a load default.png (file)                                        10 KB                                                   2
21:56, August 29, 2012   HPC 2012-08 PuTTY config 12 loaded clogin.png (file)                                       11 KB                                                   1
21:51, August 29, 2012   HPC 2012-08 PuTTY config 5 tunnels remove.png (file)                                       10 KB                                                   1
21:49, August 29, 2012   HPC 2012-08 PuTTY config 6 tunnels clean.png (file)                                        10 KB                                                   1
21:43, August 29, 2012   HPC 2012-08 PuTTY config 11 load clogin.png (file)                                         10 KB  need clogin highlighted                          2
10:11, August 29, 2012   HPC 2012-08 PuTTY config 14 mega re-prompt.png (file)                                      8 KB                                                    2
10:11, August 29, 2012   HPC 2012-08 PuTTY config 13 mega prompt.png (file)                                         2 KB   Reverted to version as of 05:51, August 29, 2012 3
08:52, August 29, 2012   HPC 2012-08 PuTTY shortcuts 3.png (file)                                                   13 KB                                                   2
08:51, August 29, 2012   HPC 2012-08 PuTTY shortcuts 1.png (file)                                                   10 KB                                                   2


|----- # HPC/Applications/lumerical


|-------- # HPC/Carbon Cluster - Overview



Carbon ClusterUser Information
-------------------------------

  <image 240px-HPC-Main-external.jpg: HPC-Main-external.jpg>

Carbon ClusterUser Information




|-------- ### Primary Usage

1. Modeling and Simulation
 1.1. CNM User Community
 1.2. CNM Theory and Modeling group (http://nano.anl.gov/research/theory.html)
2. Real-time on-demand data processing
 2.1. Nanoprobe Beamline (http://nano.anl.gov/research/nanoprobe.html)
 2.2. E-beam lithography control
 2.3. Other high-data intensive instruments


|-------- ### Hardware

  <image 200px-HPC_Compute_Rack-up.png.jpeg: HPC Compute Rack-up.png>

• 280 compute nodes, 8-16 cores/node (Xeon)
• total: 2800 cores, 8 TB RAM, 150 TB disk
• Infiniband interconnect
• Performance 32 TFLOPS (aggregrate, incl. GPU)
• More details on a separate page (https://wiki.anl.gov/cnm/HPC/Hardware_Details)


|--------- # HPC/Hardware Details



Carbon ClusterUser Information
-------------------------------

  <image 240px-HPC-Main-external.jpg: HPC-Main-external.jpg>

Carbon ClusterUser Information




|--------- ## User nodes

Carbon has several major hardware node types, named genX for short, with X = 1, 2. …. Nodes are further sub-classified by their amount of installed memory.


|--------- #### Node Types

Nodenames, types
----------------
Login
login5…6
Compute
n401…408
n409…420
n421…460
n461…476
n477…512
n513…534
…

Retired
n001…144
n145…240,289…348
n241…288
n352…366

• Compute time is charged as the product of cores reserved × wallclock time × charge rate. The charge rate accommodates nominal differences in CPU speed. The reference speed (100%) is taken at a gen2 core.
• Compute time on gen4 nodes is charged at 200% of actual walltime, given their performance relative to gen2 nodes.
• gen7 nodes have two GPUs each; GPU usage is currently not "charged" (accounted for) separately.
• Virtual memory usage on nodes may reach up to about 2 × the physical memory size. Your processes running under PBS may allocate that much vmem but cannot practically use it all for reasons of swap space size and bandwidth. If a node acitvely uses swap for more than a few minutes (which drastically slows down compute performance), the job will automatically be killed.


|--------- #### Major CPU flags

CPU capabilities grow with each node generation. Executables can be compiled to leverage specific CPU capabilities. Jobs using such executables must use the qsub option -l nodes=...:genX to be directed to nodes having that capability.

Flag name                                       gen4 gen5 gen6 gen7
-------------------------------------------------------------------
avx512_vnni                                     –    –    –    x
avx512bw, avx512cd, avx512dq, avx512f, avx512vl –    –    x    x
avx2                                            –    x    x    x
fma                                             –    x    x    x
adx                                             –    x    x    x
avx                                             x    x    x    x
sse4_2                                          x    x    x    x




|--------- ## Storage

• Lustre (http://wiki.whamcloud.com/) parallel file system for /home and /sandbox
• ≈600 TB total
• local disk per compute node, 160–250 GB

  <image 200px-HPC_Infiniband-blue.png.jpeg: HPC Infiniband-blue.png>


|--------- ## Interconnect

• Infiniband – used for parallel communication and storage
• Gigabit Ethernet – used for general node access and management


|--------- ## Power

• Power consumption at typical load: ≈125 kW


|--------------------- # User contributions for Vrose


|---------------------- # Uploads by Vrose

This special page shows all uploaded files.

Date                   Name                                                    Thumbnail Size    Description                                                                                                                                                                                                                                                     Versions
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17:21, August 21, 2009 Nanoprobe tomography alignment for dummies.pdf (file)             81 KB                                                                                                                                                                                                                                                                   1
19:54, August 19, 2009 John's Tomo.pdf (file)                                            125 KB  John Provis view of tomography alignment                                                                                                                                                                                                                        1
23:24, August 12, 2009 Robert's Tomo Alignment.pdf (file)                                159 KB  Robert's handwritten notes from August 10,2009                                                                                                                                                                                                                  2
17:27, August 12, 2009 OSA-3.tif (file)                                                  4.15 MB OSA 3, 35um, used, 20x 12 AUG 09                                                                                                                                                                                                                                1
17:25, August 12, 2009 OSA-1.tif (file)                                                  4.15 MB OSA 35um used, 20X, 12 AUG 09                                                                                                                                                                                                                                   1
17:16, August 12, 2009 OSA-2.tif (file)                                                  4.15 MB 50 um Hole, 20x, mounted 12 AUG 09                                                                                                                                                                                                                              1
22:31, June 8, 2009    C848 User MS100E110.pdf (file)                                    484 KB                                                                                                                                                                                                                                                                  1
19:13, April 30, 2009  Technote dt primer.pdf (file)                                     592 KB  This document describes basic usage of the PEWIN32Pro (a.k.a. PEWIN) program for diagnostics, maintenance and troubleshooting of the Delta Tau PMAC motion controller. For further information, consult the Delta Tau documentation (in particular the Software 1
19:12, April 30, 2009  Technote dt record positions revB.pdf (file)                      483 KB  This document describes how to record motor positions and PMAC variables as a function of time using PMAC Plot Pro, which is part of the PMAC Executive Suite provided by Delta Tau. The program is installed on many Xradia systems.                           1
18:45, April 14, 2009  Princeton Instruments PIXIS XF1024F Rev B1A.pdf (file)            282 KB                                                                                                                                                                                                                                                                  1
18:44, April 14, 2009  PIXIS XF.jpg (file)                                               8 KB                                                                                                                                                                                                                                                                    1
18:40, April 14, 2009  Amtek xr100cr.pdf (file)                                          246 KB                                                                                                                                                                                                                                                                  1
18:40, April 14, 2009  Amtek xr100cr detector.jpg (file)                                 23 KB                                                                                                                                                                                                                                                                   1
18:07, April 14, 2009  IMG 4458.JPG (file)                                               2.38 MB                                                                                                                                                                                                                                                                 1
17:34, April 14, 2009  DataBook Image Small.jpg (file)                                   4 KB                                                                                                                                                                                                                                                                    1
17:27, April 14, 2009  Alignment Nanoprobe Mirror 4oct08.pdf (file)                      17 KB                                                                                                                                                                                                                                                                   1
17:21, April 14, 2009  MirrorSystem Radius vs theta encoders 7nov08.pdf (file)           14 KB                                                                                                                                                                                                                                                                   1
17:19, April 14, 2009  Nanoprobe MirrorSystem SOW fnl.pdf (file)                         100 KB                                                                                                                                                                                                                                                                  1
17:09, April 14, 2009  NP FDR FinalPhase Nov06 fnl.pdf (file)                            249 KB                                                                                                                                                                                                                                                                  1
17:08, April 14, 2009  Slide3.jpg (file)                                                 106 KB                                                                                                                                                                                                                                                                  1
17:08, April 14, 2009  Slide2.jpg (file)                                                 89 KB                                                                                                                                                                                                                                                                   1
17:07, April 14, 2009  Slide1.jpg (file)                                                 73 KB                                                                                                                                                                                                                                                                   1
17:05, April 14, 2009  Beamline Overview Photo.jpg (file)                                199 KB                                                                                                                                                                                                                                                                  1
16:52, April 14, 2009  Fluorescence vs transmission orientation.jpg (file)               21 KB                                                                                                                                                                                                                                                                   1
16:51, April 14, 2009  Import Fluo scans into Origin-1.pdf (file)                        42 KB                                                                                                                                                                                                                                                                   1
16:40, April 14, 2009  Parameters ZP24 D133 t330.pdf (file)                              24 KB                                                                                                                                                                                                                                                                   1
16:40, April 14, 2009  Efficiency Au t 300 nm 8keV 12keV.jpg (file)                      36 KB                                                                                                                                                                                                                                                                   1
16:31, April 14, 2009  Parameters ZP50 D240 t900.pdf (file)                              23 KB                                                                                                                                                                                                                                                                   1
16:31, April 14, 2009  Zp50 240 9 1263 3 1 APS 8feb2008.pdf (file)                       405 KB                                                                                                                                                                                                                                                                  1
16:31, April 14, 2009  Efficiency Au t 900 nm 8keV 12keV.jpg (file)                      35 KB                                                                                                                                                                                                                                                                   1
16:19, April 14, 2009  Fluorescence Standard.pdf (file)                                  577 KB                                                                                                                                                                                                                                                                  1
16:11, April 14, 2009  SDD 4el collimator 28feb08.jpg (file)                             35 KB                                                                                                                                                                                                                                                                   1
16:10, April 14, 2009  30 5mm cap rot.pdf (file)                                         17 KB                                                                                                                                                                                                                                                                   1
16:10, April 14, 2009  30 5mm assy landscape.pdf (file)                                  19 KB                                                                                                                                                                                                                                                                   1
15:59, April 14, 2009  MAN-XMAP 1.0.3.pdf (file)                                         2.56 MB                                                                                                                                                                                                                                                                 1
15:58, April 14, 2009  VortexME4 specs Rev.3.3.pdf (file)                                128 KB                                                                                                                                                                                                                                                                  1
15:21, April 14, 2009  NanoPi usersmanual 2007 07 20.pdf (file)                          2.23 MB                                                                                                                                                                                                                                                                 1
22:21, April 13, 2009  Phase ring specs.jpg (file)                                       207 KB                                                                                                                                                                                                                                                                  1
22:20, April 13, 2009  Phase rings.jpg (file)                                            57 KB                                                                                                                                                                                                                                                                   1
22:13, April 13, 2009  CM positions.jpg (file)                                           62 KB                                                                                                                                                                                                                                                                   1
22:09, April 13, 2009  OSA positions.jpg (file)                                          6 KB                                                                                                                                                                                                                                                                    1
22:09, April 13, 2009  FOM ZP holder.jpg (file)                                          24 KB                                                                                                                                                                                                                                                                   1
22:08, April 13, 2009  FOM positions.jpg (file)                                          21 KB                                                                                                                                                                                                                                                                   1
21:52, April 13, 2009  28718D25crop.jpg (file)                                           507 KB  Nanoprobe Instrument (NPI)                                                                                                                                                                                                                                      1
21:37, April 13, 2009  Nanoprobe Instrument.jpg (file)                                   280 KB  Nanoprobe Instrument (NPI)                                                                                                                                                                                                                                      1


|------------------------ # Sandbox/XMG media list


|------------------------------ # User contributions for Mvholt


|------------------------------- # Uploads by Mvholt

This special page shows all uploaded files.

Date                     Name                               Thumbnail Size    Description Versions
--------------------------------------------------------------------------------------------------
19:38, February 16, 2022 Theta scan RSM.gif (file)                    1.65 MB             1
19:36, February 16, 2022 Theta scan CTR.gif (file)                    1.19 MB             1
15:57, July 27, 2021     Sample change checklist.png (file)           115 KB              1
15:52, July 27, 2021     V2 sample change.docx (file)                 21 KB               1
21:17, January 20, 2021  Scanning sketch.png (file)                   145 KB              1
22:29, January 15, 2021  Focusing sketch.png (file)                   220 KB              1
22:28, January 15, 2021  Fine scanning sketch.png (file)              63 KB               1
22:28, January 15, 2021  Fine scanning.png (file)                     698 KB              1
22:26, January 15, 2021  Coarse scanning sketch.png (file)            56 KB               1
22:25, January 15, 2021  Coarse scanning.png (file)                   697 KB              1
22:23, January 15, 2021  Chamber interior.png (file)                  2.69 MB             1
22:17, January 15, 2021  Chamber layout.png (file)                    689 KB              1

  <image 180px-Theta_scan_RSM.gif: >

  <image 180px-Theta_scan_CTR.gif: >

  <image 180px-Sample_change_checklist.png: >

  <image fileicon.png: >

  <image 180px-Scanning_sketch.png: >

  <image 180px-Focusing_sketch.png: >

  <image 180px-Fine_scanning_sketch.png: >

  <image 180px-Fine_scanning.png: >

  <image 180px-Coarse_scanning_sketch.png: >

  <image 180px-Coarse_scanning.png: >

  <image 180px-Chamber_interior.png: >

  <image 180px-Chamber_layout.png: >


|------------------------------- # All public logs

Combined display of all available logs of CNM Wiki.
You can narrow down the view by selecting a log type, the username (case-sensitive), or the affected page (also case-sensitive).

1. 19:38, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs created page File:Theta scan RSM.gif (https://wiki.anl.gov/cnm/File:Theta_scan_RSM.gif)
2. 19:38, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Theta scan RSM.gif (https://wiki.anl.gov/cnm/File:Theta_scan_RSM.gif)
3. 19:36, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs created page File:Theta scan CTR.gif (https://wiki.anl.gov/cnm/File:Theta_scan_CTR.gif)
4. 19:36, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Theta scan CTR.gif (https://wiki.anl.gov/cnm/File:Theta_scan_CTR.gif)
5. 15:57, July 27, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs created page File:Sample change checklist.png (https://wiki.anl.gov/cnm/File:Sample_change_checklist.png)
6. 15:57, July 27, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Sample change checklist.png (https://wiki.anl.gov/cnm/File:Sample_change_checklist.png)
7. 15:52, July 27, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs created page File:V2 sample change.docx (https://wiki.anl.gov/cnm/File:V2_sample_change.docx)
8. 15:52, July 27, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:V2 sample change.docx (https://wiki.anl.gov/cnm/File:V2_sample_change.docx)
9. 21:17, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Scanning sketch.png (https://wiki.anl.gov/cnm/File:Scanning_sketch.png)
10. 22:29, January 15, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Focusing sketch.png (https://wiki.anl.gov/cnm/File:Focusing_sketch.png)
11. 22:28, January 15, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Fine scanning sketch.png (https://wiki.anl.gov/cnm/File:Fine_scanning_sketch.png)
12. 22:28, January 15, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Fine scanning.png (https://wiki.anl.gov/cnm/File:Fine_scanning.png)
13. 22:26, January 15, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Coarse scanning sketch.png (https://wiki.anl.gov/cnm/File:Coarse_scanning_sketch.png)
14. 22:25, January 15, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Coarse scanning.png (https://wiki.anl.gov/cnm/File:Coarse_scanning.png)
15. 22:23, January 15, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Chamber interior.png (https://wiki.anl.gov/cnm/File:Chamber_interior.png)
16. 22:17, January 15, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Chamber layout.png (https://wiki.anl.gov/cnm/File:Chamber_layout.png)
17. 19:24, September 7, 2010 (https://wiki.anl.gov/wiki_cnm/index.php) Mvholt (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs moved page Beamline aligning sequence (https://wiki.anl.gov/wiki_cnm/index.php) to Beamline Alignment Quick Reference (https://wiki.anl.gov/cnm/Beamline_Alignment_Quick_Reference) (accessibility)


|------------------------------ #### February 16, 2022

1. 20:0120:01, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +5‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Diffraction with a nano-focused beam
current
2. 19:5919:59, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +9‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Diffraction with a nano-focused beam
3. 19:5019:50, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −33‎  m
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Diffraction with a nano-focused beam
4. 19:5019:50, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Diffraction with a nano-focused beam
5. 19:4819:48, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1,187‎  m
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎No edit summary
6. 19:3819:38, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +52‎  N
File:Theta scan RSM.gif (https://wiki.anl.gov/cnm/File:Theta_scan_RSM.gif)
‎No edit summary
current
7. 19:3619:36, February 16, 2022 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +43‎  N
File:Theta scan CTR.gif (https://wiki.anl.gov/cnm/File:Theta_scan_CTR.gif)
‎No edit summary
current


|------------------------------ #### July 27, 2021

• 15:5815:58, July 27, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +7‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Sample change venting checklist
• 15:5815:58, July 27, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +73‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Sample change venting checklist
• 15:5715:57, July 27, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +32‎  N
File:Sample change checklist.png (https://wiki.anl.gov/cnm/File:Sample_change_checklist.png)
‎No edit summary
current
• 15:5315:53, July 27, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +128‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎No edit summary
• 15:5215:52, July 27, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +44‎  N
File:V2 sample change.docx (https://wiki.anl.gov/cnm/File:V2_sample_change.docx)
‎No edit summary
current


|------------------------------ #### February 11, 2021

1. 16:2516:25, February 11, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +12‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
2. 16:2416:24, February 11, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +6‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
3. 16:2416:24, February 11, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +12‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
4. 16:2316:23, February 11, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +489‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
5. 15:5815:58, February 11, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +66‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
6. 15:5615:56, February 11, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +576‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
7. 15:4815:48, February 11, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1,401‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
8. 15:2515:25, February 11, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +507‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
9. 15:1615:16, February 11, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +954‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
10. 15:0315:03, February 11, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +277‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference


|------------------------------ #### February 10, 2021

1. 22:1322:13, February 10, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1,043‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
2. 22:0122:01, February 10, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +564‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
3. 21:5121:51, February 10, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +441‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
4. 21:4221:42, February 10, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +356‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
5. 21:3221:32, February 10, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +545‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
6. 21:2421:24, February 10, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +281‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
7. 21:1921:19, February 10, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +697‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
8. 21:0621:06, February 10, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −2‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference
9. 20:5620:56, February 10, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +194‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Python Command Line Quick Reference


|------------------------------ #### January 20, 2021

1. 23:3123:31, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +44‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎No edit summary
2. 23:3023:30, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +16‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Focusing
3. 23:3023:30, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1,434‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Focusing
4. 23:1523:15, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +41‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Fine scanning
5. 23:1423:14, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +41‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Fine scanning
6. 23:1223:12, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +6‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Fine scanning
7. 23:1223:12, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1,978‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Fine scanning
8. 21:5921:59, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −4‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Coarse scanning
9. 21:5921:59, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +6‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Coarse scanning
10. 21:5921:59, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +30‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Coarse scanning
11. 21:5721:57, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Coarse scanning
12. 21:5721:57, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −17‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Coarse scanning
13. 21:5621:56, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +830‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Coarse scanning
14. 21:3021:30, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +100‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Chamber overview
15. 21:2921:29, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −22‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Chamber overview
16. 21:2721:27, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −12‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Chamber overview
17. 21:2621:26, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −9‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Chamber overview
18. 21:2421:24, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +32‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Chamber overview
19. 21:2321:23, January 20, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1‎ 
Nanoprobe Scanning Quick Reference (https://wiki.anl.gov/cnm/Nanoprobe_Scanning_Quick_Reference)
‎ →‎Chamber overview


|--------------------------- # HPC/Applications/python


|---------------------------- # HPC/Applications

This is the catalog for HPC applications on Carbon.
Applications are often referred to as modules because they are managed using the Environment Modules (http://modules.sourceforge.net/) package.

You, the user, must select ("load") the modules that you wish to use, possibly down to a specific version.
An exception to this are a handful of basic modules that are pre-loaded when you log in.

You can access this catalog on Carbon itself using the following commands to
show all available modules,
one-line summaries,
and longer descriptions (usually with copyrights and links),
respectively:

  module avail [name]
  module whatis [name]
  module help name

• Module setup instructions (https://wiki.anl.gov/cnm/HPC/Module_Setup)
• The man page for the module command (man module).


|----------------------------- # HPC/Module Setup


|----------------------------- ## Contents

1. 1  Introduction
2. 2 The Shell
 2.1. 2.1 A note on tcsh for long-time Unix/Linux users
3. 3 Shell Customizations
 3.1. 3.1 Test
 3.2. 3.2 Pick up newly added modules
 3.3. 3.3 Caveats
4. 4 Modules – General documentation
5. 5 Module Conventions on Carbon


|----------------------------- ##  Introduction

Carbon uses the Environment Modules (http://modules.sourceforge.net/) package to dynamically provision software.
The package primarily modifies your $PATH and other environment variables.

• Current Carbon module catalog (https://wiki.anl.gov/cnm/HPC/Modules)


|------------------------------ # HPC/Applications

This is the catalog for HPC applications on Carbon.
Applications are often referred to as modules because they are managed using the Environment Modules (http://modules.sourceforge.net/) package.

You, the user, must select ("load") the modules that you wish to use, possibly down to a specific version.
An exception to this are a handful of basic modules that are pre-loaded when you log in.

You can access this catalog on Carbon itself using the following commands to
show all available modules,
one-line summaries,
and longer descriptions (usually with copyrights and links),
respectively:

  module avail [name]
  module whatis [name]
  module help name

• Module setup instructions (https://wiki.anl.gov/cnm/HPC/Module_Setup)
• The man page for the module command (man module).




|------------------------------ # Modules


|------------------------------ ## Applications

  abinit/7/openmpi-1.4
  abinit/8.6/impi
  amber/12/openmpi-1.4
  ambertools/12/openmpi-1.4
  ase/3.9/3.9.1-1
  atk/12/12.8.2-1
  atk/2015/2015.1-1
  atk/2016/2016.4-1
  atk/2017/2017.2-1
  atlas/3/intel
  atomeye/kermode/kermode-2010-1
  beef/0/0.1.2-1
  boost/1/gcc
  chargemol/2014/intel
  chargemol/2015/intel
  charm/6/openmpi-1.4
  comsol/4/4.1-1
  comsol/4/4.2-1
  comsol/4/4.2a-1
  comsol/4/4.3-1
  comsol/4/4.3a-1
  comsol/4/4.3b-1
  comsol/4/4.3b-2
  comsol/4/4.4-1
  comsol/4/4.4-2
  comsol/5/5.0-1
  comsol/5/5.1-1
  comsol/5/5.2-1
  comsol/5/5.2a-1
  comsol/5/5.3-1
  comsol/5/5.4-1
  comsol/5/5.4.0.388-1
  comsol/5/5.5.0.359-1
  comsol/5/5.6.0.0-1
  comsol/6/(default)
  comsol/6/6.0-1
  comsol/6/6.1-1
  cp2k/2/openmpi-1.4
  cp2k/5.1/impi
  dacapo/2/openmpi-1.4
  ddscat/7/intel
  epics/3/gcc
  feff/9.6/impi
  fftw3/3.3/impi-5
  fftw3/3.3/impi
  fftw3/3.3/intel-19
  fftw3/3.3/intel
  fftw3/3.3/openmpi-1.10
  fftw3/3.3/openmpi-1.4
  fftw3/3.3/openmpi
  fox/4/intel
  garffield/1/openmpi-1.4
  gaussian/09/09.D.01.x86_64-3
  gaussian/16/16-A.03-1
  gaussian/16/16-A.03-2
  gaussian/16/16-B.01-1
  gaussian/16/16-C.01-1
  gaussview/5/5.0.9-1
  gaussview/6/6.0.16-1
  gnuplot/4.6/4.6.6-1
  gnuplot/5.0/5.0.6-1
  gnuplot/5.2/5.2.rc1-1
  gold/2/(default)
  gold/2/2.2.0.5-6-EL6
  gold/2/2.2.0.5-7
  gold/2/2.2.0.5-7a
  GotoBLAS/1/gcc
  GotoBLAS/1/intel
  gpaw-setups/0/0.8.7929
  gpaw/0/openmpi-1.4
  gsl/1/1.16-1
  h5utils/1/gcc
  harminv/1/intel
  hdf5/1.10/intel-19
  hdf5/1.10/nvhpc-22.5
  hdf5/1/intel
  hdf5/1/openmpi-1.4
  hoomd/0/gcc
  hydra/3/gcc
  idl/8/8.2.2-1
  jdftx/0/gcc-4.9
  jmol/13/13.2.8-1
  lammps/2012/openmpi-1.4
  lammps/2015/impi
  lammps/2015/openmpi-1.10
  lammps/2015/openmpi-1.4
  lammps/2020/impi
  layout-beamer/3/3.3.0beta2_64
  libctl/3.2/intel-17
  libctl/3/intel
  libgd/2/intel-18
  libint/1/intel
  libint2/2.0/intel
  libmatheval/1/gcc
  libvdwxc/0/impi
  libvdwxc/0/intel-18
  libvdwxc/0/intel-19
  libvdwxc/0/intel
  libxc/1/intel
  libxc/2/gcc-4.9
  libxc/2/intel-15
  libxc/2/intel-16
  libxc/2/intel-18
  libxc/4/intel-18
  lumerical/2021/2021-R1-1(default)
  lumerical/2021/2021-R2-1
  lumerical/2021/2021-R2-ansyslm-1
  lumerical/2022/2022-R1.4-1
  lumerical/2022/2022-R2-2(default)
  lumerical/2022/2022-R2.1-1
  mathematica/10/10.1.0-1
  mathematica/11/11.3.0-1
  mathematica/12/12.0.0-1
  mathematica/12/12.1.1-1
  mathematica/12/12.2.0-1
  mathematica/13/13.0-1
  matlab/R2013a/R2013a-5
  matlab/R2013a/R2013a-8
  matlab/R2019b/R2019b-1
  meep/1/intel
  meep/1/openmpi-1.4
  mesa-gl/6/6.5.2-1
  mesa-gl/7/7.2-1
  mesa-gl/18/18-1 <aL>
  molpro/2009/openmpi-1.4
  molpro/2012/2012.1.29-4
  molpro/2012/2012.1.29-6
  molpro/2012/2012.1.29-7
  molpro/2012/2012.1.29-8
  mpb/1/1.5-4
  mpich/3/gcc
  mumax3/3.10beta/3.10beta-1(default)
  mumax3/3.10beta/3.10beta-2
  mumax3/3.9/3.9.3-1
  namd/2/multicore-CUDA
  namd/2/multicore
  namd/2/openmpi-1.4
  namd/2/TCP
  namd/2/verbs-smp-CUDA
  namd/2/verbs-smp
  namd/2/verbs
  netcdf/3/gcc
  netcdf/3/intel
  nlopt/2/gcc
  numpy/1/intel
  nwchem/6/openmpi-1.4
  octave/4.0/4.0.3-1
  octopus/10.1/impi
  octopus/10.1/intel
  octopus/4/intel-18
  octopus/4/openmpi-1.4
  octopus/9/intel-19
  packmol/13/intel
  periodic_NBO/2012/intel
  perl/5/5.24.1-2
  phonopy/1.10/1.10.8-1
  phonopy/1.10/1.10.8-2
  povray/3/gcc
  pwgui/4/4.2-1
  q-chem/4.1/4.1.0.1-1
  q-chem/5/(default)
  q-chem/5/5.1.2-1
  q-chem/5/5.2.1-1
  q-chem/5/5.3-3
  q-chem/5/5.3.1-1
  q-chem/6/6.0-1
  quantum-espresso/4/openmpi-1.4
  quantum-espresso/5.4/openmpi-1.10
  rasmol/2.6/2.6.4-foc-1
  rasmol/2.7/2.7.5-1
  readline/6/6.2-1
  rings/1.2/intel
  rings/1.2/openmpi-1.4
  rings/1.3/intel
  rings/1/intel
  rings/1/openmpi-1.4
  ScientificPython/2/intel
  scipy/0/openmpi-1.4
  siesta/3/openmpi-1.4
  siesta/4.0/impi-5
  siesta/4.1-b2/impi-5
  siesta/4.1-b2/impi
  siesta/4.1/impi-5
  sparta/2020-07-06/impi
  spglib/1/gcc
  vasp-vtst/4/openmpi-1.4
  vasp-vtstscripts/2012/2012-11-11-1
  vasp-vtstscripts/926/926-1
  vasp/4.6/openmpi-1.4
  vasp5/5.3-scan/impi-5
  vasp5/5.3-scan/openmpi-1.10
  vasp5/5.3/impi-5
  vasp5/5.3/openmpi-1.10
  vasp5/5.3/openmpi-1.4
  vasp5/5.4-z2pack/impi-5
  vasp5/5.4-z2pack/openmpi-1.10
  vasp5/5.4/(default)
  vasp5/5.4/impi-2019
  vasp5/5.4/impi-5
  vasp5/5.4/openmpi-1.10
  vasp6/6.3/impi
  vasp6/6.3/nvhpc
  vesta/3/3.2.1-1
  vmd/1/1.9.1-2
  voro++/0/intel
  vtk/5/intel
  wannier90/1-z2pack/1.2-z2pack-1
  wannier90/1/1.2-1
  wannier90/1/1.2-2
  wannier90/2/impi-5
  wannier90/2/openmpi-1.10
  wannier90/3/impi
  wannier90/3/intel
  wannier90/3/nvhpc-parallel
  wannier90/3/nvhpc
  wien2k/09/intel
  wien2k/14.2/impi-5
  xcrysden/1/1.5.21-1


|------------------------------ ## Development tools

  impi/4
  impi/5
  impi/2017
  impi/2018
  impi/2019
  impi/2021
  intel/11
  intel/12
  intel/13
  intel/14
  intel/15
  intel/16
  intel/17
  intel/18
  intel/19
  intel/2021

  gcc/4.4/4.4.7
  gcc/4.9/4.9.3-1
  gcc/6.4/6.4.0-1
  gcc/7.3/7.3.0-1
  gcc/8.2/8.2.0-1
  gcc/8.5/(default)
  gcc/8.5/8.5.0-1
  gcc/11.1/11.1.0-1
  glibc/2.23/2.23-1

  nvhpc-byo-compiler/22.5
  nvhpc-nompi/22.5
  nvhpc/22.5

  openmpi/1.4
  openmpi/1.6
  openmpi/1.8
  openmpi/1.10

  java/1.7/1.7.0_25-fcs

  python-anaconda/2.7/(default)
  python-anaconda/2.7/4
  python-anaconda/3.5/4
  python-centos/2.6/gcc-4.4
  python-centos/2.7/gcc-4.8
  python-env-anaconda/2.7/(default)
  python-env-anaconda/2.7/4
  python-env-anaconda/3.5/4
  python-env-intel/2.7/(default)
  python-env-intel/2.7/2017
  python-env-intel/2.7/2018
  python-env-intel/3.5/2017
  python-env-intel/3.6/2018
  python-intel/2.7/(default)
  python-intel/2.7/2015
  python-intel/2.7/2017
  python-intel/2.7/2018
  python-intel/3.5/2015
  python-intel/3.5/2017
  python-intel/3.6/2018
  python/2.7/(default)
  python/2.7/gcc-4.1
  python/2.7/gcc-4.4
  python/3.5/gcc-4.4

To select packages for your use, place module load name commands near the end of your ~/.bashrc file.


|----------------------------- ## The Shell

The user shell on Carbon is bash (http://en.wikipedia.org/wiki/Bash_(Unix_shell)).




|----------------------------- ### None

[t]csh (http://en.wikipedia.org/wiki/C_shell) used to be the only vendor-agnostic and widely available shell with decent command line features. Bash is now much better positioned in this area, and offers consistent programming on the command line and in scripts. Therefore, tcsh is now available only on request (to me, stern (https://wiki.anl.gov/cnm/User:Stern)), if you absolutely, positively, insist, and know what you're doing. (There will be a quiz.)

There are good reasons not to use the C shell (http://www.grymoire.com/Unix/CshTop10.txt),
and classic wisdom states “csh programming considered harmful” (http://www.faqs.org/faqs/unix-faq/shell/csh-whynot/).
Even though using [t]csh merely for interactive purposes may appear tolerable,
it is too tempting to set out from tweaking .cshrc into serious programming.
Don't do it. It is not supported. It's dead, Jim.

• Do not use chsh or chfn. Changes will be overwritten.


|----------------------------- ## Shell Customizations

Place customizations in your ~/.bashrc file by using a text editor such as nano (http://www.nano-editor.org/). A pristine copy is shown below, or can be found at /etc/skel/.bashrc

  # ~/.bashrc
  # User's bash customization, Carbon template; stern 2011-09-15.

  # Merge global definitions -- do not edit.
  if [ -f /etc/bashrc ]; then
      . /etc/bashrc
  fi

  # Carbon customizations -- edit below.
  export PATH=$HOME/bin:$PATH

  #alias blah="foo -xyz"
  #module load ...

• For instance, to add binaries from a user's own compilation of somepackage, and load a couple of modules:

  export PATH=$HOME/somepackage/bin:$HOME/bin:$PATH

  # Load Carbon applications
  module load name1 name2 …
  module load name3/version


|----------------------------- ### Test

To test the impact of any changes, temporarily run a new shell:

  bash -l        # lowercase letter L
  # run other shell commands
  ...
  # inspect nesting level, then return to the parent shell
  echo $SHLVL
  exit

• Make further corrections to ~/.bashrc as needed.
• You might get lost in multiple nested shell levels. To see the current nesting level, inspect the environment variable $SHLVL as shown above. A normal login shell runs at level 1, and the exit command in such a shell will log you out.


|----------------------------- ### Pick up newly added modules

When all looks good, either:

• simply restart your shell in place:

• Alternatively, log out and back in, which is a bit more involved.


|----------------------------- ### Caveats

• Among the various bash startup files (http://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html) .bashrc is the one relevant when invoked remotely (http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_01_02.html#sect_01_02_02_02_06), such as on MPI child nodes reached by sshd.
• In general, do not place a "module load …" command in a PBS job script.
 • This will only work reliably for single-node jobs.
 • It will generally fail for multi-node jobs (nodes > 1).
Reason: The job script is only executed (by the pbs_mom daemon on your behalf) on the first core on the first node of your request. The environment of this process will be cloned for the other cores on the first node, but not for cores on other nodes. How remote environments are configured depends on the MPI implementation. The various mpirun or mpiexec offer flags to pass some or all environment variables to other MPI processes, but these flags are implementation-specific and may not work reliably.
• The most reliable and recommended way is as above, to place module commands in ~/.bashrc. This might preclude job-specific module sets for conflicting modules or tasks. I'm thinking about a proper solution for this. --stern (https://wiki.anl.gov/cnm/User:Stern)


|----------------------------- ## None

• A general introduction to modules can be found at many other sites, such as:
 • NERSC (http://www.nersc.gov/users/software/nersc-user-environment/modules/)
 • PITT (http://core.sam.pitt.edu/node/71)
 • NCI (AU) (https://nf.apac.edu.au/facilities/software/modules.php)

  $ module help
  …
    Usage: module [ switches ] [ subcommand ] [subcommand-args ]
  …

    Available SubCommands and Args:

  + load		modulefile [modulefile ...]
  + unload	modulefile [modulefile ...]
  + switch	[modulefile1] modulefile2.]
  + list

  + avail		[modulefile [modulefile ...]]
  + whatis	[modulefile [modulefile ...]]
  + help		[modulefile [modulefile ...]]
  + show		modulefile [modulefile ..]

For full documentation, consult the manual page:

  $ man module


|----------------------------- ## Module Conventions on Carbon

See HPC/Module naming scheme 2008 (https://wiki.anl.gov/cnm/HPC/Module_naming_scheme_2008)


|------------------------------ # HPC/Module naming scheme, 2008 edition


|------------------------------ ## Contents

1. 1 Module naming scheme
2. 2 Default modules being loaded
3. 3 Module conventions on Carbon
 3.1. 3.1 Package description
 3.2. 3.2 Environment variable for package home directory
 3.3. 3.3 Package home directory organization
 3.4. 3.4 Package-specific sample job


|------------------------------ ## Module naming scheme

• Most application software is installed under /opt/soft
• Package directories are named  name-version-build , e.g. /opt/soft/jmol-12.1.37-1.
• Module names are organized by a mostly version-less name, with the version following after a slash:  name/version-build . Using the name component alone is possible and will select a default version for module subcommand to act upon. Some packages do carry a major version number in their name, notably fftw3 and vasp5.


|------------------------------ ## Default modules being loaded

The following modules are loaded by default for all users:

  $ module list
  Currently Loaded Modulefiles:
    1) icc/11/11.1.073           4) openmpi/1.4.5-intel11-2
    2) ifort/11/11.1.073         5) profile/user/1.0
    3) mkl/10.3.10


|------------------------------ ## Module conventions on Carbon


|------------------------------ ### Package description

The command module help brings up a brief description of a package, gives its version number (in the form of the full module name) and will usually contain a link to the package home page and/or documentation, e.g.:

  $ module help jmol

  ----------- Module Specific Help for 'jmol/12.0.34-1' -------------

  	Jmol is a molecule viewer platform for researchers in chemistry and
  	biochemistry, implemented in Java for multi-platform use.  This is the
  	standalone application.  It offers high-performance 3D rendering with
  	no hardware requirements and supports many popular file formats.

  	http://jmol.sourceforge.net/
  	http://wiki.jmol.org/


|------------------------------ ### Environment variable for package home directory

Most modules will set a convenience variable  $NAME_HOME which points to the package's toplevel directory.
Dashes in the package name are converted to underscores in the environment variable.
This is a convention on Carbon and is useful to inspect binaries or documentation and auxiliary files of a package:

  $ module load quantum-espresso

  $ ls $QUANTUM_ESPRESSO_HOME/bin
  average.x     dos.x              …
  band_plot.x   dynmat.x           …
  bands.x       epsilon.x          …
  bands_FS.x    ev.x               …
  …

  $ ls -F $QUANTUM_ESPRESSO_HOME/doc
  Doc/  atomic_doc/  examples/

  $ module load fftw3
  $ cat Makefile
  …
  CPPFLAGS += -I$(FFTW3_HOME)/include
  FPPFLAGS += -I$(FFTW3_HOME)/include
  …
  LDFLAGS += -L$(FFTW3_HOME)/lib
  …


|------------------------------ ### Package home directory organization

A package directory usually contains Unix-style subdirectories for the various files, which the modulefile usually automatically integrates into your user environment by means of standard environment variables.


|------------------------------ ### Package-specific sample job

Packages that require more than the  standard Carbon job template (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Example_Job_Script) contain a sample job in the toplevel directory:


|------------------------------- # HPC/Submitting and Managing Jobs/Example Job Script


|-------------------------------- # HPC/Submitting and Managing Jobs

  <image 400px-HPC_job_flow.png: >


|-------------------------------- ## Contents

1. 1 Introduction
 1.1. 1.1 Job processing
 1.2. 1.2 Environment variables
2. 2 Submitting and managing jobs
 2.1. 2.1 Job Script
 2.2. 2.2 Submission
 2.3. 2.3 Queues
 2.4. 2.4 Checking job status
  2.4.1. 2.4.1 Getting extra information
  2.4.2. 2.4.2 Peeking at job output files
 2.5. 2.5 Changing jobs after submission
 2.6. 2.6 Removing jobs
3. 3 Declaring that a job requires licenses
 3.1. 3.1 One license type
 3.2. 3.2 Several license types
4. 4 Interactive node access
5. 5 Job notification mails
6. 6 Recording where a job ran
7. 7 Sending mail while a job is running


|-------------------------------- ## Introduction

To accept and run jobs, Carbon uses the Torque Resource Manager (http://en.wikipedia.org/wiki/TORQUE_Resource_Manager),
which is a variant of PBS (http://en.wikipedia.org/wiki/Portable_Batch_System).
A separate software component called a scheduler (http://en.wikipedia.org/wiki/Job_scheduler) chooses the nodes and the start time for jobs according to the job parameters, resource availability, and configuration. Carbon uses the Moab Workload Manager (http://www.adaptivecomputing.com/resources/docs/mwm/6-1-9/help.htm) as scheduler. The resources used by each job (primarily the CPU time) are tracked and managed by the
Gold Allocation Manager (http://www.adaptivecomputing.com/resources/docs/gold/index.php).


|-------------------------------- ### Job processing

A job consists of a job script and applications called therein. The figure at the top shows schematically how a typical job is processed.
Unless otherwise told, Torque will execute the job script on your behalf on the first node allocated by Moab,
in your $HOME directory, and typically using your login shell. It is the script's responsibility to:

• Change to a suitable working directory.
• Recognize and use the other nodes of the job.
 • This is generally done by directing an MPI (http://en.wikipedia.org/wiki/Message_Passing_Interface) program to start on the nodes listed in the job's $PBS_NODEFILE.
 • A job is perfectly free to run more than one program, such as several MPI programs in sequence.
• Set or propagate environment variables as needed to other nodes.


|-------------------------------- ### Environment variables

The handling of environment variables across the cores and nodes that a job uses varies with the capabilities and configuration choices of the various MPI implementations.

• Variables usually are propagated core-to-core for all processes on the first node.
• Variables usually are not propagated node-to-node.

• You must  configure modules and $PATH (https://wiki.anl.gov/cnm/HPC/Software/Module_Setup) in your $HOME/.bashrc file to help mpirun and other mechanisms locate your programs on each compute node. Otherwise mpirun will fail as soon as more than one node is involved, either by not finding the binary itself or some of its required shared libraries, or more insidiously, using different shared libraries.
• Both the variable $PBS_NODEFILE and the file it points to are only available on the first node.
• To propagate (export) environment variables, use mpirun/mpiexec. However, there is no standard or quasi-standard across MPI flavors.
 • OpenMPI's mpirun (http://www.open-mpi.org/doc/v1.4/man1/mpirun.1.php#sect17) selectively exports some variables and supports the -x flag to export additional variables.
 • Intel's mpiexec/mpiexec.hydra offer -envlist NAME,NAME,... instead. See Sec. 2.4 in the Reference Manual at [1] (http://software.intel.com/en-us/articles/intel-mpi-library-documentation/).


|--------------------------------- # HPC/Module Setup


|--------------------------------- ## Contents

1. 1  Introduction
2. 2 The Shell
 2.1. 2.1 A note on tcsh for long-time Unix/Linux users
3. 3 Shell Customizations
 3.1. 3.1 Test
 3.2. 3.2 Pick up newly added modules
 3.3. 3.3 Caveats
4. 4 Modules – General documentation
5. 5 Module Conventions on Carbon


|--------------------------------- ##  Introduction

Carbon uses the Environment Modules (http://modules.sourceforge.net/) package to dynamically provision software.
The package primarily modifies your $PATH and other environment variables.

• Current Carbon module catalog (https://wiki.anl.gov/cnm/HPC/Modules)

To select packages for your use, place module load name commands near the end of your ~/.bashrc file.


|--------------------------------- ## The Shell

The user shell on Carbon is bash (http://en.wikipedia.org/wiki/Bash_(Unix_shell)).




|--------------------------------- ### None

[t]csh (http://en.wikipedia.org/wiki/C_shell) used to be the only vendor-agnostic and widely available shell with decent command line features. Bash is now much better positioned in this area, and offers consistent programming on the command line and in scripts. Therefore, tcsh is now available only on request (to me, stern (https://wiki.anl.gov/cnm/User:Stern)), if you absolutely, positively, insist, and know what you're doing. (There will be a quiz.)

There are good reasons not to use the C shell (http://www.grymoire.com/Unix/CshTop10.txt),
and classic wisdom states “csh programming considered harmful” (http://www.faqs.org/faqs/unix-faq/shell/csh-whynot/).
Even though using [t]csh merely for interactive purposes may appear tolerable,
it is too tempting to set out from tweaking .cshrc into serious programming.
Don't do it. It is not supported. It's dead, Jim.

• Do not use chsh or chfn. Changes will be overwritten.


|--------------------------------- ## Shell Customizations

Place customizations in your ~/.bashrc file by using a text editor such as nano (http://www.nano-editor.org/). A pristine copy is shown below, or can be found at /etc/skel/.bashrc

  # ~/.bashrc
  # User's bash customization, Carbon template; stern 2011-09-15.

  # Merge global definitions -- do not edit.
  if [ -f /etc/bashrc ]; then
      . /etc/bashrc
  fi

  # Carbon customizations -- edit below.
  export PATH=$HOME/bin:$PATH

  #alias blah="foo -xyz"
  #module load ...

• For instance, to add binaries from a user's own compilation of somepackage, and load a couple of modules:

  export PATH=$HOME/somepackage/bin:$HOME/bin:$PATH

  # Load Carbon applications
  module load name1 name2 …
  module load name3/version


|--------------------------------- ### Test

To test the impact of any changes, temporarily run a new shell:

  bash -l        # lowercase letter L
  # run other shell commands
  ...
  # inspect nesting level, then return to the parent shell
  echo $SHLVL
  exit

• Make further corrections to ~/.bashrc as needed.
• You might get lost in multiple nested shell levels. To see the current nesting level, inspect the environment variable $SHLVL as shown above. A normal login shell runs at level 1, and the exit command in such a shell will log you out.


|--------------------------------- ### Pick up newly added modules

When all looks good, either:

• simply restart your shell in place:

• Alternatively, log out and back in, which is a bit more involved.


|--------------------------------- ### Caveats

• Among the various bash startup files (http://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html) .bashrc is the one relevant when invoked remotely (http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_01_02.html#sect_01_02_02_02_06), such as on MPI child nodes reached by sshd.
• In general, do not place a "module load …" command in a PBS job script.
 • This will only work reliably for single-node jobs.
 • It will generally fail for multi-node jobs (nodes > 1).
Reason: The job script is only executed (by the pbs_mom daemon on your behalf) on the first core on the first node of your request. The environment of this process will be cloned for the other cores on the first node, but not for cores on other nodes. How remote environments are configured depends on the MPI implementation. The various mpirun or mpiexec offer flags to pass some or all environment variables to other MPI processes, but these flags are implementation-specific and may not work reliably.
• The most reliable and recommended way is as above, to place module commands in ~/.bashrc. This might preclude job-specific module sets for conflicting modules or tasks. I'm thinking about a proper solution for this. --stern (https://wiki.anl.gov/cnm/User:Stern)


|--------------------------------- ## None

• A general introduction to modules can be found at many other sites, such as:
 • NERSC (http://www.nersc.gov/users/software/nersc-user-environment/modules/)
 • PITT (http://core.sam.pitt.edu/node/71)
 • NCI (AU) (https://nf.apac.edu.au/facilities/software/modules.php)

  $ module help
  …
    Usage: module [ switches ] [ subcommand ] [subcommand-args ]
  …

    Available SubCommands and Args:

  + load		modulefile [modulefile ...]
  + unload	modulefile [modulefile ...]
  + switch	[modulefile1] modulefile2.]
  + list

  + avail		[modulefile [modulefile ...]]
  + whatis	[modulefile [modulefile ...]]
  + help		[modulefile [modulefile ...]]
  + show		modulefile [modulefile ..]

For full documentation, consult the manual page:

  $ man module


|--------------------------------- ## Module Conventions on Carbon

See HPC/Module naming scheme 2008 (https://wiki.anl.gov/cnm/HPC/Module_naming_scheme_2008)

• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|----------------------------------- # HPC/Applications/meep


|----------------------------------- ## Contents

1. 1 Installation Notes
 1.1. 1.1 Distribution
 1.2. 1.2 Supporting Packages
  1.2.1. 1.2.1 blas, lapack
  1.2.2. 1.2.2 zlib
  1.2.3. 1.2.3 FFTW2, FFTW3
  1.2.4. 1.2.4 guile
  1.2.5. 1.2.5 libctl
  1.2.6. 1.2.6 HarmInv
  1.2.7. 1.2.7 HDF5
 1.3. 1.3 MEEP


|----------------------------------- # Installation Notes


|----------------------------------- ## Distribution

• http://ab-initio.mit.edu/wiki/index.php/Meep
• http://ab-initio.mit.edu/wiki/index.php/Meep_Installation


|----------------------------------- ## Supporting Packages


|----------------------------------- ### None

• needed for harminv (not speed-critical)
 • CentOS blas and lapack collide with RHEL libgfortran:

  Transaction Check Error:   package libgfortran-4.1.2-14.el5 (which is newer than libgfortran-4.1.1-52.el5.2) is already installed

• 
 • This is RedHat's 64-bit version: libgfortran-4.1.2-14.el5.x86_64 – 32bit version is missing!

We have:

  [root@mgmt01 redhat]# locate '*libgfortran*rpm'
  /drbd/exports/opt/centos/5.0/os/x86_64/CentOS/libgfortran-4.1.1-52.el5.i386.rpm
  /drbd/exports/opt/centos/5.0/os/x86_64/CentOS/libgfortran-4.1.1-52.el5.x86_64.rpm
  /drbd/exports/opt/centos/5.0/updates/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.i386.rpm
  /drbd/exports/opt/centos/5.0/updates/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.x86_64.rpm
  /drbd/exports/opt/centos/5.0/updates-staged/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.i386.rpm
  /drbd/exports/opt/centos/5.0/updates-staged/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.x86_64.rpm
  /drbd/exports/opt/centos/5.1/os/x86_64/CentOS/libgfortran-4.1.2-14.el5.i386.rpm
  /drbd/exports/opt/centos/5.1/os/x86_64/CentOS/libgfortran-4.1.2-14.el5.x86_64.rpm
  /drbd/exports/opt/rhel/5Server/os/x86_64/Server/libgfortran-4.1.1-52.el5.i386.rpm
  /drbd/exports/opt/rhel/5Server/os/x86_64/Server/libgfortran-4.1.1-52.el5.x86_64.rpm
  /drbd/exports/opt/rhel/5Server/updates/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.i386.rpm
  /drbd/exports/opt/rhel/5Server/updates/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.x86_64.rpm
  /drbd/exports/opt/rhel/5Server/updates/x86_64/RPMS/libgfortran-4.1.2-14.el5.x86_64.rpm
  /drbd/exports/opt/rhel/5Server/updates-staged/x86_64/RPMS/libgfortran-4.1.2-14.el5.x86_64.rpm

• 
 • Brute force:

  rpm -ivh /opt/centos/5.1/os/x86_64/CentOS/libgfortran-4.1.2-14.el5.i386.rpm
  yum install lapack lapack-devel blas blas-devel


|----------------------------------- ### zlib

  yum install zlib-devel


|----------------------------------- ### None

• http://www.fftw.org/
• download to /opt/soft/src/fftw
• build in /opt/soft/build/fftw-*

  ./BUILD.SH
  grep -i warn config*.log

TODO: install and configure "environment-modules"


|----------------------------------- ### guile

• from RHEL5

  yum install guile guile-devel

  Installing:
   guile                   x86_64     5:1.8.0-8.20060831cvs  Server            1.4 M
   guile                   i386       5:1.8.0-8.20060831cvs  Server            1.4 M
   guile-devel             x86_64     5:1.8.0-8.20060831cvs  Server            120 k
   guile-devel             i386       5:1.8.0-8.20060831cvs  Server            120 k
  Installing for dependencies:
   gmp                     i386       4.1.4-10.el5     Server            665 k
   gmp-devel               x86_64     4.1.4-10.el5     Server            568 k
   libtool-ltdl            i386       1.5.22-6.1       Server             37 k
   libtool-ltdl            x86_64     1.5.22-6.1       Server             37 k


|----------------------------------- ### libctl

• http://ab-initio.mit.edu/wiki/index.php/Libctl
• http://ab-initio.mit.edu/libctl/libctl-3.0.3.tar.gz
• download to /opt/soft/src/meep
• build in /opt/soft/build/libctl-*

  ./BUILD.SH


|----------------------------------- ### HarmInv

• http://ab-initio.mit.edu/wiki/index.php/Harminv_installation
• fails to link with Intel MKL?
 • detection failure for sgemm
 • not critical; use reference BLAS/LAPACK
• use icpc instead of icc to handle INFINITY or 1.0/0.0 -- Darn:

  checking for C complex keyword... _Complex
  checking for C complex I constant... unsupported
  configure: error: C doesn't support complex numbers.

• Solution:

  CFLAGS=-std=c99

• final:

  ./BUILD.SH


|----------------------------------- ### HDF5

1. http://www.hdfgroup.org/
2. http://www.hdfgroup.org/HDF5/index.html
3. ftp://ftp.hdfgroup.org/HDF5/current/src/
4. ftp://ftp.hdfgroup.org/HDF5/current/src/unpacked/release_docs/INSTALL – long and detailed instructions
5. download to /opt/soft/src/meep
6. build in /opt/soft/build
7. compiled serial version initially

  ./BUILD-SERIAL.SH

• TODO:
 • http://www.hdfgroup.org/HDF5/PHDF5/ – parallel version


|----------------------------------- ## MEEP

• download to /opt/soft/src/meep
• build in /opt/soft/build/meep-*

  ./BUILD.SH

• added to

  /opt/teamhpc/node-skel/etc/profile.d/cnm.*sh

• build 3 is a chimera, with -llapack, and MKL dependencies, build 4 uses no MKL
• TODO: eval, benchmark

• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|----------------------------------- # HPC/Applications/namd


|----------------------------------- ## Contents

1. 1 MPI version
 1.1. 1.1 Modules
 1.2. 1.2 Using MPI
2. 2 Using GPUs and MPI
3. 3 Documentation
4. 4 Benchmarks


|----------------------------------- ## MPI version


|----------------------------------- ### Modules

• As of NAMD-2.9, the namd module requires FFTW-3 (https://wiki.anl.gov/cnm/HPC/Applications/fftw3). You can load both modules together:


|------------------------------------ # HPC/Applications/fftw3


|------------------------------------ ## Linking FFTW3

Load the module in your .bashrc or simply on the command line.

Then, to link, you typically need to pass to make(1) or configure where to find include and library files.

In the simplest case, simply pass on the command line 3 items:

1. path to include files -Ipath,
2. path to library files -Lpath,
3. the actual link request -llibname. (lowercase L)

For example, for a standalone C program:

  icc … your obj files and flags … -I$FFTW3_HOME/include -L$FFTW3_HOME/lib -lfftw3

For MPI, simply replace icc by mpicc.

Sometimes application makefiles use variables to handle the paths, e.g. for LAMMPS, the following is needed:

  make … \
         FFT_PATH="-L$FFTW3_HOME/lib" \
         FFT_LIB="-lfftw3" \
         …


|------------------------------------ ## Caveat: Distro-provided FFTW3

There is also a system-provided version of FFTW3, version 3.2.2. This version is installed under /usr/lib64, with man pages, etc.
You can link this versions simply using -lfftw3 without the need for -L paths.

  module load fftw3 namd


|----------------------------------- ### Using MPI

• NAMD uses its own MPI wrapper, called Charm++ (http://charm.cs.uiuc.edu/), but the default mpirun from OpenMPI works just fine.
• Use the Generic job template (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Example_Job_Script)

  #!/bin/bash
  …
  cd $PBS_O_WORKDIR
  mpirun -machinefile $PBS_NODEFILE -np $PBS_NP \
          namd2 file.namd


|----------------------------------- ## Using GPUs and MPI

As of module version namd/2.9plus-MPI-icc-3 the module provides two binaries, a regular one called namd2 (as usual) and a GPU-eneabled binary called namd2-cuda. The latter requires the cuda module as additional prerequisite:

  module load fftw3
  module load cuda
  module load namd

The relevant paragraphs from the NAMD User Guide (http://www.ks.uiuc.edu/Research/namd/2.9/ug/node88.html) are:

Energy evaluation is slower than calculating forces alone, and the loss is much greater in CUDA-accelerated builds. Therefore you should set outputEnergies to 100 or higher in the simulation config file. Some features are unavailable in CUDA builds, including alchemical free energy perturbation and the Lowe-Andersen thermostat.

As this is a new feature you are encouraged to test all simulations before beginning production runs. Forces evaluated on the GPU differ slightly from a CPU-only calculation, an effect more visible in reported scalar pressure values than in energies.
<br.>… 
Each namd2 thread can use only one GPU. Therefore you will need to run at least one thread for each GPU you want to use. Multiple threads can share a single GPU, usually with an increase in performance. NAMD will automatically distribute threads equally among the GPUs on a node.

To run on GPU nodes:

  #PBS -l nodes=N:ppn=PPN:gpus=1
  …
  mpirun -machinfile $PBS_NODEFILE -np $PBS_NP \
       namd2-cuda +idlepoll file.namd

• Test and optimize the N and PPN parameters for your situation. Start with nodes=1:ppn=4, increase up to ppn=12, and/or increase nodes > 1. Speedups from a GPU can be expected to be of order 4–5 ×.
• The gpus=… modifier refers to GPUs per node and currently must always be 1.


|----------------------------------- ## Documentation

• See Documentation on the NAMD home page (http://www.ks.uiuc.edu/Research/namd/) – contains official User guide (http://www.ks.uiuc.edu/Research/namd/2.7b1/ug/)
• Local documentation:

  $ ls $NAMD_HOME/share/doc
  README.txt  announce.txt  license.txt  notes.txt  ug.pdf


|----------------------------------- ## Benchmarks

• Using ApoA1 example from http://www.ks.uiuc.edu/Research/namd/performance.html

  grep Benchm *2.7*/*.o* | sort -k4,4n | _ -w
  namd-2.7b1-gen2-1/namd-gen2-1.o248034:Info: Benchmark time: 1 CPUs 1.81607 s/step 21.0193 days/ns 241.219 MB memory
  namd-2.7b1-gen2-1/namd-gen2-1.o248034:Info: Benchmark time: 1 CPUs 1.8238 s/step 21.1088 days/ns 240.773 MB memory
  namd-2.7b1-gen2-4/namd-gen2-4.o248032:Info: Benchmark time: 4 CPUs 0.428028 s/step 4.95403 days/ns 90.7305 MB memory
  namd-2.7b1-gen2-4/namd-gen2-4.o248032:Info: Benchmark time: 4 CPUs 0.430383 s/step 4.98129 days/ns 90.25 MB memory
  namd-2.7b1-gen2-8/namd-gen2-8.o248035:Info: Benchmark time: 8 CPUs 0.568039 s/step 6.57453 days/ns 65.707 MB memory
  namd-2.7b1-gen2-8/namd-gen2-8.o248035:Info: Benchmark time: 8 CPUs 0.887236 s/step 10.2689 days/ns 65.3945 MB memory
  namd-2.7b1-gen2-8/namd-gen2-8.o248036:Info: Benchmark time: 8 CPUs 0.227086 s/step 2.62831 days/ns 64.2656 MB memory
  namd-2.7b1-gen2-8/namd-gen2-8.o248036:Info: Benchmark time: 8 CPUs 0.229058 s/step 2.65113 days/ns 64.5469 MB memory
  namd-2.7b1-gen2-16/namd-gen2-16.o248033:Info: Benchmark time: 16 CPUs 0.105355 s/step 1.21938 days/ns 50.6367 MB memory
  namd-2.7b1-gen2-16/namd-gen2-16.o248033:Info: Benchmark time: 16 CPUs 0.105658 s/step 1.2229 days/ns 50.3477 MB memory

  grep Benchm *2.9*/*.o* | sort -k4,4n | _ -w
  namd-2.9-gen2-1/namd-gen2-1.o248004:Info: Benchmark time: 1 CPUs 1.58065 s/step 18.2946 days/ns 398.93 MB memory
  namd-2.9-gen2-1/namd-gen2-1.o248004:Info: Benchmark time: 1 CPUs 1.58666 s/step 18.3641 days/ns 398.695 MB memory
  namd-2.9-gen2-1/namd-gen2-1.o248011:Info: Benchmark time: 1 CPUs 1.79167 s/step 20.737 days/ns 398.926 MB memory
  namd-2.9-gen2-1/namd-gen2-1.o248011:Info: Benchmark time: 1 CPUs 1.79819 s/step 20.8124 days/ns 398.695 MB memory
  namd-2.9-gen2-4/namd-gen2-4.o248003:Info: Benchmark time: 4 CPUs 1.05068 s/step 12.1606 days/ns 254.582 MB memory
  namd-2.9-gen2-4/namd-gen2-4.o248003:Info: Benchmark time: 4 CPUs 1.17972 s/step 13.6542 days/ns 254.582 MB memory
  namd-2.9-gen2-4/namd-gen2-4.o248006:Info: Benchmark time: 4 CPUs 0.424272 s/step 4.91055 days/ns 269.023 MB memory
  namd-2.9-gen2-4/namd-gen2-4.o248006:Info: Benchmark time: 4 CPUs 0.42632 s/step 4.93426 days/ns 269.023 MB memory
  namd-2.9-gen2-8/namd-gen2-8.o247983:Info: Benchmark time: 8 CPUs 0.211136 s/step 2.4437 days/ns 242.109 MB memory
  namd-2.9-gen2-8/namd-gen2-8.o247983:Info: Benchmark time: 8 CPUs 0.219128 s/step 2.53621 days/ns 242.109 MB memory
  namd-2.9-gen2-16/namd-gen2-1.o248005:Info: Benchmark time: 16 CPUs 0.103843 s/step 1.20188 days/ns 226.25 MB memory
  namd-2.9-gen2-16/namd-gen2-1.o248005:Info: Benchmark time: 16 CPUs 0.103924 s/step 1.20282 days/ns 225.961 MB memory

• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|----------------------------------- # HPC/Carbon Cluster - Development tools


|----------------------------------- ## Contents

1. 1 Compilers
 1.1. 1.1 GNU family
 1.2. 1.2 Intel Software Development Products
2. 2 MPI
 2.1. 2.1 OpenMPI
 2.2. 2.2 Intel MPI
 2.3. 2.3 MPICH/MPICH2

This is an overview of the compilers and MPI libraries available on Carbon.
Each package name leads to its documentation.


|------------------------------------ # HPC/Modules

Redirect to:

• HPC/Applications (https://wiki.anl.gov/cnm/HPC/Applications)


|----------------------------------- ## Compilers


|----------------------------------- ### GNU family

• GCC (http://gcc.gnu.org/onlinedocs/)
• GDB (http://www.gnu.org/software/gdb/documentation/)
• Make (http://www.gnu.org/software/make/manual/make.html)
• … other manuals (http://www.gnu.org/manual/manual.html)


|----------------------------------- ### Intel Software Development Products

As of 2011, we have the following tools under support within the Intel® Composer XE 2011 for Linux (http://software.intel.com/en-us/articles/intel-composer-xe/) bundle.

1. Intel C/C++ (http://software.intel.com/en-us/articles/intel-c-compiler-professional-edition-for-linux-documentation/)
2. Intel Fortran (http://software.intel.com/en-us/articles/intel-fortran-compiler-professional-edition-for-linux-documentation/)
3. Math Kernel Library (http://software.intel.com/en-us/articles/intel-math-kernel-library-documentation/) -- see also HPC/Software/Modules/mkl (https://wiki.anl.gov/cnm/HPC/Software/Modules/mkl)
4. Integrated Performance Primitives Documentation (IPP) (http://software.intel.com/en-us/articles/intel-integrated-performance-primitives-documentation/)
5. Threading Building Blocks Documentation (TBB) (http://software.intel.com/en-us/articles/intel-threading-building-blocks-documentation/)
6. Debugger (idb) (http://software.intel.com/en-us/articles/intel-c-compiler-professional-edition-for-linux-documentation/)


|------------------------------------ # HPC/Modules/mkl

Redirect to:

• HPC/Applications/mkl (https://wiki.anl.gov/cnm/HPC/Applications/mkl)


|------------------------------------- # HPC/Applications/mkl


|------------------------------------- ## Vendor Documentation

1. Intel Math Kernel Library - Full Documentation (http://software.intel.com/en-us/articles/intel-math-kernel-library-documentation/)
 1.1. Release notes, User guides etc.
2. since v10 includes the formerly separate Cluster MKL (providing ScaLapack et al.)
3. provides BLAS, Lapack, ScaLapack, FFTs (including an FFTW interface (http://www.intel.com/software/products/mkl/docs/fftw3xmkl_notes.htm))
4. Link line advisor (http://software.intel.com/en-us/articles/intel-mkl-link-line-advisor/)
 4.1. alternate (static text) (http://software.intel.com/en-us/articles/intel-math-kernel-library-intel-mkl-for-linux-linking-applications-with-intel-mkl-version-100/)


|------------------------------------- ## Carbon specifics

• Avoid specifying absolute library paths in your Makefile unless you wish to select a specific version. The user environment is normally correctly set up.
• Loading the MKL module does not yet tell the linker where to find the library. The most convenient place is to modify the Makefile similar to the following:

  LDFLAGS += -L$MKLROOT/lib/em64t

or, starting with 10.3.x:

  LDFLAGS += -L$MKLROOT/lib/intel64

• Link examples:

  # Sequential:
     -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread

  # OpenMP multi-threaded:
     -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread

• The FFTW interface of the MKL can be linked by prefixing the above options with one of:

  -lfftw2xc_intel
  -lfftw2xf_intel
  -lfftw3xc_intel
  -lfftw3xf_intel

Choose the appropriate version between bindings for FFTW v2 vs. v3 and C vs. Fortran.

• see HPC/Carbon_Cluster_-_Getting_started#Example_job_file (https://wiki.anl.gov/cnm/HPC/Carbon_Cluster_-_Getting_started) for controlling OpenMP execution.


|-------------------------------------- # HPC/Getting started

Redirect to:

• HPC/Running Jobs (https://wiki.anl.gov/wiki_cnm/index.php)

Documentation is installed locally mainly under:

  $ICC_HOME/Documentation

  $ ls -F $ICC_HOME/Documentation/en_US
  Release_NotesC.pdf  compiler_c/          documentation_f.htm    getting_started_f.pdf  lgpltext
  Release_NotesF.pdf  compiler_f/          flicense               idb/                   mkl/
  clicense            documentation_c.htm  getting_started_c.pdf  ipp/                   tbb/

No longer maintained on Carbon:

• VTune analyzer (http://www.intel.com/support/performancetools/vtune/index1.htm)


|----------------------------------- ## MPI


|----------------------------------- ### OpenMPI

This is the primary and recommended MPI version. It supports Ethernet and InfiniBand interconnect, with InfiniBand set as default by means of an OMPI_MCA_… (http://www.open-mpi.org/faq/?category=openfabrics#ib-btl) environment variable.

• OpenMPI Documentation (http://www.open-mpi.org/doc/)
• FAQ (http://www.open-mpi.org/faq)


|----------------------------------- ### Intel MPI

• See HPC/Software/Modules/impi (https://wiki.anl.gov/cnm/HPC/Software/Modules/impi)


|------------------------------------ # HPC/Modules/impi

Redirect to:

• HPC/Applications/impi (https://wiki.anl.gov/cnm/HPC/Applications/impi)


|------------------------------------- # HPC/Applications/impi


|------------------------------------- ## Introduction

Intel-MPI is based on MPICH2 and provides an MPICH2 runtime environment for precompiled binaries.

• Vendor product overview (http://software.intel.com/en-us/articles/intel-mpi-library/)
• Full documentation (http://software.intel.com/en-us/articles/intel-mpi-library-documentation/)


|------------------------------------- ## Process manager

Use the Hydra process manager (new since impi version 4.x). See sec. 2.4 Scalable Process Management System in the Reference Manual (http://software.intel.com/sites/products/documentation/hpc/mpi/linux/reference_manual.pdf).
To do so, simply use mpiexec.hydra instead of the customary mpirun or mpiexec calls:

  mpiexec.hydra \
  	-machinefile  $PBS_NODEFILE \
  	-np $(wc -l < $PBS_NODEFILE) \
  	./a.out

With Hydra, you no longer need to set up and tear down the older and considerably less stable MPD manager.


|------------------------------------- ## IMPI vs. OpenMPI

Since the openmpi module is loaded by default, use the following instead of module load impi:

  module switch openmpi impi

However, the modules can coexist at runtime if:

• impi (https://wiki.anl.gov/cnm/HPC/Applications) is loaded first and is called using mpiexec.hydra.
• openmpi (https://wiki.anl.gov/cnm/HPC/Applications) is loaded second and is called using mpirun.
• binaries using impi are statically linked, i.e.,

  ldd binary-using-impi | grep libmpi.so || echo OK

• you don't attempt to compile software using the convenience wrappers like mpicc, mpif90, etc. For these wrappers, the last module loaded will be active. It may be possible to use full paths like $IMPI_HOME/bin/mpif90, but this has not been tested fully.

  module unload openmpi
  module load impi
  module load openmpi

  (cd $OMPI_HOME; ls -1 {bin,lib}/* ) > /tmp/ompi
  (cd $IMPI_HOME; ls -1 {bin,lib}/* ) > /tmp/impi
  comm -1 -2 /tmp/?mpi
  rm /tmp/?mpi

  bin/mpicc
  bin/mpicxx
  bin/mpiexec
  bin/mpif77
  bin/mpif90
  bin/mpirun
  lib/libmpi.so


|----------------------------------- ### None

• Not installed explicitly, but Intel-MPI is based on MPICH2 and provides an MPICH2 runtime environment for precompiled binaries.

• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|----------------------------------- # HPC/Submitting and Managing Jobs/Advanced node selection


|----------------------------------- ## Contents

1. 1 Node Types
 1.1. 1.1 Hardware
  1.1.1. 1.1.1 Node Types
  1.1.2. 1.1.2 Major CPU flags
 1.2. 1.2 Selecting node types for jobs
 1.3. 1.3 Recommendations
2. 2 PPN Tricks
 2.1. 2.1 Shared vs. Exclusive Node Access
 2.2. 2.2 Memory constraints
 2.3. 2.3 Different PPN by node
3. 3 Multithreading using OpenMP
 3.1. 3.1 Pure OpenMP, single entire node
 3.2. 3.2 Pure OpenMP, single node, possibly shared
 3.3. 3.3 OpenMP/MPI hybrid
4. 4 Advanced: PBS_* Variables


|----------------------------------- ## Node Types


|----------------------------------- ### Hardware

Carbon has several major hardware node types, named genX for short, with X = 1, 2. …. Nodes are further sub-classified by their amount of installed memory.


|----------------------------------- #### Node Types

Nodenames, types
----------------
Login
login5…6
Compute
n401…408
n409…420
n421…460
n461…476
n477…512
n513…534
…

Retired
n001…144
n145…240,289…348
n241…288
n352…366

• Compute time is charged as the product of cores reserved × wallclock time × charge rate. The charge rate accommodates nominal differences in CPU speed. The reference speed (100%) is taken at a gen2 core.
• Compute time on gen4 nodes is charged at 200% of actual walltime, given their performance relative to gen2 nodes.
• gen7 nodes have two GPUs each; GPU usage is currently not "charged" (accounted for) separately.
• Virtual memory usage on nodes may reach up to about 2 × the physical memory size. Your processes running under PBS may allocate that much vmem but cannot practically use it all for reasons of swap space size and bandwidth. If a node acitvely uses swap for more than a few minutes (which drastically slows down compute performance), the job will automatically be killed.


|----------------------------------- #### Major CPU flags

CPU capabilities grow with each node generation. Executables can be compiled to leverage specific CPU capabilities. Jobs using such executables must use the qsub option -l nodes=...:genX to be directed to nodes having that capability.

Flag name                                       gen4 gen5 gen6 gen7
-------------------------------------------------------------------
avx512_vnni                                     –    –    –    x
avx512bw, avx512cd, avx512dq, avx512f, avx512vl –    –    x    x
avx2                                            –    x    x    x
fma                                             –    x    x    x
adx                                             –    x    x    x
avx                                             x    x    x    x
sse4_2                                          x    x    x    x




|----------------------------------- ### Selecting node types for jobs

Jobs are directed automatically onto nodes of the same generation, with preference for gen2. Unless specifically requested, jobs will never mix generations. This will avoid disparate CPU speeds and MPI communication setup in a job. You can force jobs onto either node set in the job script after #PBS or on the qsub command line by suffixing the nodes= specifier with a property such as :gen1 or :gen2. For example, to run on 2 nodes with 8 cores each:

  qsub -l nodes=2:ppn=8:gen1  foo.job	# not recommended for VASP
  qsub -l nodes=2:ppn=8:gen2  foo.job

The following are (as of now) equivalent, since "bigmem" currently implies "gen2":

  qsub -l nodes=2:ppn=8:gen2:bigmem  foo.job
  qsub -l nodes=2:ppn=8:bigmem       foo.job

See also:
http://www.clusterresources.com/torquedocs21/2.1jobsubmission.shtml#resources

• Special note for VASP (https://wiki.anl.gov/cnm/HPC/Software/Catalog/vasp)


|------------------------------------ # HPC/Software/Modules/vasp

Redirect to:

• HPC/Applications/vasp (https://wiki.anl.gov/cnm/HPC/Applications/vasp)


|------------------------------------- # HPC/Applications/vasp


|------------------------------------- ## Contents

1. 1 Requesting Access
2. 2 Module considerations
3. 3 Binaries
 3.1. 3.1 Available binaries and their compile-time flags used
 3.2. 3.2 Explanation of flags
 3.3. 3.3 Common flags
4. 4 General patches
 4.1. 4.1 vdW-DF functional
 4.2. 4.2 Solvation Model
 4.3. 4.3 Constrained Cell Relaxation
5. 5 Usage under ASE
6. 6 Usage under ATK/VNL
 6.1. 6.1 See also


|------------------------------------- ## Requesting Access

VASP versions 4, 5, and 6 are is available on Carbon, subject to confirmation for your group having a license for VASP major versions 4, 5, or 6.

To use VASP binaries on Carbon, send me (M. Sternberg), the following for the persons on your VASP license group who will be using VASP on Carbon:

• For each person:
 • Full name
 • Email address that the person registered with at vasp.at




|------------------------------------- ## Module considerations

• Review the available modules for each major version:
 • vasp (https://wiki.anl.gov/cnm/HPC/Software/Modules), for VASP 4.x
 • vasp5 (https://wiki.anl.gov/cnm/HPC/Software/Modules), for VASP 5.x
 • vasp6 (https://wiki.anl.gov/cnm/HPC/Software/Modules), for VASP 6.x
• Choose and add one of the following lines to your ~/.bashrc (https://wiki.anl.gov/cnm/HPC/Software/Module_Setup) file:

  module load --auto vasp                # sets $VASP_HOME
  module load --auto vasp5               # sets $VASP5_HOME
  module load --auto vasp6               # sets $VASP6_HOME

• Each module provides several binaries (see next section).
• You do not need to specify a path for vasp for the mpirun statement in the PBS job script.
• The modules are mutually exclusive.
• Potentials are available in /opt/soft/vasp-pot.

To access Graeme Henkelman's script suite, load the vasp-vtstscripts module (https://wiki.anl.gov/cnm/HPC/Software/Modules). It works with both the vasp and vasp5 modules above. In either case, choose one of the VTST-patched binaries from the table below. The unpatched vasp binaries will not interoperate with the script suite.

  module load vasp-vtstscripts


|------------------------------------- ## Binaries

Some options for VASP cannot be configured at runtime (by input data) but must be chosen when compiling.
Since no single set of compile-time choices is appropriate for all uses, a number of binaries are provided, distinguished by their name.

The modules from versions vasp/4.6.35-mkl-13 and vasp5/5.2.12a-mkl-4 onwards, respectively,
contain several binaries built using different sets of preprocessor flags in the Makefile.
Earlier modules only contain two binaries, vasp and vasp-gamma.
Additional binaries are provided for useful preprocessor flag combinations
after applying patches from the group of Graeme Henkelman (UT Austin) to the source code:

• Transition state tools for VASP (http://theory.cm.utexas.edu/vtsttools/), and
• DOS Projection in Bader Volumes (http://theory.cm.utexas.edu/vtsttools/bader/).

To verify the binaries available for a module, run the appropriate command, once the module has been loaded:

  ls $VASP_HOME/bin   # for VASP-4 (previous major version)
  ls $VASP5_HOME/bin

Choose a binary appropriate for your task and pass its name to mpirun in the job script.
There is no need for full path names.
Copy a sample job script from:

  $VASP_HOME/vasp.job   # for VASP-4 (previous major version)
  $VASP5_HOME/vasp.job


|------------------------------------- ### Available binaries and their compile-time flags used

This table lists the names of the binaries compiled from

• combinations of preprocessor flags, and
• variants of the source code, primarily enhancing capabilities of ionic updates.

Versions and capabilities
-------------------------------------------
Official

Conventional,Versions 4.x–5.3
-DNGZhalf
-DwNGZhalf
-DwNGZhalf -DNGZhalf
AdvancedMD techniques,4Versions 5.2 and 5.3
-Dtbdyn -DNGZhalf
-Dtbdyn -DwNGZhalf
-Dtbdyn -DwNGZhalf -DNGZhalf

Version 5.44,5
-Dtbdyn -DNGZhalf
-Dtbdyn -DwNGZhalf -DNGZhalf
(GPU6)
(GPU6) -DNGZhalf

Version 6 (prelim.)

1) Stress tensor selectively zeroed in subroutine CONSTR_CELL_RELAX
2) http://theory.cm.utexas.edu/vtsttools/ . The dimer method was broken for vasp5/5.3.3 prior to 5.3.3p3-mkl-2.
3) http://theory.cm.utexas.edu/vtsttools/dos/ (now defunct)
4) http://cms.mpi.univie.ac.at/vasp/vasp/Advanced_MD_techniques.html 
5) Axis-selective constrained cell relaxation, controlled via an optional input file CELL_RELAX, is compiled into all binaries.
6) http://cms.mpi.univie.ac.at/wiki/index.php/GPU_port_of_VASP


|------------------------------------- ### Explanation of flags

• File vasp.5.2/makefile.linux_pg in the souce code explains:

  #-----------------------------------------------------------------------
  # possible options for CPP:
  # NGXhalf             charge density   reduced in X direction
  # wNGXhalf            gamma point only reduced in X direction
  # avoidalloc          avoid ALLOCATE if possible
  # IFC                 work around some IFC bugs
  # CACHE_SIZE          1000 for PII,PIII, 5000 for Athlon, 8000 P4
  # RPROMU_DGEMV        use DGEMV instead of DGEMM in RPRO (usually  faster)
  # RACCMU_DGEMV        use DGEMV instead of DGEMM in RACC (faster on P4)
  #  **** definitely use -DRACCMU_DGEMV if you use the mkl library
  #-----------------------------------------------------------------------
  …
  #-----------------------------------------------------------------------
  # additional options for CPP in parallel version (see also above):
  # NGZhalf               charge density   reduced in Z direction
  # wNGZhalf              gamma point only reduced in Z direction
  # scaLAPACK             use scaLAPACK (usually slower on 100 Mbit Net)
  #-----------------------------------------------------------------------

• In the new build system (since version 5.4) the direct use of the -D*NG*half options has been replaced by predefined make(1) arguments VERSION={std,gam,ncl}.


|------------------------------------- ### Common flags

  -DIFC -DRPROMU_DGEMV  -DRACCMU_DGEMV -DCACHE_SIZE=16000  -DMPI -DMPI_BLOCK=8000


|------------------------------------- ## General patches

The following modifications have been applied and are active in all binaries:


|------------------------------------- ### vdW-DF functional

The vdW-DF functional of Langreth and Lundqvist et al. (http://cms.mpi.univie.ac.at/vasp/vasp/vdW_DF_functional_Langreth_Lundqvist_et_al.html)
is implemented in all the *-chargehalf binaries of the vasp5 module, and all versions above 5.4.

No specific preparations are needed other than setting the INCAR flags as documented. The binaries will find the required precalculated kernel file vdw_kernel.bindat by means of the environment variable $VASP5_HOME which is set by the module.

This is a Carbon-specific extension.


|------------------------------------- ### Solvation Model

All binaries above build 5.4.1.3-8-* contain the VASPsol (http://vaspsol.mse.ufl.edu) solvation model of the Hennig group at Univ. of Florida..


|------------------------------------- ### Constrained Cell Relaxation

Likewise, in all binaries above build 5.4.1.3-8-* the relaxation of the unit cell may be constrained
along one or more axes by creating a supplementary input file CELL_RELAX.
The subroutine CONSTR_CELL_RELAX,
having been a placeholder in the original source files,
was extended to read (and re-read) this file in each call and apply the containts
to the force components of each basis vector.
The performance impact from the multiple reads is expected to be minimal.

This is a Carbon-specific extension.

  cell relaxation     - fixed string, for validation only, leading spaces ignored.
    ix iy iz            - 3 integer flags, indicating which cartesian components of the
                          basis vectors are allowed to be changed; 0 means no (fixed),
                          non-zero means yes (can change).

• To relax the entire cell (identical to default behavior):

  cell relaxation
    1 1 1

• To relax along z only:

  cell relaxation
    0 0 1

To indicate if your chosen VASP binary (a) looked for and (b) did or did not find the CELL_RELAX file, the subroutine CONSTR_CELL_RELAX will output one of the following each time it has been called:

  CELL_RELAX not present: performing unconstrained unit cell relaxation

  CELL_RELAX: performing constrained unit cell relaxation in cartesian directions  1  0  1
  Unit cell forces:
        1.1111111111111112       0.0000000000000000       2.2222222222222223
        0.0000000000000000       0.0000000000000000       0.0000000000000000
        2.2222222222222223       0.0000000000000000       3.3333333333333330


|------------------------------------- ## Usage under ASE

VASP calculations can be set up, run, and analyzed using the calculator interface (https://wiki.fysik.dtu.dk/ase/ase/calculators/vasp.html) of the ASE (https://wiki.fysik.dtu.dk/ase/overview.html) package, available on Carbon under both the  ase3 (https://wiki.anl.gov/cnm/HPC/Applications) and  atk (https://wiki.anl.gov/cnm/HPC/Applications) modules.
ASE is told how to use VASP by means of environment variables which the modules define for you with sensible defaults:

  VASP_PP_PATH
  VASP_COMMAND

1. The calculator will create and possibly overwrite VASP input files in the current directory, and then run VASP therein. To minimize clutter, consider setting up and changing into a run-specific directory before initializing the calculator.
2. VASP_COMMAND normally uses the vasp binary (see above), and will run in parallel when called under a PBS job. That decision is based on the PBS_NODEFILE environment variable being present.
3. You can supply another executable name or path in the variable VASP_BINARY.
4. The ASE calculator supports an alternative calling interface, a python script named in VASP_SCRIPT. This variable is not set by default on Carbon. If you wish to define a personal VASP_SCRIPT, unset VASP_COMMAND in tandem.
 4.1. VASP_COMMAND takes precendence over VASP_SCRIPT.
 4.2. The stdout stream is redirected to a file under VASP_COMMAND, but will appear on ASE's stdout under VASP_SCRIPT.
 4.3. Inspect the calculator source code (https://trac.fysik.dtu.dk/projects/ase/browser/trunk/ase/calculators/vasp.py#L519) for details; see function run(self).


|------------------------------------- ## None

The ATK (http://quantumwise.com/documents/manuals/latest/ReferenceManual) package (module atk (https://wiki.anl.gov/cnm/HPC/Applications)) supports two different ways to interface with VASP.

1. The ase calculator interface (http://quantumwise.com/documents/manuals/latest/ReferenceManual/index.html/chap.python.html#sect1.appendix.nlpackages) – see previous section.
2. The VASPScripter (http://quantumwise.com/documents/tutorials/latest/VASPScripter) AddOn.
 2.1. The scripter "merely" helps you to set up the VASP input files in VNL, the ATK GUI. It does not start or analyze a VASP run.
 2.2. The directory for pseudopotentials is preconfigured to be the same as $VASP_PP_PATH for the ASE calculator.


|------------------------------------- ### See also

• Advanced node selection (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection)


|----------------------------------- ### Recommendations

• Avoid specifying a node generation unless you have a reason. This widens the pool of nodes suitable to run your job, thus decreasing wait times.
• To get you high memory per core, specify :bigmem (6 GB) or :hugemem (8 GB, charged at 2 × walltime rate).
• With ppn=8 your jobs may run on any node generation.
• With ppn=4 your jobs have a fairly good chance of running in the "attic" of gen3 nodes which are often busy with ppn=8 jobs.


|----------------------------------- ## PPN Tricks

Each Carbon node has nodes with 8, 12, and 16 cores.
A request of ppn=8 in the job submission can get routed onto a node with exactly 8 cores and thus use the entire node,
or the job can get routed to a node with additional cores which may be used by other jobs.

You can specify if your application is fine to run on shared nodes or needs nodes for exclusive use, such as for the following reasons:

1. your application is not parallelized,
2. your application has limited hardcoded parallelization, e.g. for 2 or 4 cores only,
3. your application runs multi-threaded but uses $PBS_NODEFILE to infer the number of processes to start,
4. your application runs busy service processes or service threads (e.g. NWChem),
5. your application saturates a resource, e.g. memory bandwidth (some large VASP calculations),
6. the node's memory is exhausted by fewer application processeses than there are cores available.

Depending on the reason, the node either may be or must not be used by other jobs.
In the past, the only way to achieve exclusive but undersubscribed node access was to request ppn=8 and then to thin out a copy of the nodefile before passing it to the application.
To eliminate the need to edit the nodefile, use the -l naccesspolicy=… flag to differentiate between resources requested from Moab from those passed to the application (in $PBS_NODEFILE).

Select an option from the following scenarios.


|----------------------------------- ### Shared vs. Exclusive Node Access

  #PBS -l nodes=nnn:ppn=4

  #PBS -l naccesspolicy=SHARED

  #PBS -l nodes=nnn:ppn=2
  #PBS -l naccesspolicy=SINGLEUSER -n

  #PBS -l nodes=nnn:ppn=4
  #PBS -l naccesspolicy=SINGLEJOB -n

  #PBS -l nodes=nnn:ppn=4
  #PBS -l naccesspolicy=UNIQUEUSER


|----------------------------------- ### Memory constraints

Jobs that do not use all cores on a node are subject to memory contraints,
such that memory on each node is allocated in rough proportion to the number of cores requested.
Specifically, most of Carbon's current nodes have 2 physical memory banks (sets of DIMM slots),
and only one of these is made accessible to jobs that request ppn ≤ nproc/2,
i.e., half the number of physical cores per node nproc.

To request access to all memory on a node for jobs with ppn < nproc
use the qsub -n option, as shown in the solutions above.


|----------------------------------- ### Different PPN by node

  #PBS -l nodes=1:ppn=1+2:ppn=4
  #PBS -l naccesspolicy=SINGLEJOB -n

  nodes = ( 1:ppn=1 ) + ( 2:ppn=4 )

  n011
  n012
  n012
  n012
  n012
  n034
  n034
  n034
  n034

In all of the preceding scenarios the following applies:

• The $PBS_NODEFILE seen by the job script will always match ppn.
• For accounting, the job will be billed by the number of cores blocked from use by other users, i.e., ncores=ppn for shared nodes, and ncores=8 otherwise.


|----------------------------------- ## Multithreading using OpenMP

When you wish to use multithreading, you must ensure that the total number of "busy" user threads and processes corresponds to the number of cores requested from PBS. Today, multithreading in applications and libraries is typically programmed using the OpenMP interface (http://en.wikipedia.org/wiki/OpenMP) and the number of threads is controlled by the environment variable $OMP_NUM_THREADS.
Select from the following scenarios.


|----------------------------------- ### None

  #PBS -l nodes=1:ppn=8
  #PBS -l naccesspolicy=SINGLEJOB -n

  cd $PBS_O_WORKDIR
  export OMP_NUM_THREADS=$PBS_NUM_PPN
  ...
  programname …


|----------------------------------- ### None

Choose the number of cores n such that 1 ≤ n ≤ 8 (or 16):

  #PBS -l nodes=1:ppn=n
  ...
  cd $PBS_O_WORKDIR
  export OMP_NUM_THREADS=$PBS_NUM_PPN
  ...
  programname …

Here, the default policy "SHARED" is in effect, and OMP_NUM_THREADS is set automatically by counting the number of times that the first node occurs in $PBS_NODEFILE. This will allow you to vary or override the nodes setting using "qsub -l nodes=…" without having to edit it twice in the job file.


|----------------------------------- ### None

Making efficient use of multithreading on multiple nodes which communicate over MPI is fairly involved and is subject to ongoing research (http://www.google.com/search?hl=en&rls=en-us&q=MPI+OpenMP). Since OMP_NUM_THREADS is set to 1 by default on MPI satellite nodes, you must export this variable after you altered it in the job file.

  #!/bin/bash
  #PBS -l nodes=nnn:ppn=2
  #PBS -l naccesspolicy=SINGLEJOB -n

  # Calculate number of threads available per MPI process
  cores_per_node=$( grep -c ^processor /proc/cpuinfo )
  export OMP_NUM_THREADS=$(( cores_per_node / PBS_NUM_PPN ))

  mpirun -x OMP_NUM_THREADS -machinefile  $PBS_NODEFILE -np $PBS_NP \
       programname …

The -x option is specific to OpenMPI; please consult the documentation to achieve the same behavior in other MPI implementations.

The last example will ensure:

• you get allocated entire nodes (SINGLEJOB policy)
• you do not oversubscribe cores (OMP_NUM_THREADS is calculated from ppn)
• you only have one place to adjust (ppn), and can do so in the command line, or even post submission

It is assumed:

• The number of cores on the first node (running the job script) is the same as on the other nodes.
• All cores on a node will be used.


|----------------------------------- ## None

The following environment variables are provided in a job environment, with their value being computed, from torque-3.0.5/src/resmom/start_exec.c :

  static char *variables_else[] =   /* variables to add, value computed */
    {
    "HOME",
    "LOGNAME",
    "PBS_JOBNAME",
    "PBS_JOBID",
    "PBS_QUEUE",
    "SHELL",
    "USER",
    "PBS_JOBCOOKIE",
    "PBS_NODENUM",
    "PBS_TASKNUM",
    "PBS_MOMPORT",
    "PBS_NODEFILE",
    "PBS_NNODES",      /* number of nodes specified by size */
    "TMPDIR",
    "PBS_VERSION",
    "PBS_NUM_NODES",  /* number of nodes specified by nodes string */
    "PBS_NUM_PPN",    /* ppn value specified by nodes string */
    "PBS_GPUFILE",    /* file containing which GPUs to access */
    "PBS_NP",         /* number of processors requested */
    "PBS_WALLTIME",   /* requested or default walltime */
    NULL
    };

• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|----------------------------------- # HPC/Network Access

Carbon ClusterUser Information
-------------------------------

  <image 240px-HPC-Main-external.jpg: HPC-Main-external.jpg>

Carbon ClusterUser Information

Contents

1 Accessing Carbon

1.1 Requirements
1.2 Access from inside the CNM using an Argonne-owned computer
1.3 Access from anywhere else


2 Using the SSH gateway

2.1 Setup for interactive use and file transfers
2.2 SSH GUI Applications


3 Password Policies
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


|----------------------------------- ## Contents

1. 1 Accessing Carbon
 1.1. 1.1 Requirements
 1.2. 1.2 Access from inside the CNM using an Argonne-owned computer
 1.3. 1.3 Access from anywhere else
2. 2 Using the SSH gateway
 2.1. 2.1 Setup for interactive use and file transfers
 2.2. 2.2 SSH GUI Applications
3. 3 Password Policies


|----------------------------------- ## Accessing Carbon


|----------------------------------- ### Requirements

To use Carbon, you must:

• be entered as a participant on an active user proposal, by your Argonne badge number,
• have an Argonne computer account, which has:
 • a personalized password, (i.e., you changed it after the account has been created, or updated it within the last 6 months), and
 • a personalized user name.

If you do not meet any one of those requirements, see our FAQ (https://wiki.anl.gov/cnm/HPC/FAQ), in particular the sections:


|------------------------------------ # HPC/FAQ


|------------------------------------ ## Contents

1. 1 Access and proposals
 1.1. 1.1 Legal User Agreement
 1.2. 1.2 User Registration
 1.3. 1.3 Proposal Lifecycle Overview
2. 2 Account Types
 2.1. 2.1 User Registration Account
 2.2. 2.2 Argonne Domain Account
3. 3 Getting started on a proposal
 3.1. 3.1 To get started as spokesperson or delegate
 3.2. 3.2 To get started as participating user
4. 4 Adding users to a proposal
 4.1. 4.1 Actions required by the User
 4.2. 4.2 Actions required by the PI or spokesperson
 4.3. 4.3 Actions required by the Scientific Contact
 4.4. 4.4 Follow-up actions required by the User
 4.5. 4.5 Carbon account and access
5. 5 Finalize your Argonne computer account
 5.1. 5.1 Change your password
 5.2. 5.2 Change your user name
 5.3. 5.3 Next steps
6. 6 Proposal troubleshooting
7. 7 Ongoing user access requirements
 7.1. 7.1 User Registration
 7.2. 7.2 Legal User Agreement
 7.3. 7.3 Training
 7.4. 7.4 Password
 7.5. 7.5 Active proposal
 7.6. 7.6 Data-only access for inactive proposals
 7.7. 7.7 Practical hints
8. 8 Login issues
 8.1. 8.1 Review your access requirements
 8.2. 8.2 Verify or change your password
 8.3. 8.3 Password lockouts
 8.4. 8.4 Review host names
 8.5. 8.5 Review network configuration
 8.6. 8.6 Request support
9. 9 Expected files or commands are unavailable
 9.1. 9.1 My home directory is read-only
 9.2. 9.2 I cannot edit my .bashrc file
 9.3. 9.3 Expected commands unavailable
10. 10 Mailing lists
11. 11 Applications
 11.1. 11.1 I'd like to use application X
 11.2. 11.2 How do I run application X?
 11.3. 11.3 How do I use application X?
12. 12 What's my account balance?
 12.1. 12.1 Simple answer: mybalance
 12.2. 12.2 Complete answer: gbalance
13. 13 Allocation expiration policy – Or: Why did my account balance suddenly drop?
14. 14 My question is not answered here


|------------------------------------ ## Access and proposals

The HPC Carbon cluster and its associated software licenses may be accessed,
like any tool at the CNM, by one or both of the following routes:

• CNM Facility Users are eligible under CNM's User Access Program (https://www.anl.gov/cnm/become-a-cnm-user). Follow the link to learn how to initiate access under this route. Begin by registering as Facility User, then submit a proposal.
• Affiliates of Argonne's NST division (http://www.anl.gov/cnm) are eligible for discretionary access. Affiliate here refers to regular employees, Argonne/University joint appointees, visitor appointees, and student group members, being supervised by CNM staff.

The following is a summary of the main points as they pertain to Carbon.


|------------------------------------ ### Legal User Agreement

The institution where you work or study must have a legal signed
User Facility Agreement (https://www.anl.gov/cnm/prepare-for-your-arrival)
with Argonne in place before any work under an eventual proposal may be performed.

Look up existing User Facility Agreements (https://aps.anl.gov/Users-Information/Legal-Financial/Argonne-User-Facility-Agreements) and locate your institution if you have never worked with Argonne before, or you recently changed your affiliation, or are going to change it soon.

If your institution is not shown, get started with establishing a user agreement as soon as possible. Legal wheels turn slowly and your scientific work could be delayed.


|------------------------------------ ### User Registration

Under CNM's User Access Program, your starting point is to become a CNM user (https://www.anl.gov/cnm/how-to-register-to-become-a-cnm-user).


|------------------------------------ ### Proposal Lifecycle Overview

1. To submit a proposal, follow the instructions at the CNM's Call for Proposals (https://www.anl.gov/cnm/cnm-user-information).
2. Upon successful review of a proposal and grant of an allocation, the contacting author will receive an email with subject User Proposal Status Notification.
3. The contacting author must submit, for each proposal, a Safety&Data Form as instructed in the status email. This will confirm the names and badge numbers of participating users, as well as various characteristics of the proposal that we need for statistical reporting to our funding agencies.
4. Participating users register and respond at various steps to have their Argonne user accounts created, activated or reactivated as needed, and have them authorized to access Carbon.
5. Participating users perform the work proposed.
6. Credit CNM in publications (https://www.anl.gov/cnm/cnm-acknowledgment-statements-for-publications) that result from your proposal work with us.
7. After the proposal expires, our User Office will ask you to please submit:
 7.1. An approximately 1-page Activity Report summarizing work performed and perhaps already published under the proposal. We use these reports to document the use of our facilities to funding agencies.
 7.2. An end-of-proposal Satisfaction Survey, to invite your feedback on our process.


|------------------------------------ ## Account Types

You access our computer systems by two different user accounts:


|------------------------------------ ### User Registration Account

Your User Registration Account:

• … is created when you register as CNM facility user, be it as participant or as Principal Investigator (PI), at the User Registration (https://beam.aps.anl.gov/pls/apsweb/ufr_main_pkg.usr_start_page) for the Advanced Photon Source (APS) and CNM.
• … has an all-numeric user name (no letters, no leading zeroes), which never changes – this is in fact your Argonne Badge Number,
• … has its own password and password reset process at APS (https://beam.aps.anl.gov/pls/apsweb/forgot_password.start_process),

Use your User Registration Account to:

• … update your user registration (https://beam.aps.anl.gov/pls/apsweb/ufr_main_pkg.usr_start_page), such as when you change your affiliation, or to update visa information if Argonne needs them for you,
• … submit a user proposal to CNM (https://pico.cnm.anl.gov/proposals/people/login)
• … take remote training (https://beam.aps.anl.gov/pls/apsweb/rt0004.intro_process) prior to beginning work, and prior to being assigned an Argonne domain account, which is described next.


|------------------------------------ ### Argonne Domain Account

Your Argonne Domain Account:

• … is created when you first need it, such as when you are a PI and have received the go-ahead on your first proposal with us,
• … has, at first, a user name beginning with b, followed by your badge number (without any leading zeroes),
• … will get, following your request, a personalized user name, such as jsmith
• … has its own password and uses its own password reset and recovery (https://mypassword.anl.gov/).

Use your Argonne Domain Account to:

• … submit the Safety&Data Form (UWS) of each proposal for which you are the PI or delegated spokesperson,
• … perform work – always remotely – at CNM's High Performance Computing system Carbon (https://wiki.anl.gov/cnm/HPC),
• … handle almost all other tasks at Argonne.

For assistance, please contact our CNM User Office (https://wiki.anl.gov/cdn-cgi/l/email-protection). – Specify which task you have difficulties with.


|------------------------------------ ## Getting started on a proposal

To start working on a proposal once it has been granted, action is required for each proposal by the proposal spokesperson (usually the Principal Investigator,PI), regardless of any previous proposals with us.
At this stage, we collect and update information about each proposal for reporting purposes to our funding agencies, and ensure that safety and training requirements are met by all participating users.


|------------------------------------ ### To get started as spokesperson or delegate

1. Locate the email to you with subject User Proposal Status Notification, sent by the CNM User Office.
 1.1. If you are delayed in starting your proposal, you may need to expand your mailbox search time frame, to begin the search at possibly several months before present.
 1.2. You may need to inspect the "Junk" or "Spam" folder of your mail application.
2. Follow the instructions in that email.

Only the spokesperson may fill in the UWS form, or the PI may designate a delegate. Changes after the initial UWS submission by you (the PI or delegate) can only be made by your Scientific Contact at the CNM – see below.
The UWS is due for each proposal, as it collects certain metadata that we need, on a per-proposal-basis, for usage reporting to our funding agencies.
Confirm or add users in section "Personnel Participating In User Proposal" of the UWS form. Enter the badge numbers for all participating users, as far as they are known at submission time. (https://wiki.anl.gov/cdn-cgi/l/email-protection)
 2.1. Certain steps are needed only once because they pertain to your institution, notably filing a User Agreement.
 2.2. Before work on a new proposal may begin, we may ask you to submit Activity Reports that are due for previous proposals upon their conclusion.
 2.3. Fill in the Safety and Data form, i.e., follow the User Work Submittal (UWS) link that is given in our notification email.
 2.4. Only the spokesperson may fill in the UWS form, or the PI may designate a delegate (https://wiki.anl.gov/cdn-cgi/l/email-protection). Changes after the initial UWS submission by you (the PI or delegate) can only be made by your Scientific Contact at the CNM – see below.
 2.5. The UWS is due for each proposal, as it collects certain metadata that we need, on a per-proposal-basis, for usage reporting to our funding agencies.
 2.6. Confirm or add users in section "Personnel Participating In User Proposal" of the UWS form. Enter the badge numbers for all participating users, as far as they are known at submission time.
3. Direct all users who you expect to access Carbon, possibly including yourself, to follow the instructions in section #Ongoing user access requirements.
4. Be patient. UWS Processing typically takes at least one business day, as both our User Office staff and your Scientific Contact need to attend to your submission in person.
5. The User Office will notify the spokesperson or delegate once work on a proposal may begin, issuing what we call the User Work Approval (UWA). It will be valid for one year for regular proposals, and 6 months for rapid-access proposals.

• Only the spokesperson may fill in the UWS form, or the PI may designate a delegate (https://wiki.anl.gov/cdn-cgi/l/email-protection). Changes after the initial UWS submission by you (the PI or delegate) can only be made by your Scientific Contact at the CNM – see below.
 • The UWS is due for each proposal, as it collects certain metadata that we need, on a per-proposal-basis, for usage reporting to our funding agencies.
 • Confirm or add users in section "Personnel Participating In User Proposal" of the UWS form. Enter the badge numbers for all participating users, as far as they are known at submission time.


|------------------------------------ ### To get started as participating user

For new proposals or users new to CNM:

1. Gently remind your spokesperson/PI to submit the UWS as shown above, or ask this person to nominate you via an email to the CNM User Office (https://wiki.anl.gov/cdn-cgi/l/email-protection).
2. Continue at section #Actions required by the User.

For proposals already in progress, see the next section.


|------------------------------------ ## Adding users to a proposal

Most users are nominated to work on a proposal when it is first submitted.
Additional users can be authorized to work under a proposal at any time after acceptance.
Actions are needed from both the user and the proposal spokesperson.


|------------------------------------ ### Actions required by the User


|------------------------------------ ### Actions required by the PI or spokesperson

• If the proposal has not yet started: See the section above #To get started as spokesperson or delegate.
• If the proposal has already started: Email the users' names and badge numbers to the proposal's Scientific Contact at the CNM and ask for the UWS to be augmented.


|------------------------------------ ### Actions required by the Scientific Contact

• Add users under section "Participating Personnel".
• Enter users' badge numbers which may have been left empty in earlier UWS submissions, as happens by necessity for very newly registered users.
• Again, review that badge numbers are present and are correct for all relevant participants that are to work on Carbon, or at least need to use mega.


|------------------------------------ ### Follow-up actions required by the User

• To work onsite at CNM or remotely on Carbon, you will need an Argonne computer account, which is different from the account you used to enter your User Registration details – see section #Account Types.
• If you are new to Argonne, our User Office will be in contact with you to set up this account. Since the Argonne account is for more general use than your registration account, it will involve formal approvals, cyber security training, etc. and typically takes about one week to complete.

• Course requirements are triggered at various levels. There are courses for being a visitor at Argonne, a user at CNM, and for work performed under proposals, be it onsite or remotely.

• New users: See section #Finalize your Argonne computer account.
• Existing users: Check for and if necessary renew your expired password, see below.


|------------------------------------ ### Carbon account and access

When all prerequisites are met, your Argonne account will be enabled or (if so needed) re-enabled for use on Carbon.

If you do not receive an expected notification within two days, contact our User Office (https://wiki.anl.gov/cdn-cgi/l/email-protection) and describe your issue.


|------------------------------------ ## Finalize your Argonne computer account

After your registration as a new Argonne Facility User has been processed, an Argonne "domain account" will be created for you.
Its user name will be in the form b123456 and our User Office will have communicated to you an initial password.

To begin work on Carbon and possibly other CNM instruments, personalize both your password and your user name, in this order.

• Your user name is the one by which you log in to Argonne-internal services, and takes one of three forms. Web login services typically indicate which user name form they expect..
 • username –  This is the most typical form expected, used to log in to mega.
 • [email protected] – Your user name with a directory domain appended. (https://wiki.anl.gov/cdn-cgi/l/email-protection)

• ANL.GOV\username – An alternate form of your user name and directory domain.

• Your user name is not necessarily merely the name part of an Argonne email address that you will have if you work or study at Argonne.


|------------------------------------ ### Change your password

• Change your password as instructed when your account got created.
See also section #Verify or change your password below.
• If you chose to call the Argonne Help Desk at +1-630-252-9999 (tel:+1-630-252-9999), option 4, to make the password change:
While on the phone regarding your password, state that you are a CNM Carbon User and ask to also personalize your user name.


|------------------------------------ ### Change your user name

1. Request a user name change, either over the phone or by email. We will choose the user name for you.
To request by phone
Call the Argonne Help Desk at +1-630-252-9999, and select option 4.
To request by email
Follow this link: Open email template – (Use a web browser that supports "mailto:" links.)
 (tel:+1-630-252-9999)
 1.1. Respond from the same email address as you filled in at the CNM User Registration form.
In your email application, choose or switch to the mail account that handles the address you registered with at our User Registration. Messages pertaining to your Argonne activities that are sent from an unrelated email account may be disregarded (not taken up) by our help desk staff, for obvious reasons.
 1.2. Fill in your name and badge number in the email template that opens, then send the email.
2. Await an emailed ticket number from Argonne's service desk, or follow the instructions of the person you called.
 2.1. Ticket numbers are assigned upon manual review, typically within an hour or so during business hours.
 2.2. If you did not get a ticket number after such reasonable time, re-send the request, making sure you do so from the email account you provided at User Registration.
3. Check your email for follow-up questions and respond.
4. Await the completion notice for your user name change.


|------------------------------------ ### Next steps

Carbon access is not immediately enabled once your user name change request has been completed – it is a separate process.

1. Expect an email that your Carbon access has been granted.
2. Proceed under #Carbon account and access.


|------------------------------------ ## Proposal troubleshooting

Email the CNM User Office with any questions or concerns, such as:
 (https://wiki.anl.gov/cdn-cgi/l/email-protection)

• about proposals,
• about users, or
• you find that responding to any of your submissions or previous communications takes longer than a few business days.

Only our User Office staff is able to review all aspects of your proposal or your user access requirements, and determine any steps that have yet to be taken or need to be refreshed.

Include in your message:

• Proposal number(s),
• Name of the Principal Investigator (PI),
• Names and badge numbers of participants.


|------------------------------------ ## Ongoing user access requirements

For you to log into Carbon and its SSH gateway, a number of criteria must be met, most of which are subject to expiration dates and require action from you for renewal.

You will not get notified (for various reasons) on some of these expirations.
Different duration terms may cause expirations to happen right in the middle of your proposal's lifecycle and can cause immediate inconvenience.
Depending on which criterion expired, one or both of the following will happen to your Argonne computer account:

• The account's permission to use mega will be revoked.
• The account as such will be disabled, equivalent to revoking all its permissions.

To recover, do one or more of the following:


|------------------------------------ ### User Registration

1. Review and update your User Registration. (https://beam.aps.anl.gov/pls/apsweb/ufr_main_pkg.usr_start_page)
 1.1. For this system, log in with your badge number and the password associated with it, not your regular Argonne account – see section #Account Types above.
 1.2. The registration itself requires renewal at least every 2 years, or earlier when any one of various prerequisite items expires.
 1.3. For non-US citizens present in the US: Review and update registration items regarding your US visa or related work permit. A current US work or study status is required to access Argonne computers, the same as if you were to visit in person.
2. Ask our CNM User Office (https://wiki.anl.gov/cdn-cgi/l/email-protection) staff to review your registration updates and to recreate or re-instate your Argonne account, as the case might be.


|------------------------------------ ### Legal User Agreement

• If you changed your affiliation (the institution where you work or study), check to see if your new institution has a legal User Facility Agreement (https://aps.anl.gov/Users-Information/Legal-Financial/Argonne-User-Facility-Agreements) with Argonne in place and request one if not.
Be advised that the process may take several weeks to percolate through legal and adminstrative channels.


|------------------------------------ ### Training

• Review and renew your User Courses. (http://beam.aps.anl.gov/pls/apsweb/rt0004.intro_process)
For remote users, the ESH223 course "Cybersecurity Annual Education and Awareness" is the one most likely to be in need of renewal.


|------------------------------------ ### Password

• Review and update the password to your Argonne computer account if you now have or previously had such an account.
If your account's password expired, we consider the account dormant and will not notify you about new proposals where you are listed as a participant.


|------------------------------------ ### Active proposal

You must be a participant in at least one active or recently expired User Proposal.
You may run compute jobs under a given proposal while it is active, i.e., within the dates stated in the proposal's User Work Approval (UWA).
 (https://www.anl.gov/cnm/become-a-cnm-user)

• To review the dates for your proposals, ask your PI to search their email archive for subjects "Work Approval Received" or "Proposal Expiration".


|------------------------------------ ### Data-only access for inactive proposals

After your last active proposal on Carbon has expired you may still access, for up to 30 days, the SSH gateway and Carbon's login nodes.
Past that time window, your access will be revoked and your data may be deleted, following CNM's Data Retention Policy (https://www.anl.gov/cnm/complete-your-work-at-cnm).

• While you still have access, offload from Carbon all your files and data that you may wish to keep.
The CNM cannot be expected or held responsible to store your data beyond your access window.


|------------------------------------ ### Practical hints

• Set yourself calendar entries about one year into the future to remind yourself to renew any of your user registration or training requirements.
• After you were added to a user proposal, wait at least an hour or more before trying to access our SSH gateway, preferably until the next morning.
Updates of your status need to be propagated through a handful of systems, each being done about hourly, so it may take several cycles for your status change to reach mega.


|------------------------------------ ## Login issues

When you ask "I cannot log in" or "My password does not work", consider the following sections:


|------------------------------------ ### Review your access requirements

See section #Ongoing user access requirements above.


|------------------------------------ ### Verify or change your password

Do one of the following:

1. Visit https://mypassword.anl.gov/
 (https://mypassword.anl.gov/)
 1.1. Complete the Password Enrollment process at this service on your first visit when you know your password. You will be (or have been) thus instructed when your account has been created.
 1.2. You can verify or change your existing known password.
 1.3. You can reset or unlock your password only after you enrolled.
 1.4. You cannot use this service if your account has been disabled as such, in which case revisit the section #Ongoing user access requirements.
2. You can change your known password also at our SSH gateway host mega.
 2.1. At least one of your CNM proposals must still be active.
 2.2. You cannot log in if your account is disabled as such.

• If you cannot use any of the above systems:
 • request a password reset at the Argonne Service Desk (https://wiki.anl.gov/cdn-cgi/l/email-protection), or
 • request a password reset from the CNM User Office (https://wiki.anl.gov/cdn-cgi/l/email-protection).

After a password update, you should be able to connect to mega normally.
If you find that you cannot log in, however, retry only after an hour or two, as in some cases extra time is needed for passwords or other account changes to propagate.


|------------------------------------ ### Password lockouts

After trying incorrect passwords several times, your account may be temporarily locked out. To recover, try one of the following:

• Wait approximately 30 min.
• Unlock at https://mypassword.anl.gov/ – available if you have previously enrolled there. (https://mypassword.anl.gov/)


|------------------------------------ ### Review host names

Connect to the correct host names:

• When connecting from outside Argonne, at least two ssh sessions are required.
 • mega.cnm.anl.gov – an ssh "tunnel setup" connection.
 • carbon – one or more "payload" connections for the ssh, scp, or sftp commands. Here, carbon is not a hostname but an entry in your ssh configuration that you must make (called a host alias or "profile", depending on the ssh application). The entry stands for a connection to localhost (your machine), at a port number forwarded by the preceding tunnel setup connection.
• When onsite (for any user) or using VPN (for Argonne staff):
 • carbon.cnm.anl.gov. The previous name was clogin. ….

To learn more, read HPC/Network Access (https://wiki.anl.gov/cnm/HPC/Network_Access).


|------------------------------------ ### Review network configuration

• Read again HPC/Network Access (https://wiki.anl.gov/cnm/HPC/Network_Access), and follow the instructions for your platform.


|------------------------------------ ### Request support

• If the above sections did not help you to resolve your issue, submit a support request (https://wiki.anl.gov/cnm/HPC/Support).


|------------------------------------- # HPC/Support


|------------------------------------- ## Contents

1. 1 Review the FAQ list
2. 2 Compose a support request for CNM HPC
3. 3 Required information
 3.1. 3.1 For all issues – local and remote
 3.2. 3.2 For issues with PBS jobs
 3.3. 3.3 For remote access
 3.4. 3.4 Test directory
4. 4 Receiving support
5. 5 Additional considerations


|------------------------------------- ## Review the FAQ list

For frequently asked questions regarding the Carbon HPC system, review  Frequently Asked Questions to find answers.
 (https://wiki.anl.gov/cnm/HPC/FAQ)


|------------------------------------- ## Compose a support request for CNM HPC

If your question is not answered in the FAQ:

• Submit a support request (https://argonne.servicenowservices.com/sp?id=sc_cat_item&sys_id=4e37eb5b13199f0016ff33228144b036) – Log in with your regular Argonne username and password (same as on Carbon).
• Choose a suitable Request Type and provide the details as shown in the next section.


|------------------------------------- ## Required information

Be as specific as possible in your free-form description or form input fields.


|------------------------------------- ### None

Provide the following:

1. The command you were trying to run or the menu item you chose in a graphical user interface
2. The exact error message you get. Copy & Paste the message text, or take a screenshot and attach it to your mail.
3. The directory path and file name you were working on, if applicable.
It is generally not necessary to include in your message copies of files that already reside on Carbon.
4. Did the same command or action work previously, if ever?
5. Which changes, if any, did you make to your configuration or input files since the last time this worked?
6. Fill in an appropriate email Subject or form Title.
Best do this after you typed and reviewed the main text of your request.


|------------------------------------- ### For issues with PBS jobs

In addition to the preceding section, for questions concerning PBS jobs, provide:

• the working directory of the job
• the name of the job file used
• the job number (for queued or running jobs)


|------------------------------------- ### For remote access

When you cannot log in to mega or a Carbon login node, provide:

• The details in section #For all issues,

plus the following:

• The hostname you ran the command on. It is often shown in the command prompt. (If the prompt shows localhost it is not specific enough – ask your local support person for help.)
• The hostname you're trying to reach.
• The username you use to connect.
• The software name and version you use to connect (e.g. SSH, VNC, or a browser).
• Your operating system and version.

If you use ssh or scp, repeat your command in verbose mode by supplying the "-v" option twice:

  scp -v -v [… other options and arguments …]
  ssh -v -v [… other options and arguments …]




|------------------------------------- ### Test directory

We may ask you to prepare a test directory, which should help to:

• Reproduce your problem.
• Diagnose your problem, especially when errors are subtle or difficult to reproduce, such as where your application runs but does not fail outright.
• Confirm resolution.

Prepare the test directory so that it contains only files to run your application, either interactively or in a single PBS job, and possibly a file with correct output.

• In or under a sibling directory of one of a your failed runs (as opposed to a child directory).

• PBS job file, if applicable,
• Run-specific data and script files (files named in input data or hardcoded in the code, possibly as symbolic links),
• If available, a file with the expected (correct) output, but with a file name different from the one generated by the job, such as by adding .ref.

In the course of diagnostics, we will suitably duplicate your directory as needed.


|------------------------------------- ## Receiving support

When you get our support response:

• Carefully read it.
• Follow all instructions and answer all questions.
• For account- and password-related issues: it may take several hours for changes to take effect. If your initial attempt fails, wait at least that long before retrying.


|------------------------------------- ## Additional considerations

To help us diagnose a problem:

• Read How to Report Bugs Effectively (http://www.chiark.greenend.org.uk/~sgtatham/bugs.html), by Simon Tatham (http://www.chiark.greenend.org.uk/~sgtatham/), programmer.
• For deeper reading, consider How To Ask Questions The Smart Way (http://www.catb.org/~esr/faqs/smart-questions.html), by Eric S. Raymond (http://en.wikipedia.org/wiki/Eric_S._Raymond), open source pioneer.

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)


|------------------------------------ ## Expected files or commands are unavailable

When you cannot create or edit files or directories under your home directory, or you find that commands you expect are not found, then:

1. Inspect the beginning of your command line, called the prompt:

username@mega5 CNM-GATEWAY $ 
then you are working not on Carbon just yet, but rather on its SSH gateway. Visit HPC/Network_Access to learn how to connect properly.
If the prompt mentions "@login", e.g.:
username@login6 … $
then there may be a temporary file system issue which may resolve after a few minutes.
If such issue persists or recurs over several hours, however, read the message that will have appeared right after you logged in, above the first command prompt. To locate these messages, scroll up the content of your terminal application window, or log out and log back in to bring up these messages again. (https://wiki.anl.gov/cnm/HPC/Network_Access)
 1.1. If your prompt mentions "@mega" or "GATEWAY", e.g.:
 1.2. If the prompt mentions "@login", e.g.:


|------------------------------------ ### My home directory is read-only


|------------------------------------ ### I cannot edit my .bashrc file


|------------------------------------ ### Expected commands unavailable

In all these situations, see  the beginning of the current section.


|------------------------------------ ## Mailing lists

Announcements about Carbon are made on the cnm-hpc-announce mailing list (https://lists.anl.gov/mailman/listinfo/cnm-hpc-announce), hosted at Argonne.
The mailing list home page and its archive are, unfortunately, only accessible from onsite or (for authorized users) over VPN.

• To unsubscribe from the mailing list, do one of the following:
 • Open the "unsubscribe" link at the bottom of a recent message that you received from the mailing list.
 • Send a blank message to cnm-hpc-announce-leave@lists.anl.gov (https://wiki.anl.gov/cdn-cgi/l/email-protection) and follow up on the confirmation notice.
• To subscribe to the mailing list, send a blank message to cnm-hpc-announce-join@lists.anl.gov (https://wiki.anl.gov/cdn-cgi/l/email-protection) and follow up on the confirmation notice.
• To change your email address on the list, simply do both of the above, in order.

• When sending commands by email, be sure to have the relevant email account selected in the "From" line of the compose window in your email application.
• Inspect the Junk mail folder of your email application if you do not receive a confirmation message for subscribing or unsubscribing within a minute or so.
• See the GNU Mailman (http://www.gnu.org/software/mailman/mailman-member/node22.html) documenation for background.


|------------------------------------ ## Applications


|------------------------------------ ### None

Either:

• Browse the  Application Catalog (https://wiki.anl.gov/cnm/HPC/Applications), or
• View the catalog on the Carbon command line:

  module avail
  module -l avail 2>&1 | less

• Submit a  support request (https://wiki.anl.gov/cnm/HPC/Support).
 • Provide one or more URLs relevant to software you have in mind – be specific.
 • Describe the problem you are trying to solve – it may well be that we can suggest an alternative solution.
 • Give the extent of your planned use.

• Existing license agreements may cover only a subset of users (typically Argonne employees).
• If you feel you are eligible, submit a  support request (https://wiki.anl.gov/cnm/HPC/Support).

• Submit a  support request (https://wiki.anl.gov/cnm/HPC/Support).
• Include a URL to information about the new version.


|------------------------------------ ### None

• Customize your shell environment (https://wiki.anl.gov/cnm/HPC/Module_Setup) to load the application module.
• Learn about  module conventions on Carbon (https://wiki.anl.gov/cnm/HPC/Module_Setup).
• To determine the names of a package's executable scripts and binaries, load the application module (if you have not yet done so in your shell setup), then inspect the module's $NAME_HOME/bin directory. For instance, for the Quantum-ESPRESSO package:

  module load quantum_espresso
  ls $QUANTUM_ESPRESSO_HOME/bin

• Learn how to  submit and manage jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs).


|------------------------------------ ### None

Read the package's documentation, using one or more of the following:

• Inspect the package's $NAME_HOME/share or $NAME_HOME/doc directory on Carbon (see  module conventions (https://wiki.anl.gov/cnm/HPC/Module_Setup)).
• Browse the package's web page, generally mentioned in the module help text or the  application catalog (https://wiki.anl.gov/cnm/HPC/Applications) entry.
• Consult a package's man pages. Few packages have them. Man page files are generally installed under $NAME_HOME/man or $NAME_HOME/share/man and if so, will be made available automatically to the man command.


|------------------------------------ ## None


|------------------------------------ ### Simple answer: mybalance

To find out how many core-hours you have available, the simplest command to run is:

  mybalance -h

  Project  Machines Balance    
  -------- -------- ---------- 
  user     ANY         993.26
  cnm34567 ANY       158760.93
  cnm31234 ANY      -148893.62

The table gives all the Projects you have access to (for use with the qsub -A argument), and their balance.
Machine lists all systems that can book jobs against your allocations. Carbon is currently the only machine that can do so.
Balance is your account balance, in core-hours, as selected by the -h command option. This is the most useful and recommended unit.
Without -h, you get core-seconds, which are integers but rather more unwieldy numbers.

• The "user" project provides you with a small initial startup allocation of typically 1000 core-hours.
• When a Balance is reported as negative, that account typically has a CreditLimit assigned, which permits the balance to dip below zero. These details, however, are not shown by mybalance.


|------------------------------------ ### Complete answer: gbalance

To get allocation details for accounts that have CreditLimits, run the gbalance command. Pass on -u username or -p projectname to select your allocations:

  gbalance -h -u $USER

The ouput looks like:

  Id  Name     Amount     Reserved Balance    CreditLimit Available
  --- -------- ---------- -------- ---------- ----------- --------- 
  100 cnm31234 -148893.62     0.00 -148893.62   150000.00   1106.38
  217 kpelzer      993.26     0.00     993.26        0.00    993.26 
  123 cnm34567  166440.93  7680.00  158760.93        0.00 158760.93

The most relevant column for you is Available. The units, given the -h option, are again core-hours.

The colums and their meanings are:

  Balance = Amount - Reserved

  Available = Balance + CreditLimit


|------------------------------------ ## None

The compute time physically available by Carbon's processors is a perishable resource.
Hence, your allocations are time-restricted in a use-it-or-lose-it manner.
This is done to encourage consistent use of the machine throughout allocation cycles.

Because of resource contention, especially near the end of a cycle, it will be increasingly impractical and eventually physically impossible to use up a large remaining allocation within a short time.
You would need to claim a large fraction of Carbon's nodes during a relatively short time window, which is unlikely to be possible because jobs from other users will be running as well.

The expiration schedule is as follows:

• Your allocation is provided in three equal-sized installments.
• All installments are active from the beginning.
• Installments expire in a staggered fashion, currently after 4, 8, and 12 months, respectively. A diagram might illuminate this:

  Proposal                Proposal
       start                 expiration
         |-------|-------|-------|------> Time    
         0       4       8       12      (months)
         |
  Installment
         |
      (1)|########....................               KEY
         |                            
      (2)|################............               .  Installment is inactive
         |                            
      (3)|########################....               #  Installment is active
         |

• Your jobs will, sensibly, be booked against the installments that expire the earliest.


|------------------------------------ ## My question is not answered here

See HPC/Support (https://wiki.anl.gov/cnm/HPC/Support).

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)

• Account Types (https://wiki.anl.gov/cnm/HPC/FAQ)
• Getting started on a proposal (https://wiki.anl.gov/cnm/HPC/FAQ)
• Adding users to a proposal (https://wiki.anl.gov/cnm/HPC/FAQ)
• Follow-up actions required by the User (https://wiki.anl.gov/cnm/HPC/FAQ)

Please direct questions and follow-up to the CNM User Office, as linked in the FAQ.


|----------------------------------- ### Access from inside the CNM using an Argonne-owned computer

Connect with a Secure Shell (http://en.wikipedia.org/wiki/Secure_Shell) client program directly to carbon.cnm.anl.gov.


|----------------------------------- ### Access from anywhere else

Use one of the following:

• Argonne employees may wish to log into the Argonne VPN (https://credentials.anl.gov/VPN) first, then access the Carbon login nodes.
• Otherwise, use CNM's SSH gateway mega.cnm.anl.gov (see next section for details).
 • You must be CNM staff or a user on a CNM proposal that is active or has recently expired (within the last 6 weeks).
 • Use the user name and password of your Argonne account to log in.
 • Do not run any commands or store any files on this machine. The gateway is needed for port forwarding only.


|----------------------------------- ## Using the SSH gateway

  <image 200px-Using_Carbon_-_II_Remote_Access_-_Title.png: Using Carbon - II Remote Access - Title.png>


|----------------------------------- ### Setup for interactive use and file transfers

• Linux, MacOS, and Cygwin (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS)
• Windows (using PuTTY) (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration)
• TODO: Windows alternate software.
• Windows (using WinSCP) (https://wiki.anl.gov/cnm/HPC/Network_Access/WinSCP_Configuration)


|------------------------------------ # HPC/Network Access/SSH Tunnel Setup on Linux and MacOS

The following sections document how to establish ssh tunneling on a Linux or MacOS X machine running OpenSSH (http://en.wikipedia.org/wiki/OpenSSH). Numerous Windows solutions (http://www.google.com/search?hl=en&q=SSH+Windows) are available to provide the same functionality, but details vary considerably.


|------------------------------------ ## Contents

1. 1 Manual setup
2. 2 Using an ssh config file
 2.1. 2.1 Config file contents
 2.2. 2.2 Connecting with a config file
 2.3. 2.3 Advanced: Connecting to a specific login node
3. 3 Test remote graphics using X11
4. 4 File transfer
 4.1. 4.1 Without SSH config file
 4.2. 4.2 With an SSH config file
  4.2.1. 4.2.1 Copy a file to Carbon (push from outside)
  4.2.2. 4.2.2 Copy a whole directory to Carbon
  4.2.3. 4.2.3 Copy a file from Carbon (pull from outside)
  4.2.4. 4.2.4 Bonus – Intranet web access
  4.2.5. 4.2.5 Copy a file to Carbon from a third host
5. 5 Advanced: Speeding up logins using ssh keys
 5.1. 5.1 Create a key
 5.2. 5.2 Using an ssh-agent
 5.3. 5.3 Place your public key on Carbon
6. 6 Troubleshooting
 6.1. 6.1 General connection issues
 6.2. 6.2 Public keys


|------------------------------------ ## Manual setup

  <image 350px-HPC_2012-02-06_screenshot_sketch_ssh_tunneling_windows.png: HPC 2012-02-06 screenshot sketch ssh tunneling windows.png>

On your computer, run the following commands:

0. (Windows only) Start your X11 server if you have one.

1. Open a terminal window (such as Mac Terminal, Cygwin, PuTTY, or xterm).

2. Type:

  ssh -v -L 33301:carbon:22  username@mega.cnm.anl.gov

3. Minimize that window - no further commands need be typed there.

4. Open another terminal window.

5. Type:

  ssh -Y -p 33301 username@localhost

• Replace username by the name of your Argonne account name.
• Steps 4 and 5 can be repeated as often as desired.

Do not type any commands at a prompt on mega.


|------------------------------------ ## Using an ssh config file

To simplify making connections from your computer, create or use an ssh configuration file on it.


|------------------------------------ ### Config file contents

On your computer:

1. Close any Carbon windows opened previously.
2. Open a new terminal window.
 2.1. Linux: xterm
 2.2. Mac: Terminal.app
 2.3. Windows: a Cygwin window.
3. Copy&paste the following text into your ~/.ssh/config file.

  NoHostAuthenticationForLocalhost yes

  Host mega
          Hostname mega.cnm.anl.gov
          User              argonne_user_name
          LocalForward      33301  carbon:22
          LocalForward      33380  carbonmgmt:80

  Host carbon
          Hostname localhost
          User              argonne_user_name
          Port              33301
          ForwardX11        yes
          ForwardX11Trusted yes

• Replace the string argonne_user_name with the name of your Argonne domain account.
• Remove write permissions to the config file, its parent directory, and your home for anyone but you:

  chmod go-rwx ~/.ssh ~/.ssh/config
  chmod go-w ~

• Note for Cygwin users: To paste text into a Cygwin window, right-click with your mouse or use the Shift-Ins keyboard shortcut.
• Simply Copy & Paste the line from this browser window to your terminal.

• Advanced users: See the ssh_config man page for syntax and options of the config file.


|------------------------------------ ### Connecting with a config file

With the config file in place, the commands in section #Manual setup above simplify to:

  ssh -v mega

  ssh carbon


|------------------------------------ ### Advanced: Connecting to a specific login node

The configuration described above uses a generic host name carbon, which at present will lead to one specific login node.
However, you may want to connect to another node that you have used previously, such as to reconnect to a VNC sesssion.
To do so, change your .ssh/config to forward additional ports and set up more specific Host aliases.

• Similar to the above, copy&paste the following text into your ~/.ssh/config file.

  NoHostAuthenticationForLocalhost yes

  Host mega
          Hostname          mega.cnm.anl.gov
          User              argonne_user_name
          LocalForward      33301  carbon:22
          LocalForward      33305  clogin5:22
          LocalForward      33306  clogin6:22
          LocalForward      33380  carbonmgmt:80

  Host carbon
          Port              33301

  Host clogin5
          Port              33305

  Host clogin6
          Port              33306

  Host carbon clogin*
          Hostname          localhost
          User              argonne_user_name
          ForwardX11        yes
          ForwardX11Trusted yes

With this modified config file in place, you can connect to the network-default carbon, but also to the specific login hosts you configured.

  ssh -v mega

  ssh clogin5
  ssh clogin6
  …


|------------------------------------ ## Test remote graphics using X11

1. In a terminal connected to a Carbon login node, run the command:
echo $DISPLAY

You should get something like:
localhost:17.0
The actual number will vary.  (https://wiki.anl.gov/cnm/File:HPC_2011-06-23_xload_example.png)
2. Start a simple X11 program:
xload

You should see a small window pop up on your screen, labeled "login5" or "login6".
3. Close the window using its close button or press Ctrl-C in the terminal window.
4. Now use graphical applications on Carbon, for instance: 
gnuplot

This will start the gnuplot interpreter in the terminal.
 (https://wiki.anl.gov/cnm/File:HPC_2011-06-23_gnuplot_example.png)
 4.1. Create a sample plot. At the gnuplot>  prompt, type:
plot sin(x)
 4.2. Exit the program:
exit

  echo $DISPLAY

  <image 60px-HPC_2011-06-23_xload_example.png: HPC 2011-06-23 xload example.png>

  xload

  <image 300px-HPC_2011-06-23_gnuplot_example.png: HPC 2011-06-23 gnuplot example.png>

  gnuplot

  plot sin(x)

  exit


|------------------------------------ ## File transfer

• There are many ways to transfer files through an ssh tunnel. However, you must always initiate the connection from the remote machine (your home computer), and either push files to Carbon or pull files from Carbon.
• With the above tunnel setup you cannot initiate a file transfer from Carbon or mega.
• Do not use mega as an intermediate. Files stored there wil be deleted.


|------------------------------------ ### Without SSH config file

Run the following example commands on your machine.

  scp -P 33301 -p  'foofile'  argonne_user_name@localhost:'dir/on/carbon/'

  scp -P -p  argonne_user_name@localhost:'dir/on/carbon/name_on_carbon'  destination_on_your_machine/

• Type localhost as written. Together with the option -P 33301 (or -o port=number for older scp versions) it refers to the tunnel that you have set up earlier.
• Replace argonne_user_name by the user name you have at Argonne.


|------------------------------------ ### With an SSH config file

Run the following example commands on your machine.


|------------------------------------ #### None

• With the above ssh/.config file in place:

  scp -p 'foofile' carbon:'dir/on/carbon/'


|------------------------------------ #### None

Short of using tar or zip:

  scp -rp 'local/path/' carbon:'dir/on/carbon/'

This method does not preserve symbolic links.


|------------------------------------ #### None

  scp -p carbon:remote/path/foo  local/path/
  scp -p carbon:remote/path/foo  .

Note the trailing "." in the last example to copy to your current directory.

The file copy operations above must all be initiated on the outside host.
It is possible to set up tunnels to be able to initiate file operations on the inside.
However, this is more complex and will be left as an exercise for advanced users.
It involves setting up:

1. agent forwarding
2. a .ssh/config file on Carbon, and
3. specifying -R command line options or RemoteForward config file directives when accessing carbon at the second stage.


|------------------------------------ #### None

Open the following links in a browser on your external workstation:

  https://localhost:33343/cnm/HPC
  http://localhost:33380/


|------------------------------------ #### None

0. Similar to the procedure in section #Manual setup above, open two interactive sessions to the remote computer.

1. From the first session, open a connection to Mega and forward a port:

  ssh -v -L 33301:carbon:22  username@mega.cnm.anl.gov

• Do not type any further commands there.

2. In the second session, test if you can reach Carbon interactively.

  ssh -Y -p 33301 -o NoHostAuthenticationForLocalhost=yes username@localhost

3. Close the Carbon connection from step 2.

  exit

4. From the second session again, initiate the file transfer as:

  scp -v -p -o port=33301 -o NoHostAuthenticationForLocalhost=yes \
          filename_remote username@localhost:[target_directory/][filename_on_carbon]

• Replace username by the name of your Argonne account name.
• Note the ":" at the end of the host name, which tells the scp command that the copy target is on a remote host.
• The file named filename_remote will arrive in your Carbon home directory under this name, unless you specify a target_directory and/or a filename_on_carbon.

5. When done, press Ctrl-C in the first session to terminate the connection to mega.


|------------------------------------ ## Advanced: Speeding up logins using ssh keys

Our SSH gatway host itself does not accept SSH keys – you must always type your password for the initial connection to Mega.

Once you have established this initial connection and your tunnels are configured, you can use SSH keys to log in to Carbon login nodes without further passwords.


|------------------------------------ ### Create a key

• Create an ssh key pair key if you do not already have one :

  yourcomputer$ ssh-keygen -t rsa

The output will look like:

  Generating public/private rsa key pair.
  Enter file in which to save the key (/Users/home_id/.ssh/id_rsa): 
  Enter passphrase (empty for no passphrase):              <-- Choose and enter a password.
  Enter same passphrase again: 

  Your identification has been saved in /Users/home_id/.ssh/id_rsa.
  Your public key has been saved in /Users/home_id/.ssh/id_rsa.pub.
  The key fingerprint is:
  42:c3:72:fb:4c:be:c6:80:81:bc:8b:73:d8:88:84:2e home_id@yourcomputer.local

• Inspect the .ssh directory on your computer. It should contain the following files:

  $ ls -1 ~/.ssh
  config
  id_rsa
  id_rsa.pub
  known_hosts
  random_seed


|------------------------------------ ### Using an ssh-agent

On modern systems, the mere presence of private keys with their default names triggers handling through ssh-agent and brings up a passphrase dialog at the start of the desktop session or when a key is first requested for an outgoing connection. This is the case on MacOS X since 10.5 (Leopard), where key management is secure and largely automated through its general keychain concept.

On older systems, you need to (a) set up the session to run under ssh agent and (b) request the passphrase upon login. Circumstances vary widely. Ask Google (http://www.google.com/search?hl=en&q=ssh-agent) or your local admin for help. See also the page Getting started with SSH (http://kimmo.suominen.com/docs/ssh/).


|------------------------------------ ### Place your public key on Carbon

  <image 350px-HPC_2012-02-06_screenshot_ssh_agent_password_request.png: >

To productively use your ssh key pair, you need to transfer the public half to Carbon.

Requirements:

1. you have a public/private ssh key pair on your machine (called yourcomputer in this example).
2. the public file on yourcomputer is named ~/.ssh/id_rsa.pub or ~/.ssh/id_dsa.pub (either one will work).
3. the ssh host alias mega has been set up on yourcomputer in ~/.ssh/config and defines tunnels using LocalForward declarations.
4. the tunnel connection for mega is open, i.e., on yourcomputer, ssh mega runs in another terminal.
5. the ssh alias carbon has been set up as described above.
6. an interactive session ssh carbon succeeds.

Then, to transfer your public key from yourcomputer to the Carbon login nodes, type:

  cat ~/.ssh/id_rsa.pub | ssh carbon "umask 033; mkdir -p .ssh; cat >> .ssh/authorized_keys"

This command will append the contents of your ssh public key on yourcomputer to an authorized_keys file on Carbon. The command above is more reliable than cut&paste across interactive terminal sessions. If you created a dsa-type key, or chose your own name for the key pair, you'll have to cat the appropriate file instead. Remember to use the public part of the key, i.e. the file id_foo.pub.


|------------------------------------ ## Troubleshooting


|------------------------------------ ### General connection issues

Run ssh with one or more -v options ("verbosity"), and record the output for diagnostic (copy&paste into a file). E.g.:

  ssh -v -v [other options and arguments …]

If you cannot resolve the issue yourself, follow HPC/Support (https://wiki.anl.gov/cnm/HPC/Support).


|------------------------------------ ### Public keys

If public keys do not work, use your password to gain access, then check the following:

  login5$ ls -ld ~ ~/.ssh ~/.ssh/authorized_keys
  drwxr-xr-x 28 argonne_id users 4096 Feb 22 13:52 /home/argonne_id
  drwx------  4 argonne_id argonne_id 4096 Feb 18 21:25 /home/argonne_id/.ssh
  -rw-------  1 argonne_id argonne_id  829 Oct  9 10:55 /home/argonne_id/.ssh/authorized_keys

  login5$ chmod go-w ~
  login5$ chmod go-rwx ~/.ssh ~/.ssh/authorized_keys

  yourcomputer$ cut -c1-50 ~/.ssh/authorized_keys
  ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAIEjdsfjJSAHkjh88y
  ssh-dss AAAAB3NzaC1kc3MAAACBAkkjsadfJFg7EFjDJhWEjk

The output should look similar to the sample above. Use your favorite text editor to join erroneously broken lines.
Note that there should not be anything like BEGIN RSA PRIVATE KEY, which would obviously indicate a private, rather than public key.

To verify that an ssh-agent is running and visible to your shell, check for the presence of the environment variable SSH_AUTH_SOCK. To list the keys it has loaded, use ssh-add -l (lowercase "L"). Typical output is as follows:

  yourcomputer$ echo $SSH_AUTH_SOCK
  /tmp/ssh-HCvZKt5478/agent.5478
  yourcomputer$ ssh-add -l
  1024 b9:65:98:c0:7c:25:da:b6:86:48:98:6b:2a:5a:9d:21 /Users/home_id/.ssh/id_rsa (RSA)

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)
• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|------------------------------------ # HPC/Network Access/PuTTY Configuration

The Carbon cluster is reachable from networks outside of Argonne through SSH tunneling or VPN,
either of which has advantages and disadvantages. This page explains how to set up and use SSH tunneling.

Should your connection attempt fail, first review your access requirements (https://wiki.anl.gov/cnm/HPC/Network_Access) and take steps as indicated.




|------------------------------------ ## Contents

• 1 Configuring
• 2 Connecting
• 3 File Transfers using PSFTP
• 4 Support


|------------------------------------ ## Configuring

The following steps need to be performed once for each workstation you wish to use to access Carbon.

• The SSH Gateway (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/The_SSH_Gateway)
• The Carbon login nodes (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/The_Carbon_login_nodes)
• Accessing Carbon licenses remotely (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/Accessing_Carbon_licenses_remotely) (advanced)


|------------------------------------- # HPC/Network Access/PuTTY Configuration/The SSH Gateway

1. Open PuTTY. The PuTTY Configuration window will appear.

There are many configuration panels that will appear in the main part of the window on the right-hand side. The panels are organized as a tree, shown in the left-hand side of the window. Each panel can be reached by clicking on the leaf names of the tree. (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_1_new.png)
2. If you already have a session named Mega shown in the bottom right list of the main panel, push the Load button.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_2_present.png)
3. Click Data in the tree.
4. Enter your Argonne username in the Auto-login username field within the Login details section of the panel.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_3_username.png)
5. Click SSH in the tree.
6. Click the checkbox Don't start a shell or command at all in the Protocol options section. – Update: Leave unchecked.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_4a_command.png)
7. Click the "+" symbol near SSH to open its sub-tree.
8. Click Tunnels. Under Add new forwarded port, enter:

 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_4_tunnels_new.png)
 8.1. Source port: 33301
 8.2. Destination: clogin:22
 8.3. Push the Add button. A new entry will appear in the middle field, shown as:
L33301 clogin:22
The letter "L" denotes a port on the local host.
9. Updated 2013-02-05: To reach specific login nodes, repeat the previous step with these settings:

and
Source port: 33306
Destination: clogin6:22
 9.1. Source port: 33305
 9.2. Destination: clogin5:22
 9.3. Source port: 33306
 9.4. Destination: clogin6:22
10. Scroll to the top of the tree and click Session. Enter the host details:

 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_6_Save.png)
 10.1. Host name: mega.cnm.anl.gov
 10.2. Port: 22 (leave at the default).
 10.3. Protocol: SSH (leave at the default).
 10.4. In the Saved Sessions field, enter Mega
 10.5. Push Save. The entry will appear in the list of saved sessions.

  <image HPC_2012-08_PuTTY_config_1_new.png: HPC 2012-08 PuTTY config 1 new.png>

  <image HPC_2012-08_PuTTY_config_2_present.png: HPC 2012-08 PuTTY config 2 present.png>


|--------------------------------------- # HPC/Network Access/PuTTY Configuration/The Carbon login nodes

1. In the main PuTTY Configuration window, click Session at the top of the tree on the left.
2. Select the Default Settings session and push Load.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_2a_load_default.png)
3. Click Data in the tree.
4. Enter your Argonne username in the Auto-login username field within the Login details section of the panel. (This step matches the one from your Mega session.)
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_3_username.png)
5. Click "+" in front of SSH in the tree.
6. Click X11 in the tree.

 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_7_X11.png)
 6.1. Click the checkbox Enable X11 forwarding.
 6.2. Set X display location to :0
7. Scroll to the top of the tree and click Session. Enter the host details:

 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_10_Save.png)
 7.1. Host name: localhost
 7.2. Port: 33301 (referring to the tunnel set up in the previous step (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/The_SSH_Gateway) as L33301.)
 7.3. Protocol: SSH (leave at the default).
 7.4. In the Saved Sessions field, enter Clogin
 7.5. Push Save. The entry will appear in the list of saved sessions.
8. Update 2013-02-05: If you wish to configure sessions for specific login nodes, Load the Clogin session, then alter these settings:

and once more:
Port: 33306
In the Saved Sessions field, enter Clogin6
Push Save.
 8.1. Port: 33305
 8.2. In the Saved Sessions field, enter Clogin5
 8.3. Push Save.
 8.4. Port: 33306
 8.5. In the Saved Sessions field, enter Clogin6
 8.6. Push Save.

  <image HPC_2012-08_PuTTY_config_2a_load_default.png: HPC 2012-08 PuTTY config 2a load default.png>

  <image HPC_2012-08_PuTTY_config_3_username.png: HPC 2012-08 PuTTY config 3 username.png>

  <image HPC_2012-08_PuTTY_config_7_X11.png: HPC 2012-08 PuTTY config 7 X11.png>

  <image HPC_2012-08_PuTTY_config_10_Save.png: HPC 2012-08 PuTTY config 10 Save.png>

  <image HPC_2012-08_PuTTY_config_3_username.png: HPC 2012-08 PuTTY config 3 username.png>

  <image HPC_2012-08_PuTTY_config_4a_command.png: HPC 2012-08 PuTTY config 4a command.png>

  <image HPC_2012-08_PuTTY_config_4_tunnels_new.png: HPC 2012-08 PuTTY config 4 tunnels new.png>

  <image HPC_2012-08_PuTTY_config_5_tunnels_mega.png: HPC 2012-08 PuTTY config 5 tunnels mega.png>

  <image HPC_2012-08_PuTTY_config_6_Save.png: HPC 2012-08 PuTTY config 6 Save.png>


|------------------------------------- # HPC/Network Access/PuTTY Configuration/Accessing Carbon licenses remotely

Source Port(on your machine)
------------------------------------------------------------------------------------------------------------------------------
VNC
5901
5902
59nn
ATK/VNL
6200(*)
6201
(*) As of v12.x ATK auto-prepended "6200@" toQUANTUM_LICENSE_PATH, thereby disallowingother ports on the host first mentioned.
COMSOL
1718
Lumerical
1055
27011


|-------------------------------------- # HPC/Network Access/Virtual Desktop


|-------------------------------------- ## Contents

1. 1 Principle of operation
2. 2 Operating a virtual desktop session
 2.1. 2.1 Start the server
 2.2. 2.2 Forward the server's port
 2.3. 2.3 Connect with a client
 2.4. 2.4 Use the virtual desktop
 2.5. 2.5 Stop the server
3. 3 Tips
 3.1. 3.1 Avoiding multiple VNC sessions
 3.2. 3.2 Customizing the virtual desktop
 3.3. 3.3 Screen Sharing on the Mac
 3.4. 3.4 Anticipatory port forwarding
4. 4 Troubleshooting


|-------------------------------------- ## Principle of operation

VNC (http://en.wikipedia.org/wiki/VNC) is a multi-platform graphical remote access mechanism.
It is not as common as the X Window System (http://en.wikipedia.org/wiki/X_Window_System) that serves a similiar purpose but is more light-weight on the user side and over the network.
If you find that graphical remote use over X11 is too slow, try VNC. It operates as follows:

• You start a VNC server on a Carbon login node. This is an application process that runs under your user ID in the background and provides a virtual desktop for you.
• You need to augment your SSH connection to forward an appropriate port.
• You run a VNC client on your desktop machine and tell it to connect to the forwarded port. This will open the virtual desktop as a window on your actual desktop.
• You can stop your VNC client and reconnect later.
• When done, you kill the VNC server process on Carbon.


|-------------------------------------- ## Operating a virtual desktop session


|-------------------------------------- ### Start the server

• Log in to Carbon (https://wiki.anl.gov/cnm/HPC/Network_Access) using ssh as documented.
• On the Carbon prompt (showing either login5 or login6 as host name), enter:

  vncserver

• At the first time, you will be asked for a password which will limit access to your virtual desktop session.

• Take note of the display number from the output of the vncserver command:

  New 'login5:1 (stern)' desktop is login5:1

  Starting applications specified in /home/stern/.vnc/xstartup
  Log file is /home/stern/.vnc/login5:1.log


|-------------------------------------- ### None

Forward a network port from your machine to the same port on the Carbon login node.
How to do that depends on the SSH program you use, and which port to forward depends on the display number.

• Press <Enter> ~ C (three keys in succession: enter, tilde, capital C). You should get a prompt like this:

  ssh>

• At the prompt, enter:

  -L port:localhost:port

  ssh> -L 5901:localhost:5901
  Forwarding port.

• Press <Enter> to regain your regular prompt.

Configure your PuTTY Clogin session (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/Accessing_Carbon_licenses_remotely) to apply #Anticipatory port forwarding (see section below).
It appears PuTTY does not support adding tunnels on the fly.


|-------------------------------------- ### Connect with a client

• Select Connect to Server… from the Finder's menu, or press Command + K.

  <image 400px-HPC_2012-10-04_VNC_Finder_Connect_to_Server.png: HPC 2012-10-04 VNC Finder Connect to Server.png>

• Enter the Server Address in the form vnc://localhost:portnum/ and push Connect.
• You will get a warning that the connection is not encrypted. The impact is fairly low as the unencrypted part of the connection runs merely between two processes on the same host (sshd and vncserver) and does not go out over the network. The main remote connection from your own desktop to clogin will continue to be encrypted over the ssh channel.
• Enter the VNC password you chose earlier.

  <image 400px-HPC_2012-10-04_VNC_Screen_Sharing_warning.png: HPC 2012-10-04 VNC Screen Sharing warning.png>

  <image 400px-HPC_2012-10-04_VNC_Screen_Sharing_password.png: HPC 2012-10-04 VNC Screen Sharing password.png>

1. Select and install a VNC client.
 1.1. http://www.realvnc.com/download/viewer/
 1.2. http://www.tightvnc.com/download.php
2. Start the VNC client
 2.1. See e.g. Using VNC Viewer (http://www.realvnc.com/products/vnc/documentation/5.0/guides/user/Chapter3.html) in the RealVNC-5.0 documentation.
3. Connect to the VNC server at address

  127.0.0.1:displaynum

• Follow your VNC client's documentation.


|-------------------------------------- ### Use the virtual desktop

• Your virtual desktop will be running an xterm (http://en.wikipedia.org/wiki/Xterm) command line window and the Motif Window Manager (http://en.wikipedia.org/wiki/Motif_Window_Manager). The desktop is deliberately kept simple to reduce overhead and startup times.

  <image 600px-HPC_2012-10-04_VNC_running.png: HPC 2012-10-04 VNC running.png>

  <image HPC_2012-10-04_VNC_MWM_context_menu.png: HPC 2012-10-04 VNC MWM context menu.png>

• You can use the virtual desktop like a regular X11 session. Use the xterm command line to run shell commands or to start graphical applications, such as the Jmol molecular visualization application.

  $ echo $DISPLAY
  :1.0
  $ module load jmol
  $ jmol

• To open another terminal window, run the command xterm & or right-click and select New Window.


|-------------------------------------- ### Stop the server

Stop the server when you no longer need the virtual desktop. On a Carbon login node where you started the VNC server, enter:

  vncserver -kill :displaynum

All child processes that used the desktop will be killed, and VNC client connections will be severed.


|-------------------------------------- ## Tips

Please practice good housekeeping and do not needlessly leave vncserver processes running.
Stale vncserver processes (those that have not been used for days) will be killed.


|-------------------------------------- ### Avoiding multiple VNC sessions

• Avoid concurrent VNC sessions on different hosts, or even multiple VNC sessions on the same host.
• To inspect your current VNC processes, use the command

  vncserver -l

  ls -ltr ~/.vnc

• To use an existing session or clean up, log in to the specific node (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS).


|-------------------------------------- ### Customizing the virtual desktop

• Override the size and color depth of the virtual desktop by supplying options to vncserver:

  vncserver -geometry 1920x1080 -depth 24

  man vncserver


|-------------------------------------- ### Screen Sharing on the Mac

  <image 350px-HPC_2020-01_VNC_Screen_Sharing_Preferences_1.png: Screen Sharing, Preferences, Display (macOS 10.14).>

  <image 350px-HPC_2020-01_VNC_Screen_Sharing_Preferences_2.png: Screen Sharing, Preferences, Quality (macOS 10.14).>

• Recent Screen Sharing versions will pass through almost all keyboard input, which effectively disables many regular OS X keyboard shortcuts, in particular those for switching applications and taking screen shots.
• To switch from Screen Sharing to another application, click on its Dock icon.
• To take a screen shot, select Save Screen Capture As… from the Connection menu of the Screen Sharing application menu.
• To take screen shots more easily and use various other control options, choose Show Toolbar from the View menu of the Screen Sharing application menu.

The screen shots were taken under macOS 10.14. Other OS versions will look slightly differently.

  <image 450px-HPC_2012-10-04_VNC_in_Screen_Sharing_Connection_menu.png: HPC 2012-10-04 VNC in Screen Sharing Connection menu.png>

  <image 450px-HPC_2012-10-04_VNC_in_Screen_Sharing_View_menu.png: HPC 2012-10-04 VNC in Screen Sharing View menu.png>

  <image 900px-HPC_2012-10-04_VNC_in_Screen_Sharing_with_mouse_hovering_over_toolbar.png: HPC 2012-10-04 VNC in Screen Sharing with mouse hovering over toolbar.png>


|-------------------------------------- ### Anticipatory port forwarding

The VNC server allocates its ports and displays from a pool that all users have access to on a particular machine.
As a result, display numbers vary as soon as more than one user uses VNC at a given time.
The procedure above sets up port forwarding for just the port that your server selected.
You can avoid the step of having to manually identify and forward that port by preemptively forwarding a broader range of ports.
This is not guaranteed to cover all cases but will be sufficient for most, given the fairly sporadic use of VNC.
You must, however, still tell your VNC client application which displaynum (5900 + x) or :port (":x") to connect to.

Port forwarding depends on the SSH client you use.

1. Edit (or create) your file $HOME/.ssh/config.

2. Locate (or add) the section beginning with

  Host clogin

3. Add the following lines.

  LocalForward  5901	localhost:5901
  	LocalForward  5902	localhost:5902
  	LocalForward  5903	localhost:5903
  	LocalForward  5904	localhost:5904
  	LocalForward  5905	localhost:5905
  	LocalForward  5906	localhost:5906
  	LocalForward  5907	localhost:5907
  	LocalForward  5908	localhost:5908
  	LocalForward  5909	localhost:5909
  	LocalForward  5910	localhost:5910

The forwards will be active the next time you connect to clogin.

1. Configure PuTTY port forwarding as shown in the context of remote license access. (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/Accessing_Carbon_licenses_remotely)
Use the port numbers as shown in the previous section. They should appear in the Forwarded ports section of the Tunnels panel as:

  L5901  localhost:5901
  L5902  localhost:5902
  …

Again, these forwards will be active the next time you connect to clogin.


|-------------------------------------- ## Troubleshooting

• To reset your VNC password, run:

  vncpasswd

• To see a list of recent VNC servers that you might be running:

  ls -ltr ~/.vnc/*.pid

• Identify and inspect server log files:

  ls -ltr ~/.vnc/*.log
  cat ~/.vnc/$HOSTNAME:displaynum.log

• X11-style Copy&Paste requires a 3-button mouse. Diagnose your mouse button mappings using the xev command (http://linux.die.net/man/1/xev). Move your mouse into the xev window and click the buttons. Look for events like this:

  ButtonPress event, serial 31, synthetic NO, window 0x600001,
      root 0x281, subw 0x600002, time 784185758, (35,33), root:(39,55),
      state 0x0, button 3, same_screen YES

• You can simply and unceremoniously kill all your vncservers on a given host by using the Unix kill command. For good measure, run it twice, then clean up:

  kill `cat ~/.vnc/$HOSTNAME*.pid`
  kill `cat ~/.vnc/$HOSTNAME*.pid`
  rm ~/.vnc/$HOSTNAME*.pid



• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)


|-------------------------------------- # HPC/Applications/atk/License configuration on Windows


|--------------------------------------- # HPC/Applications/atk


|--------------------------------------- ## Contents

1. 1 Parallel jobs
2. 2 Remote access
 2.1. 2.1 Preparation
 2.2. 2.2 Configure
 2.3. 2.3 Launching ATK/VNL
 2.4. 2.4 Troubleshooting licensing
  2.4.1. 2.4.1 Check license configuration
  2.4.2. 2.4.2 References


|--------------------------------------- ## Parallel jobs

• See QuantumWise's Parallel Guide (https://docs.quantumwise.com/tutorials/parallelization/parallelization.html)
• We use Intel-MPI instead of MPICH2, with the Hydra process manager instead of MPD. See the sample.job file for details:

  $ATK_HOME/sample.job




|--------------------------------------- ## Remote access

To run ATK/VNL directly on your computer (as opposed to running it remotely and sending graphics over the network), follow these steps, all on your computer, to prepare for and launch the application:


|--------------------------------------- ### Preparation

• Log out from all Carbon nodes.
• Log out from Mega.
• Modify your configuration for SSH port forwarding to Mega. On Mac or Linux, make the changes to your file ~/.ssh/config. On Windows, apply the changes as shown in the help pages of your SSH application.

  Local port: 6200,   Remote Port: 6200@cmgmt4

• Log back in to Mega. This will activate the tunnel configuration that you added previously, to be used later by the ATK License Configuration wizard.


|--------------------------------------- ### Configure

• In the License Configuration helper, choose Configure license settings, Advanced setup. In the field for QUANTUM_LICENSE_PATH+= add:

  localhost:6200@localhost


|--------------------------------------- ### None

• Log in to Mega if you are not alreay logged in.
You need to have exactly one Mega session active to access any kind of service on Carbon, be it for a single use or several ones concurrently.
• Start VNL or atkpython normally for your platform.


|--------------------------------------- ### Troubleshooting licensing


|--------------------------------------- #### Check license configuration

To check the basic license configuration for ATK,
without requiring X11 or VNC graphics,
run the ATK Python script interpreter atkpython.
It requires a license regardless of whether the script actually uses NanoLang constructs.

  atkpython -c 'print("Hello", 1+3/2)'

• The expected output will look like:

  +------------------------------------------------------------------------------+
  |                                                                              |
  | Atomistix ToolKit 2017.2 [Build 997d195]                                     |
  |                                                                              |
  +------------------------------------------------------------------------------+
  ('Hello', 1)

  Timing:                          Total     Per Step        %
  …
  Total                   :       2.24 s

• Failure to obtain a license, such as from an incorrect configuration or a server being down, looks like:

  License Error: (Internal: 511 Feature: ATKPython)

  [NETWORK] 6200@localhost - (Err: 15) Unable to connect to license server

  License configuration (environment variables):
  ---------------------------------------------------------------------------
  QUANTUM_LICENSE_PATH = …
  ---------------------------------------------------------------------------
  *** Make sure to include the information above when contacting support ***
  …


|--------------------------------------- #### References

• http://docs.quantumwise.com/guides/InstallationGuides/licensing.html
• On Mac and Linux, the configuration file is stored on the client computer at ~/.quantumwise/licenses.licconf.
• HPC/Software/Modules/atk/License troubleshooting on Windows (https://wiki.anl.gov/cnm/HPC/Software/Modules/atk/License_troubleshooting_on_Windows) (older page, written for ATK-12).


|---------------------------------------- # HPC/Modules/atk/License troubleshooting on Windows


|----------------------------------------- # HPC/Applications/atk


|----------------------------------------- ## Contents

1. 1 Parallel jobs
2. 2 Remote access
 2.1. 2.1 Preparation
 2.2. 2.2 Configure
 2.3. 2.3 Launching ATK/VNL
 2.4. 2.4 Troubleshooting licensing
  2.4.1. 2.4.1 Check license configuration
  2.4.2. 2.4.2 References


|----------------------------------------- ## Parallel jobs

• See QuantumWise's Parallel Guide (https://docs.quantumwise.com/tutorials/parallelization/parallelization.html)
• We use Intel-MPI instead of MPICH2, with the Hydra process manager instead of MPD. See the sample.job file for details:

  $ATK_HOME/sample.job




|----------------------------------------- ## Remote access

To run ATK/VNL directly on your computer (as opposed to running it remotely and sending graphics over the network), follow these steps, all on your computer, to prepare for and launch the application:


|----------------------------------------- ### Preparation

• Log out from all Carbon nodes.
• Log out from Mega.
• Modify your configuration for SSH port forwarding to Mega. On Mac or Linux, make the changes to your file ~/.ssh/config. On Windows, apply the changes as shown in the help pages of your SSH application.

  Local port: 6200,   Remote Port: 6200@cmgmt4

• Log back in to Mega. This will activate the tunnel configuration that you added previously, to be used later by the ATK License Configuration wizard.


|----------------------------------------- ### Configure

• In the License Configuration helper, choose Configure license settings, Advanced setup. In the field for QUANTUM_LICENSE_PATH+= add:

  localhost:6200@localhost


|----------------------------------------- ### None

• Log in to Mega if you are not alreay logged in.
You need to have exactly one Mega session active to access any kind of service on Carbon, be it for a single use or several ones concurrently.
• Start VNL or atkpython normally for your platform.


|----------------------------------------- ### Troubleshooting licensing


|----------------------------------------- #### Check license configuration

To check the basic license configuration for ATK,
without requiring X11 or VNC graphics,
run the ATK Python script interpreter atkpython.
It requires a license regardless of whether the script actually uses NanoLang constructs.

  atkpython -c 'print("Hello", 1+3/2)'

• The expected output will look like:

  +------------------------------------------------------------------------------+
  |                                                                              |
  | Atomistix ToolKit 2017.2 [Build 997d195]                                     |
  |                                                                              |
  +------------------------------------------------------------------------------+
  ('Hello', 1)

  Timing:                          Total     Per Step        %
  …
  Total                   :       2.24 s

• Failure to obtain a license, such as from an incorrect configuration or a server being down, looks like:

  License Error: (Internal: 511 Feature: ATKPython)

  [NETWORK] 6200@localhost - (Err: 15) Unable to connect to license server

  License configuration (environment variables):
  ---------------------------------------------------------------------------
  QUANTUM_LICENSE_PATH = …
  ---------------------------------------------------------------------------
  *** Make sure to include the information above when contacting support ***
  …


|----------------------------------------- #### References

• http://docs.quantumwise.com/guides/InstallationGuides/licensing.html
• On Mac and Linux, the configuration file is stored on the client computer at ~/.quantumwise/licenses.licconf.
• HPC/Software/Modules/atk/License troubleshooting on Windows (https://wiki.anl.gov/cnm/HPC/Software/Modules/atk/License_troubleshooting_on_Windows) (older page, written for ATK-12).

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)
• Pages with syntax highlighting errors (https://wiki.anl.gov/wiki_cnm/index.php)

Redirect to:

• HPC/Applications/atk/License troubleshooting on Windows (https://wiki.anl.gov/cnm/HPC/Applications/atk/License_troubleshooting_on_Windows)


|----------------------------------------- # HPC/Applications/atk/License troubleshooting on Windows

1. Open a Windows command prompt. (http://windows.microsoft.com/en-US/windows7/Command-Prompt-frequently-asked-questions)
2. Inspect the current license setting.
echo %QUANTUM_LICENSE_PATH%
You should get one of the following:
6200@localhost
6200@localhost;6201@localhost
The first entry uses one license server only, the second entry uses one of two available servers.
3. If you do not see one of the above resuls, log out and log back in again, and repeat these steps from step 1 above.
4. Run the following commands exactly as shown:
cd %HOMEPATH%
set LMX_EXTENDEDLOG=Desktop\lmx.log
set > %LMX_EXTENDEDLOG%
You can select and Copy the string from here and Paste it into the Command Prompt window from the right-click context menu.
5. Run this command, adapting it to the path you installed ATK under:
C:\"Program Files (x86)"\QuantumWise\atk-12.2.2\vnl\bin\vnl.exe
It will take a few seconds for the command to start.
Note: For this test only, do not start VNL by clicking on its icon in Explorer or its desktop shortcut.
6. Move any VNL windows away from the command prompt window.
7. Take a screenshot of your entire screen. (http://windows.microsoft.com/en-US/windows7/Use-Snipping-Tool-to-capture-screen-shots)
Use Save Snip, Save As to produce an image file.
8. Close VNL.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_VNL_LMX_log.png)
9. Locate the lmx.log file on your Desktop. The extension may not be shown.
10. Optional: To inspect the log file, open it by double-clicking. It is a text file that opens by default in Notepad.
11. Send by email the lmx.log file and the screenshot from step (5) (http://windows.microsoft.com/en-US/windows7/Send-a-file-in-e-mail)
12. Close the Command Prompt window.

  <image HPC_2012-08_VNL_LMX_log.png: HPC 2012-08 VNL LMX log.png>

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)
• Pages with syntax highlighting errors (https://wiki.anl.gov/wiki_cnm/index.php)

1. Locate and start atk_license_setup.exe, typically located in C:\"Program Files (x86)"\QuantumWise\atk-12.2.2\license\atk_license_config.exe
2. Push Next.
3. You will see the current license configuration. Push OK.
 (https://wiki.anl.gov/cnm/File:HPC_ATK_Windows_License_setup_-_1.png)
4. Choose the Floating option and push Next.
 (https://wiki.anl.gov/cnm/File:HPC_ATK_Windows_License_setup_-_3.png)
5. As License server address, enter this exact string (with semicolons ";" and "@" characters, no spaces):
localhost;6201@localhost

Note: The license server string will be assigned to the environment variable QUANTUM_LICENSE_PATH. As of ATK-12.2.2, the characters 6200@ will be automatically prepended to the variable. Do not enter a numeric value before the first host name in the License server field above. (https://wiki.anl.gov/cnm/File:HPC_ATK_Windows_License_setup_-_5.png)
6. Push Next.
7. Push Next again.
8. Push Finish.


|---------------------------------------- # HPC/Applications/atk/License configuration on Windows

1. Locate and start atk_license_setup.exe, typically located in C:\"Program Files (x86)"\QuantumWise\atk-12.2.2\license\atk_license_config.exe
2. Push Next.
3. You will see the current license configuration. Push OK.
 (https://wiki.anl.gov/cnm/File:HPC_ATK_Windows_License_setup_-_1.png)
4. Choose the Floating option and push Next.
 (https://wiki.anl.gov/cnm/File:HPC_ATK_Windows_License_setup_-_3.png)
5. As License server address, enter this exact string (with semicolons ";" and "@" characters, no spaces):
localhost;6201@localhost

Note: The license server string will be assigned to the environment variable QUANTUM_LICENSE_PATH. As of ATK-12.2.2, the characters 6200@ will be automatically prepended to the variable. Do not enter a numeric value before the first host name in the License server field above. (https://wiki.anl.gov/cnm/File:HPC_ATK_Windows_License_setup_-_5.png)
6. Push Next.
7. Push Next again.
8. Push Finish.

  <image HPC_ATK_Windows_License_setup_-_1.png: HPC ATK Windows License setup - 1.png>

  <image HPC_ATK_Windows_License_setup_-_2.png: HPC ATK Windows License setup - 2.png>

  <image HPC_ATK_Windows_License_setup_-_3.png: HPC ATK Windows License setup - 3.png>

  <image HPC_ATK_Windows_License_setup_-_5.png: HPC ATK Windows License setup - 5.png>

  <image HPC_ATK_Windows_License_setup_-_1.png: HPC ATK Windows License setup - 1.png>

  <image HPC_ATK_Windows_License_setup_-_2.png: HPC ATK Windows License setup - 2.png>

  <image HPC_ATK_Windows_License_setup_-_3.png: HPC ATK Windows License setup - 3.png>

  <image HPC_ATK_Windows_License_setup_-_5.png: HPC ATK Windows License setup - 5.png>


|-------------------------------------- # HPC/Applications/comsol


|-------------------------------------- ## Contents

1. 1 Introduction
2. 2 Access
 2.1. 2.1 COMSOL Multiphysics
 2.2. 2.2 COMSOL Server
3. 3 Support
4. 4 The modes to run COMSOL
 4.1. 4.1 Running the desktop application
 4.2. 4.2 Running a batch calculation
5. 5 Use with X11
6. 6 Use with VNC
7. 7 Running native desktop version
 7.1. 7.1 Inside CNM or over VPN from outside
  7.1.1. 7.1.1 Ensure correct DNS search domains
  7.1.2. 7.1.2 Configure License servers
  7.1.3. 7.1.3 Network Troubleshooting
 7.2. 7.2 Outside CNM, using SSH Tunneling
8. 8 License Troubleshooting
 8.1. 8.1 Could not obtain license for COMSOL Multiphysics GUI
 8.2. 8.2 License server machine is down or not responding
 8.3. 8.3 License file does not support this version
9. 9 Multiple CPU cores
10. 10 Batch jobs
 10.1. 10.1 Sample Job file
11. 11 Important COMSOL Support Articles
 11.1. 11.1 KB Articles
 11.2. 11.2 Blog-style articles


|-------------------------------------- ## Introduction


|---------------------------------------- # HPC/Applications/comsol


|---------------------------------------- ## Contents

1. 1 Introduction
2. 2 Access
 2.1. 2.1 COMSOL Multiphysics
 2.2. 2.2 COMSOL Server
3. 3 Support
4. 4 The modes to run COMSOL
 4.1. 4.1 Running the desktop application
 4.2. 4.2 Running a batch calculation
5. 5 Use with X11
6. 6 Use with VNC
7. 7 Running native desktop version
 7.1. 7.1 Inside CNM or over VPN from outside
  7.1.1. 7.1.1 Ensure correct DNS search domains
  7.1.2. 7.1.2 Configure License servers
  7.1.3. 7.1.3 Network Troubleshooting
 7.2. 7.2 Outside CNM, using SSH Tunneling
8. 8 License Troubleshooting
 8.1. 8.1 Could not obtain license for COMSOL Multiphysics GUI
 8.2. 8.2 License server machine is down or not responding
 8.3. 8.3 License file does not support this version
9. 9 Multiple CPU cores
10. 10 Batch jobs
 10.1. 10.1 Sample Job file
11. 11 Important COMSOL Support Articles
 11.1. 11.1 KB Articles
 11.2. 11.2 Blog-style articles


|---------------------------------------- ## Introduction

  <image 450px-HPC_Comsol_licensed_modules.png: >

The COMSOL Multiphysics (http://www.comsol.com/products/multiphysics/) product is available for Mac, Windows, and Linux.


|---------------------------------------- ## Access


|---------------------------------------- ### COMSOL Multiphysics

CNM's license for
COMSOL Multiphysics (http://www.comsol.com/products/multiphysics/)
(the main graphical user interface application with batch computing capabilities)
is available
upon request 
to
Argonne employees 
in the following roles:

• CNM Facility Users, under an active proposal with COMSOL in scope, or
• NST staff (including PostDocs, joint appointments, and students), under intra-divisional discretionary access.

For access, submit a support request (https://wiki.anl.gov/cdn-cgi/l/email-protection).

• Of the available features, we have licensed a subset, shown at right.
• To have a native desktop version installed on your Argonne-owned computer (laptop or desktop), please contact CNM support (https://wiki.anl.gov/cdn-cgi/l/email-protection). Make sure to review Product Updates (http://www.comsol.com/support/updates/).
• To run COMSOL on Carbon itself, as GUI or as batch computing jobs, your proposal must have Carbon access in scope.


|---------------------------------------- ### COMSOL Server

CNM Facility Users who are not Argonne employees are not eligible to access the full COMSOL Multiphysics product,
in compliance with its licensing terms and conditions.
However, the COMSOL Server (https://www.comsol.com/comsol-server) product offers an alternative but more narrow means of access.

All users, including non-Argonne users may be able to run, over a web interface in their browser,
pre-parameterized "fixed-model" simulations that were made with the COMSOL Application Builder (requires Windows).

To inquire about using COMSOL server applications,
please contact our Support (https://wiki.anl.gov/cdn-cgi/l/email-protection).
We will review possible purchase paths for COMSOL Server, and the considerable effort likely required by users and the CNM to develop and deploy a COMSOL application.


|---------------------------------------- ## Support

• For questions on how to run or start COMSOL:
Submit an  IT support request (https://wiki.anl.gov/cnm/HPC/Support)
• For questions related to most COMSOL data or scripts, contact COMSOL support at:
support@comsol.com (https://wiki.anl.gov/cdn-cgi/l/email-protection)
• Exception: If your support question might contain data that is subject to US Export Control regulations, contact instead:
us-export-control@us.comsol.com (https://wiki.anl.gov/cdn-cgi/l/email-protection)


|---------------------------------------- ## The modes to run COMSOL

There are several ways of running COMSOL.


|---------------------------------------- ### Running the desktop application

To edit models and analyze results, use the COMSOL graphical user interface (GUI). You can run it in several ways, each explained in more detail in the following sections.

1. Run on Carbon, display on your desktop using the X Window system (X11) (http://en.wikipedia.org/wiki/X_Window_System).
 1.1. Requires an X11 Server application running on your client machine, and SSH X11 forwarding.
 1.2. The X11 protocol can be slow over LAN.
2. Run on Carbon within a  virtual desktop environment (VNC) (https://wiki.anl.gov/cnm/HPC/Network_Access/Virtual_Desktop).
 2.1. Requires a VNC client on your machine.
 2.2. It can be confusing where VNC and the app runs.
 2.3. The virtual desktop presents a (deliberatly) sparse windowing environment – Copy&Paste can be difficult to use.
3. Run on your own computer, remotely checking out Carbon's license.
 3.1. Requires a full installation of COMSOL on your desktoo or laptop computer.
 3.2. You will require access to the COMSOL license server running on Carbon, either through VPN (fairly easy) or SSH tunneling (can be intimidating for first-time users). See below for details.


|---------------------------------------- ### Running a batch calculation

When the computational stage of models takes longer than a few minutes to complete, it will be beneficial to submit save the model file and run it in parallel on Carbon.
See the section below.


|---------------------------------------- ## Use with X11

For casual use, and with  X11 tunneling to Carbon (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS) set up, simply add to your ~/.bashrc file on Carbon:

  module load comsol

Then, from the command line on a Carbon login node, start the COMSOL GUI:

  comsol &

Comsol will use a number of cores to run calculations multithreaded by default. (On Carbon, COMSOL_NUM_THREADS is set.)

Quit the application as soon as you are done. Only one user can use Comsol at a time.


|---------------------------------------- ## Use with VNC

See general  instructions on using VNC (https://wiki.anl.gov/cnm/HPC/Network_Access/Virtual_Desktop), and the COMSOL example therein.


|---------------------------------------- ## Running native desktop version

To get the fastest response from the COMSOL GUI, run a native COMSOL version on your desktop machine or laptop, called client machine below.

For client machines inside the CNM, follow the next section.
For a client machine outside of CNM networks, configure it to check out a license from the Comsol license server running on Carbon, using one of two ways. Choose one that you are more comfortable with.

Enter license details either in the COMSOL Setup configuration dialog or later in COMSOL's license file at <COMSOLDIR>/license/license.dat, where <COMSOLDIR> is located by default at:

• Windows: C:\Program files\COMSOL\COMSOL5xx
• Linux: /usr/local/comsol5xx
• Mac: /Applications/COMSOL5xx

("5xx" will be your installed version)


|---------------------------------------- ### Inside CNM or over VPN from outside


|---------------------------------------- #### Ensure correct DNS search domains

Make sure that cnm.anl.gov is listed in the DNS Search Domains for your current network profile.

• If the client machine is directly in CNM networks, this should be the default.
• If the client machine is connected over VPN, edit the respective network profile.

• On a Mac, find the VPN configuration details under System Preferences, Network, Advanced… . You may need to unlock the Network panel first before you can make changes under "Advanced…". It appears that those changes are being saved and will be activated automatically the next time that this VPN session gets started.

  <image 400px-VNC_add_cnm_to_DNS_1.png: VNC add cnm to DNS 1.png>

  <image 400px-VNC_add_cnm_to_DNS_2.png: VNC add cnm to DNS 2.png>

• On Windows or Linux machines, take analogous steps, using the platform's own configuration tools.


|---------------------------------------- #### Configure License servers

• On your client machine, use the following entries for the COMSOL license file, or enter the respective host names and ports into the COMSOL Setup license configuration dialog:

  SERVER clicense1 ANY 1718
  SERVER clicense2 ANY 1718
  SERVER clicense3 ANY 1718
  USE_SERVER

• Start COMSOL.


|---------------------------------------- #### Network Troubleshooting

When using the license access model descibed here (as opposed to tunneled over SSH), ensure the following:

• Verify that short host names can be resolved to IP addresses. Either one of the following commands should produce sensible output:

  host clicense1

  ping -c 3 clicense1

• Verify that both license ports on the same server can be reached from your client machine:

  telnet clicense1 1718
  telnet clicense1 1719

  telnet clicense2 1718
  telnet clicense2 1719

  Trying 146.139.x.y...
  Connected to clicense1.cnm.anl.gov.
  Escape character is '^]'.

  telnet: connect to address 146.139.x.y: Operation timed out

  telnet: connect to address 146.139.x.y: Connection refused


|---------------------------------------- ### None

If you're comfortable with ssh and tunneling, do the following on your client machine:

• Enter into the COMSOL license file:

  SERVER 127.0.0.1 ANY 1718
  USE_SERVER

Connect to mega or a Carbon login node with one of the following ssh commands:

• First, set up a tunnel to the primary license server:

  ssh  -L 1718:clicense1:1718  -L 1719:clicense1:1719  mega

• Start COMSOL.

If the above attempt takes a long time or hangs entirely, it may be because the license service currently runs on the secondary server.

• Connect to the alternate license server:

  ssh  -L 1718:clicense2:1718  -L 1719:clicense2:1719  mega

• Start COMSOL.


|---------------------------------------- ## License Troubleshooting

The following are typical error messages.


|---------------------------------------- ### Could not obtain license for COMSOL Multiphysics GUI

• Error details:

  License error: -4.
  Licensed number of users already reached.
  Feature:       COMSOLGUI
  License path:  /Users/stern/Applications/COMSOL52a/license/license.dat:
  FlexNet Licensing error:-4,132

• Reason: The connection to the license server succeeded, but the license token(s) you requested are in use.
• Solution: Wait a bit, or identify who's using COMSOL (http://carbonmgmt/ganglia/lic.php) and politely ask the user when they might be finished with their work.


|---------------------------------------- ### License server machine is down or not responding

• Error details:

  License error: -96.
   See the system administrator about starting the license server system, or
   make sure you're referring to the right host (see LM_LICENSE_FILE).
  Feature:       SERIAL
  Hostname:      clicense3
  License path:  /Users/stern/Applications/COMSOL52a/license/license.dat:
  FlexNet Licensing error:-96,7

• Reason: The license servers cannot be reached at all. The ping or host tests mentioned above fail.
• Solution: Review the client license file and DNS lookup domains.


|---------------------------------------- ### License file does not support this version

• Error details:

  Feature: SERIAL
  Application version > License version: 5.21 > 3.5
  License path: /Users/stern/Applications/COMSOL52a/license/license.dat:
  FlexNet Licensing error:-21,126

• Reason: Only the first of two steps for connecting to the license servers succeeds, which may happen when the redundant license service runs on the alternate server instead of the one you're connected to.
• Solution: When using SSH, try clicense2 instead of clicense1, or vice versa. Revisit your ~/.ssh/config file or use the alternate command line as shown in the SSH section above.


|---------------------------------------- ## Multiple CPU cores

Ways to start multi-core (from http://www.comsol.com/support/knowledgebase/1096/)

  comsol -np 8

  export COMSOL_NUM_THREADS=8    # automatically provided on Carbon
  comsol

• COMSOL does not benefit from hyperthreading (oversubscribing the physical core count).


|---------------------------------------- ## Batch jobs

• http://www.comsol.com/support/knowledgebase/1001/ .
• Media:HPC 2012-05-16 Comsol parallel usage.pdf (https://wiki.anl.gov/wiki_cnm/images/0/0a/HPC_2012-05-16_Comsol_parallel_usage.pdf) (Modified from http://www.comsol.com/support/knowledgebase/1001/files/4027/cluster_install_linux_42a.pptx – Appendix slide, PBS)
• Note: MPD is not supported on Carbon (I patched the main comsol script), and no longer necessary at all in Comsol-4.3.


|---------------------------------------- ### Sample Job file

See:

  $COMSOL_HOME/sample.job


|---------------------------------------- ## Important COMSOL Support Articles

• Toplevel suport page: https://www.comsol.com/support


|---------------------------------------- ### KB Articles

• Running COMSOL® in parallel on clusters (https://www.comsol.com/support/knowledgebase/1001)
• Running parametric sweeps, batch sweeps, and cluster sweeps from the command line (https://www.comsol.com/support/knowledgebase/1250)
• Reducing the amount of solution data stored in a model (https://www.comsol.com/support/knowledgebase/1255)
• Handling large models (https://www.comsol.com/support/knowledgebase/830)


|---------------------------------------- ### Blog-style articles

• The Power of the Batch Sweep (https://www.comsol.com/blogs/the-power-of-the-batch-sweep/)
• How to Run Simulations in Batch Mode from the Command Line (https://www.comsol.com/blogs/how-to-run-simulations-in-batch-mode-from-the-command-line/)

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)

  <image 450px-HPC_Comsol_licensed_modules.png: >

The COMSOL Multiphysics (http://www.comsol.com/products/multiphysics/) product is available for Mac, Windows, and Linux.


|-------------------------------------- ## Access


|-------------------------------------- ### COMSOL Multiphysics

CNM's license for
COMSOL Multiphysics (http://www.comsol.com/products/multiphysics/)
(the main graphical user interface application with batch computing capabilities)
is available
upon request 
to
Argonne employees 
in the following roles:

• CNM Facility Users, under an active proposal with COMSOL in scope, or
• NST staff (including PostDocs, joint appointments, and students), under intra-divisional discretionary access.

For access, submit a support request (https://wiki.anl.gov/cdn-cgi/l/email-protection).

• Of the available features, we have licensed a subset, shown at right.
• To have a native desktop version installed on your Argonne-owned computer (laptop or desktop), please contact CNM support (https://wiki.anl.gov/cdn-cgi/l/email-protection). Make sure to review Product Updates (http://www.comsol.com/support/updates/).
• To run COMSOL on Carbon itself, as GUI or as batch computing jobs, your proposal must have Carbon access in scope.


|-------------------------------------- ### COMSOL Server

CNM Facility Users who are not Argonne employees are not eligible to access the full COMSOL Multiphysics product,
in compliance with its licensing terms and conditions.
However, the COMSOL Server (https://www.comsol.com/comsol-server) product offers an alternative but more narrow means of access.

All users, including non-Argonne users may be able to run, over a web interface in their browser,
pre-parameterized "fixed-model" simulations that were made with the COMSOL Application Builder (requires Windows).

To inquire about using COMSOL server applications,
please contact our Support (https://wiki.anl.gov/cdn-cgi/l/email-protection).
We will review possible purchase paths for COMSOL Server, and the considerable effort likely required by users and the CNM to develop and deploy a COMSOL application.


|-------------------------------------- ## Support

• For questions on how to run or start COMSOL:
Submit an  IT support request (https://wiki.anl.gov/cnm/HPC/Support)
• For questions related to most COMSOL data or scripts, contact COMSOL support at:
support@comsol.com (https://wiki.anl.gov/cdn-cgi/l/email-protection)
• Exception: If your support question might contain data that is subject to US Export Control regulations, contact instead:
us-export-control@us.comsol.com (https://wiki.anl.gov/cdn-cgi/l/email-protection)


|-------------------------------------- ## The modes to run COMSOL

There are several ways of running COMSOL.


|-------------------------------------- ### Running the desktop application

To edit models and analyze results, use the COMSOL graphical user interface (GUI). You can run it in several ways, each explained in more detail in the following sections.

1. Run on Carbon, display on your desktop using the X Window system (X11) (http://en.wikipedia.org/wiki/X_Window_System).
 1.1. Requires an X11 Server application running on your client machine, and SSH X11 forwarding.
 1.2. The X11 protocol can be slow over LAN.
2. Run on Carbon within a  virtual desktop environment (VNC) (https://wiki.anl.gov/cnm/HPC/Network_Access/Virtual_Desktop).
 2.1. Requires a VNC client on your machine.
 2.2. It can be confusing where VNC and the app runs.
 2.3. The virtual desktop presents a (deliberatly) sparse windowing environment – Copy&Paste can be difficult to use.
3. Run on your own computer, remotely checking out Carbon's license.
 3.1. Requires a full installation of COMSOL on your desktoo or laptop computer.
 3.2. You will require access to the COMSOL license server running on Carbon, either through VPN (fairly easy) or SSH tunneling (can be intimidating for first-time users). See below for details.


|-------------------------------------- ### Running a batch calculation

When the computational stage of models takes longer than a few minutes to complete, it will be beneficial to submit save the model file and run it in parallel on Carbon.
See the section below.


|-------------------------------------- ## Use with X11

For casual use, and with  X11 tunneling to Carbon (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS) set up, simply add to your ~/.bashrc file on Carbon:

  module load comsol

Then, from the command line on a Carbon login node, start the COMSOL GUI:

  comsol &

Comsol will use a number of cores to run calculations multithreaded by default. (On Carbon, COMSOL_NUM_THREADS is set.)

Quit the application as soon as you are done. Only one user can use Comsol at a time.


|-------------------------------------- ## Use with VNC

See general  instructions on using VNC (https://wiki.anl.gov/cnm/HPC/Network_Access/Virtual_Desktop), and the COMSOL example therein.


|-------------------------------------- ## Running native desktop version

To get the fastest response from the COMSOL GUI, run a native COMSOL version on your desktop machine or laptop, called client machine below.

For client machines inside the CNM, follow the next section.
For a client machine outside of CNM networks, configure it to check out a license from the Comsol license server running on Carbon, using one of two ways. Choose one that you are more comfortable with.

Enter license details either in the COMSOL Setup configuration dialog or later in COMSOL's license file at <COMSOLDIR>/license/license.dat, where <COMSOLDIR> is located by default at:

• Windows: C:\Program files\COMSOL\COMSOL5xx
• Linux: /usr/local/comsol5xx
• Mac: /Applications/COMSOL5xx

("5xx" will be your installed version)


|-------------------------------------- ### Inside CNM or over VPN from outside


|-------------------------------------- #### Ensure correct DNS search domains

Make sure that cnm.anl.gov is listed in the DNS Search Domains for your current network profile.

• If the client machine is directly in CNM networks, this should be the default.
• If the client machine is connected over VPN, edit the respective network profile.

• On a Mac, find the VPN configuration details under System Preferences, Network, Advanced… . You may need to unlock the Network panel first before you can make changes under "Advanced…". It appears that those changes are being saved and will be activated automatically the next time that this VPN session gets started.

  <image 400px-VNC_add_cnm_to_DNS_1.png: VNC add cnm to DNS 1.png>

  <image 400px-VNC_add_cnm_to_DNS_2.png: VNC add cnm to DNS 2.png>

• On Windows or Linux machines, take analogous steps, using the platform's own configuration tools.


|-------------------------------------- #### Configure License servers

• On your client machine, use the following entries for the COMSOL license file, or enter the respective host names and ports into the COMSOL Setup license configuration dialog:

  SERVER clicense1 ANY 1718
  SERVER clicense2 ANY 1718
  SERVER clicense3 ANY 1718
  USE_SERVER

• Start COMSOL.


|-------------------------------------- #### Network Troubleshooting

When using the license access model descibed here (as opposed to tunneled over SSH), ensure the following:

• Verify that short host names can be resolved to IP addresses. Either one of the following commands should produce sensible output:

  host clicense1

  ping -c 3 clicense1

• Verify that both license ports on the same server can be reached from your client machine:

  telnet clicense1 1718
  telnet clicense1 1719

  telnet clicense2 1718
  telnet clicense2 1719

  Trying 146.139.x.y...
  Connected to clicense1.cnm.anl.gov.
  Escape character is '^]'.

  telnet: connect to address 146.139.x.y: Operation timed out

  telnet: connect to address 146.139.x.y: Connection refused


|-------------------------------------- ### None

If you're comfortable with ssh and tunneling, do the following on your client machine:

• Enter into the COMSOL license file:

  SERVER 127.0.0.1 ANY 1718
  USE_SERVER

Connect to mega or a Carbon login node with one of the following ssh commands:

• First, set up a tunnel to the primary license server:

  ssh  -L 1718:clicense1:1718  -L 1719:clicense1:1719  mega

• Start COMSOL.

If the above attempt takes a long time or hangs entirely, it may be because the license service currently runs on the secondary server.

• Connect to the alternate license server:

  ssh  -L 1718:clicense2:1718  -L 1719:clicense2:1719  mega

• Start COMSOL.


|-------------------------------------- ## License Troubleshooting

The following are typical error messages.


|-------------------------------------- ### Could not obtain license for COMSOL Multiphysics GUI

• Error details:

  License error: -4.
  Licensed number of users already reached.
  Feature:       COMSOLGUI
  License path:  /Users/stern/Applications/COMSOL52a/license/license.dat:
  FlexNet Licensing error:-4,132

• Reason: The connection to the license server succeeded, but the license token(s) you requested are in use.
• Solution: Wait a bit, or identify who's using COMSOL (http://carbonmgmt/ganglia/lic.php) and politely ask the user when they might be finished with their work.


|-------------------------------------- ### License server machine is down or not responding

• Error details:

  License error: -96.
   See the system administrator about starting the license server system, or
   make sure you're referring to the right host (see LM_LICENSE_FILE).
  Feature:       SERIAL
  Hostname:      clicense3
  License path:  /Users/stern/Applications/COMSOL52a/license/license.dat:
  FlexNet Licensing error:-96,7

• Reason: The license servers cannot be reached at all. The ping or host tests mentioned above fail.
• Solution: Review the client license file and DNS lookup domains.


|-------------------------------------- ### License file does not support this version

• Error details:

  Feature: SERIAL
  Application version > License version: 5.21 > 3.5
  License path: /Users/stern/Applications/COMSOL52a/license/license.dat:
  FlexNet Licensing error:-21,126

• Reason: Only the first of two steps for connecting to the license servers succeeds, which may happen when the redundant license service runs on the alternate server instead of the one you're connected to.
• Solution: When using SSH, try clicense2 instead of clicense1, or vice versa. Revisit your ~/.ssh/config file or use the alternate command line as shown in the SSH section above.


|-------------------------------------- ## Multiple CPU cores

Ways to start multi-core (from http://www.comsol.com/support/knowledgebase/1096/)

  comsol -np 8

  export COMSOL_NUM_THREADS=8    # automatically provided on Carbon
  comsol

• COMSOL does not benefit from hyperthreading (oversubscribing the physical core count).


|-------------------------------------- ## Batch jobs

• http://www.comsol.com/support/knowledgebase/1001/ .
• Media:HPC 2012-05-16 Comsol parallel usage.pdf (https://wiki.anl.gov/wiki_cnm/images/0/0a/HPC_2012-05-16_Comsol_parallel_usage.pdf) (Modified from http://www.comsol.com/support/knowledgebase/1001/files/4027/cluster_install_linux_42a.pptx – Appendix slide, PBS)
• Note: MPD is not supported on Carbon (I patched the main comsol script), and no longer necessary at all in Comsol-4.3.


|-------------------------------------- ### Sample Job file

See:

  $COMSOL_HOME/sample.job


|-------------------------------------- ## Important COMSOL Support Articles

• Toplevel suport page: https://www.comsol.com/support


|-------------------------------------- ### KB Articles

• Running COMSOL® in parallel on clusters (https://www.comsol.com/support/knowledgebase/1001)
• Running parametric sweeps, batch sweeps, and cluster sweeps from the command line (https://www.comsol.com/support/knowledgebase/1250)
• Reducing the amount of solution data stored in a model (https://www.comsol.com/support/knowledgebase/1255)
• Handling large models (https://www.comsol.com/support/knowledgebase/830)


|-------------------------------------- ### Blog-style articles

• The Power of the Batch Sweep (https://www.comsol.com/blogs/the-power-of-the-batch-sweep/)
• How to Run Simulations in Batch Mode from the Command Line (https://www.comsol.com/blogs/how-to-run-simulations-in-batch-mode-from-the-command-line/)

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)


|-------------------------------------- # HPC/Applications/lumerical


|-------------------------------------- ## Contents

1. 1 Introduction
 1.1. 1.1 Access
2. 2 Manual and Knowledge Base
3. 3 Ways to run Lumerical GUI applications
 3.1. 3.1 Directly on your computer – for Windows/Linux only
 3.2. 3.2 On Carbon, over X11 – for Windows/Linux/Mac
 3.3. 3.3 On Carbon, over VNC – for Windows/Linux/Mac
4. 4 Ways to run Lumerical compute engine applications
 4.1. 4.1 Running within the GUI application
 4.2. 4.2 Running as a batch job on Carbon
5. 5 Configuring license access when not running on Carbon directly
 5.1. 5.1 When inside CNM or using VPN as a CNM staff member or postdoc
  5.1.1. 5.1.1 Check license access configuration
  5.1.2. 5.1.2 Note on Web blocking
 5.2. 5.2 When outside CNM
 5.3. 5.3 File-based license configuration (advanced)
  5.3.1. 5.3.1 When inside CNM
  5.3.2. 5.3.2 When outside CNM
6. 6 Running compute jobs within fdtd-engine (FDTD)
 6.1. 6.1 Memory issues
7. 7 Running Optimization Jobs
 7.1. 7.1 Resource Configuration
 7.2. 7.2 Testing the Configuration
 7.3. 7.3 Running the optimization


|-------------------------------------- ## Introduction

Lumerical consists of several applications, the most popular being FDTD Solutions to perform photonics modeling. Others are Multiphysics (formerly DEVICE), MODE, and INTERCONNECT.

The applications typically have two primary components.

• A design application (GUI). These are licensed by user.
• A solver, or engine, licensed by compute job.

Lumerical was originally produced by Lumerical, Inc., which has been acquired by Ansys in 2020.
Ansys introduced major changes to the Lumerical licensing engine and terms,
notably limiting user eligibility and reducing concurrent capabilities of solvers.


|-------------------------------------- ### Access

Access to Lumerical is limited to Argonne staff who are CNM users, and to CNM staff.

To request access, submit a support request (https://wiki.anl.gov/cdn-cgi/l/email-protection).


|-------------------------------------- ## Manual and Knowledge Base

https://kb.lumerical.com/


|-------------------------------------- ## Ways to run Lumerical GUI applications

The Lumerical applications, both GUI and compute engines, can be run on any desktop or laptop computer, and on our HPC cluster, Carbon.
In every situation, the application requires network access to a Lumerical license service running on Carbon.

For the GUI applications, there are three ways to run:

1. Run on your desktop or laptop directly and use license port forwarding. For versions 2021 and later, this is possible on Linux or Windows only, because ANSYS decided to no longer offer macOS packages.
2. Run on Carbon and display on your machine over X11 forwarding (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS)
3. Run on Carbon in a VNC virtual desktop (https://wiki.anl.gov/cnm/HPC/Network_Access/Virtual_Desktop) and display that desktop on your machine.

Here are considerations to help you choose:


|-------------------------------------- ### None

Run any Lumerical application directly, or natively on your Windows or Linux machine; Macs are not supported from 2021 on.
The application needs to be installed on your machine and be configured to obtain the Lumerical license over the network from Carbon.

• Advantage: Native graphics speed.
• Caveat: When running outside of CNM (which is possible), you will need an active network connection to NST.

To get started:

• You will need to have the Lumerical software installed on your desktop or laptop.
 • For an Argonne-owned machine, submit an IT support request (https://wiki.anl.gov/cdn-cgi/l/email-protection) to have the software installed.
 • For your own machine, you must have Lumerical binaries installed yourself, either through your home institution or by stepping up from a trial version.
• In the application, configure license access as shown below.


|-------------------------------------- ### None

Run a Lumerical GUI application on a Carbon login node, and have its windows appear on your screen using the X Window system

  fdtd-solutions &

• Requires an X11 server application on your desktop machine.
• Requires X11 forwarding under SSH.
• Advantage: Runs with its own windows, has basic Copy&Paste support.
• Disadvantage: May run sluggish.


|-------------------------------------- ### None

Run a Lumerical GUI application on Carbon in a VNC virtual desktop (https://wiki.anl.gov/cnm/HPC/Network_Access/Virtual_Desktop), and view this virtual desktop on your machine.

• Requires a VNC client on your side.
• Advantage: uses compression and hence can be faster than X11.
• Disadvantage: Limited desktop environment, Copy&Paste support depends on VNC viewer client.


|-------------------------------------- ## Ways to run Lumerical compute engine applications

For the compute engine, there are two distinct ways to run:


|-------------------------------------- ### Running within the GUI application

Select this means when you expect the compute task to complete relatively quickly – say, up to an hour or so, or however long you can tolerate to dedicate CPU on your machine.

1. Push the "Run" button in the GUI.
2. Wait for the result.
3. Analyze results in the GUI.


|-------------------------------------- ### None

Select this means when the compute task runs for a longer time, or you have many compute tasks, in particular when you run a "parameter sweep". Running a sweep on Carbon allows you to process the grid points of your parameter mesh in parallel over the CPUs on one compute node or even on several compute nodes.

To run a batch job:

1. Design and your model in the GUI.
2. Place "monitors" as you need.
3. For a parameter sweep: define your parameter grid, i.e., the variables, search intervals, and number of variable steps.
4. Save the model as *.fsp file.
5. Transfer the file to Carbon (if you did the above steps on your machine).
6. Copy and adapt one of the Carbon Lumerical job templates for your model.
7. Submit the job.
8. Await job completion, either by inspection, or by receiving a job completion mail.
9. Transfer any updated *.fsp files back from Carbon to your machine, if so desired, for analysis there.


|-------------------------------------- ## Configuring license access when not running on Carbon directly

To use the #Native Lumerical applications on your computer, as opposed to running on Carbon over a graphical connection, the following conditions must be met:

• Your computer must be able to reach the Carbon license server, at least while you run any of the Lumerical applications.
• Your Lumerical suite must be configured to use those license servers.

The specific configuration steps depend on the network location of your computer, as follows:


|-------------------------------------- ### When inside CNM or using VPN as a CNM staff member or postdoc

Reminder: Licensing for all Lumerical applications running on Carbon itself (i.e., as started on a login node or by a batch job) are pre-configured, so none of the following applies there.

On your desktop or laptop, do the following:

  <image 350px-HPC_2019-04-12_Carbon_reachability.png: HPC 2019-04-12 Carbon reachability.png>

1. Verify that your computer is connected inside of CNM's network, by one of the following:

A connection over the Argonne-guest WiFi network or over VPN as a user of another division will not suffice.
 1.1. a wired connection in a CNM building (440, 441), or
 1.2. over Argonne-auth WiFi in the same building, or
 1.3. over Argonne VPN, established as a CNM staff user.
2. In a web browser open the following URL exactly as shown, i.e., having a bare hostname without dots:

Example for mac OS 
Open your computer's "Network" configuration settings.
Select the "VPN" configuration profile.
If needed, unlock the panel to make changes. You may need to have administrator privileges to do so. Request assistance if needed.
push the "Advanced…" button.
Locate the tab or section for DNS configuration.
Add cnm.anl.gov as a DNS Search Domain and apply the settings.
Retry the link above.
Explanation: There are two reasons for the steps above:
 (https://wiki.anl.gov/cnm/File:HPC_2020-11-05_mac_VPN_DNS.png)
 2.1. http://carbonmgmt/
 2.2. If you get a status page mentioning "Carbon", your configuration is OK. Proceed to step 2.
 2.3. Otherwise, you will see an error message similar to "server cannot be found". Proceed as follows:
 2.4. Open your computer's "Network" configuration settings.
 2.5. Select the "VPN" configuration profile.
 2.6. If needed, unlock the panel to make changes. You may need to have administrator privileges to do so. Request assistance if needed.
 2.7. push the "Advanced…" button.
 2.8. Locate the tab or section for DNS configuration.
 2.9. Add cnm.anl.gov as a DNS Search Domain and apply the settings.
 2.10. Retry the link above.
 2.11. Accommodate both nst.anl.gov and cnm.anl.gov as domain names. Carbon-based license services use only the latter.
 2.12. Accommodate license access from both inside and outside of the Carbon cluster.
3. Start the License Configure or simply the main FDTD Solutions application on your machine.
 3.1. Note: You may see a window with title "Getting Started" containing a notice titled "Blocked by Outdated Software" from Argonne's Cyber Security Program Office. You may safely close the window. The notice appears because the window is a web page that is rendered by an often older browser engine compiled-in to FDTD.
4. If you started FDTD Solutions, locate the Configure License menu item, either in the application or Help menu.
5. Choose the tab "Floating" in the Configure License window.
 5.1. Activate the checkbox: Configure redundant servers.
 5.2. Set the Server entries to clicense1, clicense2, and clicense3, exactly as shown, without a domain name part.
6. If you used the License Configure app, close it, and start the main FDTD Solutions application.
7. In FDTD, choose About FDTD Solutions.

• a wired connection in a CNM building (440, 441), or
 • over Argonne-auth WiFi in the same building, or
 • over Argonne VPN, established as a CNM staff user.

  <image 350px-HPC_2020-11-05_mac_VPN_DNS.png: HPC 2020-11-05 mac VPN DNS.png>

0.1. Open your computer's "Network" configuration settings.
 0.2. Select the "VPN" configuration profile.
 0.3. If needed, unlock the panel to make changes. You may need to have administrator privileges to do so. Request assistance if needed.
 0.4. push the "Advanced…" button.
 0.5. Locate the tab or section for DNS configuration.
 0.6. Add cnm.anl.gov as a DNS Search Domain and apply the settings.
 0.7. Retry the link above.


|-------------------------------------- #### Check license access configuration

License settings change across releases. For reference on recent versions, see the panels below.

• License config 2022


 (https://wiki.anl.gov/cnm/File:HPC_2022-08-23_Lumerical_ANSYS_setup_inside.png)
• License config 2023


 (https://wiki.anl.gov/cnm/File:HPC_2023-08-22_Lumerical_License_config_2023_R2.png)

  <image 120px-HPC_2022-08-23_Lumerical_ANSYS_setup_inside.png: License config 2022>

License config 2022

  <image 120px-HPC_2023-08-22_Lumerical_License_config_2023_R2.png: License config 2023>

License config 2023


|-------------------------------------- #### Note on Web blocking

  <image 350px-HPC_2019-04-12_Argonne_Network_Blocking_in_FDTD.png: HPC 2019-04-12 Argonne Network Blocking in FDTD.png>

For the About Lumerical menu item, instead of proper license information, an Argonne network blocking page may appear when using an older (or even not-so old) version of FDTD.
This is due to Lumerical using a built-in web browser engine that may be considered outdated by Argonne's network security configuration.


|-------------------------------------- ### When outside CNM

1. Close any connection to Carbon's login nodes, and Mega.
2. Revisit the port forwarding configuration for your your SSH client (one-time only).

• Mac and Linux users: Add to  ~/.ssh/config (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS), in the section for mega:

  Host mega
  	…
  	# ANSYS-LM at former Lumerical-LM
  	LocalForward	1055	clicense1:1055
  	LocalForward	27011	clicense1:27011

• Windows users: See HPC/Network Access/PuTTY Configuration/Accessing Carbon licenses remotely (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/Accessing_Carbon_licenses_remotely)

1. Re-open the connection to Mega.
2. Install or upgrade the Lumerical application
3. Open Lumerical as usual.
4. Select the "Licenses" menu item.
5. Open the "Floating" tab.
Enter the host IP address as follows:

Note: Do not use "localhost" - this is ambiguous when IPv6 is in play.
 (https://wiki.anl.gov/cnm/File:HPC_2013-07-24_Lumerical_FlexNet_client_setup.png)
6. Push "Apply".
7. Start Lumerical.: To inspect the license setting, choose About Lumerical from the application menu.

  <image 350px-HPC_2013-07-24_Lumerical_FlexNet_client_setup.png: HPC 2013-07-24 Lumerical FlexNet client setup.png>


|-------------------------------------- ### None

• The license path all Lumerical application is stored in one of the following files:

  <USER_HOME_DIR>/.config/Lumerical/License.ini
  <LUMERICAL_INSTALL_DIR>/Lumerical/License.ini

• You may edit the files manually in a text editor while the respective application is not running. (Otherwise your edits will be overwritten when the application closes and saves state.)
• The file contents are as follows:


|-------------------------------------- #### When inside CNM

  [license]
  ansysserver\host=1055@clicense1:1055@clicense2:1055@clicense3
  default=user
  domain=2


|-------------------------------------- #### When outside CNM

  [license]
  ansysserver\host=1055@localhost
  default=user
  domain=2

• To use, set up SSH tunneling for ports 1055 and 27011 (both are needed, as of 2023).




|-------------------------------------- ## None

To run a presumably parallel job, construct your model and task within the fdtd-solutions application and save it as an .fsp file.
Then copy and customize the following job template, entering your account and file names:

  $LUMERICAL_HOME/sample.job

Note: fdtd-engine does not support checkpointing. Select your #PBS -l walltime parameter generously.


|-------------------------------------- ### Memory issues

When running an fdtd-engine compute job in parallel, during the final stage (Data Collection) the memory use of the MPI master process could dramatically increase.
For example, during the calculation ("cruising") stage each MPI process may be happy with using 2-4 GB, but in the collection stage, the master process (MPI rank 0) may require 10 times as much and more.
The other MPI processes evidently remain idle but running during the collection stage, and continue to hold on to their memory, which could amount to a valuable 10–15 GB, say.
The increased memory demand may cause the node to go into swap, even for Carbon's "bigmem" nodes which have 48 GB RAM each.
Swap use will be detected and at first tolerated by TORQUE (PBS), but after a few minutes TORQUE will kill the job.
In that case, the following error will appear in the standard error stream:

  =>> PBS: job killed: swap rate due to memory oversubscription is too high
  mpirun: abort is already in progress...hit ctrl-c again to forcibly terminate

  mpirun: killing job...

The standard output stream may reach 99% or 100%, then stop:

  0% complete. Max time remaining: 16 mins, 4 secs. Auto Shutoff: 1
  1% complete. Max time remaining: 15 mins, 4 secs. Auto Shutoff: 1
  …
  98% complete. Max time remaining: 20 secs. Auto Shutoff: 6.21184e-05
  99% complete. Max time remaining: 9 secs. Auto Shutoff: 5.5162e-05
  100% complete. Max time remaining: 0 secs. Auto Shutoff: 4.51006e-05

• Try to collect less data.

Chris K. from Lumerical Support wrote:
For example, all field monitors allow you to choose which E/H/P fields to collect. If you only care about power transmission through a monitor, you can disable all the E/H/P fields and just collect the 'net power'. You can also control the number of frequency points, and you can enable spatial downsampling, and obviously just make the monitors smaller.

• Have the master process run on a node of its own, as shown at HPC/Submitting and Managing Jobs/Advanced node selection#Different PPN by node (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection). You will trade away compute capacity for memory. Caveat: Try to keep the total number of cores highly divisible. Example:
 • A typical request for 64 cores:

  #PBS -l nodes=8:ppn=8

• 
 • Improved request:

  #PBS -l nodes=1:ppn=1:bigmem+1:ppn=7+7:ppn=8
  #PBS -l naccesspolicy=SINGLEJOB -n

Note that the + sign is a field delimiter in the "nodes" specification.
This specification requests the same number of cores total, but split up the load of the original first node over two nodes, one with a single core, and the second with the remaining 7 cores, followed by as many 8-core nodes as needed.

  nodes = ( 1:ppn=1 ) + ( 1:ppn=7 ) + ( 7:ppn=8 ) = 1 + 7 + 7 * 8 = 64 cores.

Rank 0 will have the entire RAM on the first node available, and is the only rank to likely need "bigmem". The other ranks are modest in memory needs and unlikely to face contention.
Usually, Moab will ensure that all ranks run on the same node generation, in this case gen2 (see HPC/Submitting and Managing Jobs/Advanced node selection#Hardware (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection)).


|-------------------------------------- ## Running Optimization Jobs

• Prepare your optimization project as needed, save it as *.fsp file, and if needed copy it onto Carbon.
• Open fdtd-solutions on Carbon.


|-------------------------------------- ### Resource Configuration

1. Click Configure resources under the Simulation menu entry.
2. Remove all but the "localhost" entry.
 (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_1.png)
3. Push Add.
4. Double-click the Name column of the new resource entry, enter "Carbon", and press enter.
 (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_2.png)
5. Push Edit.
6. Enter the advanced options as shown:
 (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_3.png)

  <image HPC_2014-04-28_Lumerical_optimizations_1.png: HPC 2014-04-28 Lumerical optimizations 1.png>

  <image HPC_2014-04-28_Lumerical_optimizations_2.png: HPC 2014-04-28 Lumerical optimizations 2.png>

  <image HPC_2014-04-28_Lumerical_optimizations_3.png: HPC 2014-04-28 Lumerical optimizations 3.png>

  Job launching:				Custom

  	mpiexec engine:				/opt/apps/lumerical/8.16.931-1/bin/mpiexec-as-job
  						(Copy the directory components from the "FDTF engine" setting below).

  	Extra mpiexec command line options:	-l nodes=1:ppn=8 -l walltime=2:00:00 --
  	Suppress any default mpiexec options:	yes
  	Bypass mpi on localhost:		no

  	FDTD engine:				(leave default)
  	Extra FDTD … options:			(leave empty)
  	Create log for all processes:		no

• Push OK. The window will close.


|-------------------------------------- ### Testing the Configuration

• In the toplevel Resource Configuration window you may want to push "Run tests". This may work and you get "MPICH tests completed successfully". Likely, this will turn into "Timeout" shortly afterwards.

 (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_4.png)
• Duplicate the "Carbon" resource about 5-8 times.
• Push Save.

  <image HPC_2014-04-28_Lumerical_optimizations_4.png: HPC 2014-04-28 Lumerical optimizations 4.png>

  <image HPC_2014-04-28_Lumerical_optimizations_5.png: HPC 2014-04-28 Lumerical optimizations 5.png>

You are ready to run the optimization.


|-------------------------------------- ### Running the optimization

• You'll get windows like the following. There will be several volleys, each producing a "swarm" point in the figure-of-merit trend plot.
 (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_6.png)

  <image HPC_2014-04-28_Lumerical_optimizations_6.png: HPC 2014-04-28 Lumerical optimizations 6.png>

  <image HPC_2014-04-28_Lumerical_optimizations_7.png: HPC 2014-04-28 Lumerical optimizations 7.png>

  <image HPC_2014-04-28_Lumerical_optimizations_8.png: HPC 2014-04-28 Lumerical optimizations 8.png>

• You may go back and edit the Advanced options of a resource, but you must remove all other previously cloned entries, and re-clone the newly edited resource.
• When you choose to provide qsub options under "Extra mpiexec command line options", such as to allow for a walltime longer than the default 1 hour, ensure to append "--".


|------------------------------------- ## Contents

1. 1 Overview
2. 2 Begin adding forwarded ports
 2.1. 2.1 For connections using Mega
 2.2. 2.2 For connections using VPN
3. 3 Example: Add forwarded ports for VNL
4. 4 Example: Add forwarded ports for COMSOL
5. 5 Finish adding forwarded ports
 5.1. 5.1 For connections using Mega
 5.2. 5.2 For connections using VPN


|------------------------------------- ## Overview

Carbon hosts floating network licenses for several applications.
The applications are intended to be run on the compute nodes for compute jobs, or interactively on login nodes for purposes of pre-run preparations or post-run analysis and visualization.
The latter will require the use of remote graphics which can be impracticably slow.
It may be possible to run the application natively on your machine, foregoing the need to push graphics data over the network.
If the application requires a license and you do not have one yourself, you need to configure the application on your machine to access Carbon's license servers.
The concept you will use is called port forwarding, also known as tunneling.
It makes a port (http://en.wikipedia.org/wiki/Port_(computer_networking)) on your machine act like a port on one of Carbon's hosts.

The configuration settings to forward one or more ports will be stored in a PuTTY session that is normally used to connect to a Carbon login node.
There are two alternative routes to reach a login node:

• Use Mega intermediate host - applicable for most users.
• Use VPN to connect directly to a login node – available to Argonne employees only.

The port configurations are largely the same, except for the PuTTY session they will be applied to.

The table on the right lists port numbers for your system and the matching host:port destinations on Carbon.

1. Tunnel configurations for several applications can coexist as long as Source Port numbers do not overlap.
2. Keep the default options Local, Auto for all forwarded ports.
3. Important: Most applications need to be explicitly configured to use a forwarded port.
 3.1. Configure such an application to use localhost as the license server, and the Source Port shown in the table.
 3.2. Repeat if there is more than one entry.
 3.3. Find links to application-specific instructions in the table.


|------------------------------------- ## Begin adding forwarded ports


|------------------------------------- ### For connections using Mega

1. In the main PuTTY Configuration window, click Session at the top of the tree on the left.
2. Select the Clogin session and push Load.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_11_load_clogin.png)
3. Verify that "localhost" appeared in the Host Name field above. Go back to step 1 if it does not.
4. Click "+" in front of SSH in the tree.
5. Click Tunnels.
6. If your session has existing forwarded ports and you wish to start over:

 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_5_tunnels_remove.png)
 6.1. Select each existing entry in the "Forwarded ports:" field and push Remove.
 6.2. No forwarded ports should remain at this point.

  <image HPC_2012-08_PuTTY_config_11_load_clogin.png: HPC 2012-08 PuTTY config 11 load clogin.png>

  <image HPC_2012-08_PuTTY_config_12_loaded_clogin.png: HPC 2012-08 PuTTY config 12 loaded clogin.png>

  <image HPC_2012-08_PuTTY_config_5_tunnels_remove.png: HPC 2012-08 PuTTY config 5 tunnels remove.png>

  <image HPC_2012-08_PuTTY_config_6_tunnels_clean.png: HPC 2012-08 PuTTY config 6 tunnels clean.png>


|------------------------------------- ### For connections using VPN

1. In the main PuTTY Configuration window, click Session at the top of the tree on the left.
2. Select the Clogin session and push Load. We will clone this session to connect directly.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_13_loaded_clogin.png)
3. Alter the Host Name and Port fields to say "clogin.cnm.anl.gov" and 22.
4. Enter "Clogin direct" in the Saved Sessions field.
5. Push Save.

  <image HPC_2012-08_PuTTY_config_13_loaded_clogin.png: HPC 2012-08 PuTTY config 13 loaded clogin.png>

Proceed at step 4 in the previous section.


|------------------------------------- ## Example: Add forwarded ports for VNL

1. Under Add new forwarded port, enter:

 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_8_VNL_enter.png)
 1.1. Source port: 6200
 1.2. Destination: mgmt03:6200
 1.3. Push Add.
2. Repeat with the following settings:

L6200  mgmt03:6200
L6201  mgmt04:6200
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_9_VNL_done.png)
 2.1. Source port: 6201 (not 6200!)
 2.2. Destination: mgmt04:6200
 2.3. Push Add.
 2.4. You should now see these two entries:

  <image HPC_2012-08_PuTTY_config_8_VNL_enter.png: HPC 2012-08 PuTTY config 8 VNL enter.png>

  <image HPC_2012-08_PuTTY_config_9_VNL_done.png: HPC 2012-08 PuTTY config 9 VNL done.png>


|------------------------------------- ## Example: Add forwarded ports for COMSOL

Proceed similar to the VNL example above, but create 4 entries with the following port numbers:

You can configure forwarding for both VNL and COMSOL at the same time since all their port numbers differ.


|------------------------------------- ## Finish adding forwarded ports


|------------------------------------- ### For connections using Mega

1. Scroll to the top of the tree and click Session.
2. Verify that "Clogin" shows in the Saved Sessions field. Otherwise, retrace your steps from section #Begin adding forwarded ports.
3. Push Save.
4. To use the forwarded ports,  open a new "Clogin" session (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/Connecting_to_a_Carbon_login_node). You do not need to terminate an existing connection to the mega SSH gateway.


|-------------------------------------- # HPC/Network Access/PuTTY Configuration/Connecting to a Carbon login node

1. Open a new PuTTY window.
2. Select the session named Clogin and push Load. This session auto-selects a login node. To connect to a specific node instead, select the session named Clogin5 or Clogin6. This will be needed to run host-restricted licensed software (MATLAB) or reconnect to a VNC session (https://wiki.anl.gov/cnm/HPC/Network_Access/Virtual_Desktop).
3. Make sure the Host Name field shows localhost.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_14_Load_clogin.png)
4. Push Open.
5. When prompted, enter your Argonne account password. When accepted, you should get our NOTICE TO USERS and a prompt saying login5 or login6 followed by /home/username.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_16_clogin_prompt.png)
6. Welcome to Carbon! Repeat these steps as often as you need a terminal window.

  <image HPC_2012-08_PuTTY_config_14_Load_clogin.png: HPC 2012-08 PuTTY config 14 Load clogin.png>

  <image HPC_2012-08_PuTTY_config_15_Open_clogin.png: HPC 2012-08 PuTTY config 15 Open clogin.png>

  <image HPC_2012-08_PuTTY_config_16_clogin_prompt.png: HPC 2012-08 PuTTY config 16 clogin prompt.png>

  <image HPC_2012-08_PuTTY_config_17_clogin_OK.png: HPC 2012-08 PuTTY config 17 clogin OK.png>


|-------------------------------------- ## Shortcuts

Once you have one PuTTY window open, it is easy to open another one. Choose one of the following:

• Double-click a session name in the PuTTY configuration window.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_shortcuts_1.png)
• Click on the PuTTY icon in the top left of an existing window, and select from "Saved Sessions".
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_shortcuts_2.png)
• Right-click on the PuTTY icon in the taskbar and select from Recent Sessions.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_shortcuts_3.png)

  <image HPC_2012-08_PuTTY_shortcuts_1.png: HPC 2012-08 PuTTY shortcuts 1.png>

  <image HPC_2012-08_PuTTY_shortcuts_2.png: HPC 2012-08 PuTTY shortcuts 2.png>

  <image HPC_2012-08_PuTTY_shortcuts_3.png: HPC 2012-08 PuTTY shortcuts 3.png>


|------------------------------------- ### For connections using VPN

1. Scroll to the top of the tree and click Session.
2. Verify that "Clogin direct" shows in the Saved Sessions field.
3. Push Save.
4. To use the forwarded ports, push Open.


|------------------------------------ ## Connecting

To connect to Carbon for interactive work, or to access its networked licenses, perform a preparatory step, needed only once for a given Windows login session.

• Connecting to the SSH Gateway (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/Connecting_to_the_SSH_Gateway)


|------------------------------------- # HPC/Network Access/PuTTY Configuration/Connecting to the SSH Gateway

1. In the PuTTY Configuration window, click Session at the top of the tree on the left.
2. Select the session named Mega and push Load.
3. Make sure the Host Name field shows mega.cnm.anl.gov. If it does not, repeat the previous step, or go back to the  configurations pages (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/The_SSH_Gateway).
4. Push Open.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_11_Load_mega.png)
5. When prompted, enter your Argonne account password. You have several attempts to get it right. After too many attempts, your account will be temporarily locked.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_13_mega_prompt.png)
6. If you configured the Mega session (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/The_SSH_Gateway) with "Don't start a shell or command at all" being checked, then after your password was accepted the cursor will wait at the next line and nothing further will happen in this window until the connection is terminated by you or the target machine. Otherwise, you will get a command prompt from mega. You need not and should not type any commands there.
7. Minimize the window to the taskbar (as opposed to closing it).

  <image HPC_2012-08_PuTTY_config_11_Load_mega.png: HPC 2012-08 PuTTY config 11 Load mega.png>

  <image HPC_2012-08_PuTTY_config_12_Open_mega.png: HPC 2012-08 PuTTY config 12 Open mega.png>

  <image HPC_2012-08_PuTTY_config_13_mega_prompt.png: HPC 2012-08 PuTTY config 13 mega prompt.png>

  <image HPC_2012-08_PuTTY_config_14_mega_re-prompt.png: HPC 2012-08 PuTTY config 14 mega re-prompt.png>

From then on, and while the preparatory window remains active, connect as often as desired.

• Connecting to a Carbon login node (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/Connecting_to_a_Carbon_login_node)


|------------------------------------ ## File Transfers using PSFTP

1. Configure your PuTTY installation as shown above.
2. Connect to the SSH Gateway, as shown in the preceeding section.
3. Open the psftp application.
Use clogin (your configured PuTTY saved session name) as host to connect to.

To learn more, see the PSFTP documentation (https://the.earth.li/~sgtatham/putty/0.71/htmldoc/Chapter5.html#pscp).


|------------------------------------ ## Support

If you have difficulties connecting:

1. Stop all open PuTTY sessions.
2. Review the PuTTY configuration for both the SSH Gateway profile and the Carbon Login profile, as shown in section #Configuring above.
 2.1. Make sure that tunneled port numbers match between the two profiles.
3. Carefully follow the steps at #Connecting . Remember:
 3.1. You need one preparatory connection to the SSH gateway running, then you can open one or more terminal or file transfer connections.
 3.2. For the connection framework described here, open all SSH connections from your own machine, never from Mega.

If you still have difficulties,  submit a support request (https://wiki.anl.gov/cnm/HPC/Support) with Remote Acces chosen from the drop-down menu Type of Request or Issue.

• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|------------------------------------ # HPC/Network Access/WinSCP Configuration

WinSCP (http://winscp.net/eng/) is an open source client for secure file transfers on Windows.
In addition, WinSCP can use PuTTY (http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) when installed to open a command line session on a remote computer.
For basic use, sharing WinSCP settings with PuTTY (http://winscp.net/eng/docs/integration_app) is actually simpler than configuring and using port forwarding in PuTTY itself.


|------------------------------------ ## Contents

• 1 Configuring
• 2 Connecting
 • 2.1 File transfer
 • 2.2 Auxiliary terminal access


|------------------------------------ ## Configuring

The following steps need to be performed once for each workstation you wish to use to access Carbon.

1. Open WinSCP. The WinSCP Configuration window will appear.

Configuration panels will appear in the main part of the window on the right-hand side. The panels are organized in a tree shown in the left-hand side of the window. Each panel can be reached by clicking on the leaf names of the tree. (https://wiki.anl.gov/cnm/File:HPC_2012-10_WinSCP_config_1_new.png)
2. Click Advanced options beneath the tree.
3. Click Tunnel under the newly shown Connection branch of the tree.
4. Click Connect through SSH tunnel at the top of the panel.
5. Enter mega.cnm.anl.gov as Host name and your Argonne username and password in the fields on the right. Leave other options as is.
 (https://wiki.anl.gov/cnm/File:HPC_2012-10_WinSCP_config_2_mega.png)
6. Click Session at the top of the tree.
7. Enter clogin as Host name and your Argonne username and password in the fields on the right. Leave other options as is.

 (https://wiki.anl.gov/cnm/File:HPC_2012-10_WinSCP_config_3_clogin.png)
 7.1. Push Save… and name this session "Clogin".

  <image 350px-HPC_2012-10_WinSCP_config_1_new.png: HPC 2012-10 WinSCP config 1 new.png>

  <image 350px-HPC_2012-10_WinSCP_config_2_mega.png: HPC 2012-10 WinSCP config 2 mega.png>

  <image 350px-HPC_2012-10_WinSCP_config_3_clogin.png: HPC 2012-10 WinSCP config 3 clogin.png>


|------------------------------------ ## Connecting


|------------------------------------ ### File transfer

1. From the WinSCP Configuration window, select the session named Clogin and push Login.
2. A small progress window appears. The first time, you will be asked to confirm and store two server host keys, the first for mega, the second for clogin. Compare the key fingerprints and push Yes if they match.
  (https://wiki.anl.gov/cnm/File:HPC_2012-10_WinSCP_connect_10_mega.png)
3. When prompted, enter your Argonne account password. You have several attempts to get it right. After too many attempts, your account will be temporarily locked.
4. Use the main WinSCP interface to transfer files in either direction.

  <image 450px-HPC_2012-10_WinSCP_connect_10_mega.png: HPC 2012-10 WinSCP connect 10 mega.png>

  <image 450px-HPC_2012-10_WinSCP_connect_11_clogin.png: HPC 2012-10 WinSCP connect 11 clogin.png>


|------------------------------------ ### Auxiliary terminal access

If you have PuTTY installed in addition to WinSCP, once you have opened a WinSCP connection you can open one or more interactive (command line) sessions without further configuration.

1. Select Open in PuTTY from the WinSCP Commands menu or click the PuTTY icon in the WinSCP tool bar.
 (https://wiki.anl.gov/cnm/File:HPC_2012-10_WinSCP_config_12_PuTTY_integration.png)

  <image 600px-HPC_2012-10_WinSCP_config_12_PuTTY_integration.png: HPC 2012-10 WinSCP config 12 PuTTY integration.png>


|----------------------------------- ### SSH GUI Applications

• Mac OS X (https://wiki.anl.gov/cnm/HPC/Network_Access/Mac_OS_X_Applications_for_SSH)
• Windows (https://wiki.anl.gov/cnm/HPC/Network_Access/Windows_Applications_for_SSH)
• Virtual Desktop (https://wiki.anl.gov/cnm/HPC/Network_Access/Virtual_Desktop) (VNC)


|------------------------------------ # HPC/Network Access/Mac OS X Applications for SSH

> Related:  Windows applications (https://wiki.anl.gov/cnm/HPC/Network_Access/Windows_Applications_for_SSH)


|------------------------------------- # HPC/Network Access/Windows Applications for SSH

> Related:  Mac OS applications (https://wiki.anl.gov/cnm/HPC/Network_Access/MacOS_GUI_Applications_for_SSH)


|-------------------------------------- # HPC/Network Access/Mac OS X Applications for SSH

> Related:  Windows applications (https://wiki.anl.gov/cnm/HPC/Network_Access/Windows_Applications_for_SSH)

Various applications are available on the Mac platform for terminal access and file transfer.


|-------------------------------------- ## Contents

1. 1 Terminal Access
 1.1. 1.1 Terminal (app)
 1.2. 1.2 XTerm
2. 2 File transfer
 2.1. 2.1 ExpanDrive
 2.2. 2.2 MacFUSE
 2.3. 2.3 sshfs
 2.4. 2.4 MacFusion
 2.5. 2.5 CyberDuck
 2.6. 2.6 Unison


|-------------------------------------- ## Terminal Access

Mac OS X comes with two builtin solutions for terminal access which serve most user's needs.


|-------------------------------------- ### None

  <image HPC_-_MacOS_Terminal_icon.png: HPC - MacOS Terminal icon.png>

• Recommended
• located in the /Applications/Utility folder (in the Finder, open it with Shift-Cmd-U. Tip: drag the Terminal icon to the Dock)
• allows multiple tabs per window (http://lifehacker.com/software/mac-os-x-leopard/leopards-revamped-terminal-sports-tabs-and-more-316599.php)




|-------------------------------------- ### XTerm

  <image HPC_-_MacOS_xterm_icon.png: HPC - MacOS xterm icon.png>

• Part of the optional X11 package shipping with Mac OS X, or its XQuartz (http://xquartz.macosforge.org/trac/wiki) replacement
• Discouraged (Terminal.app provides better integration)




|-------------------------------------- ## File transfer

  <image 400px-HPC_-_File_Transfer_methods.png: HPC - File Transfer methods.png>

The examples below indicate how to connect using ssh tunneling. This typically means that instead of a real remote host name and the standard ssh port (22), the host name will be localhost and the port will be the one selected during
tunnel setup (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS). Some applications do not offer the opportunity to enter port numbers, but they use the standard ssh mechanism under the hood. This is actually a good thing, as they can make full use of customizations in .ssh/config, in particular host aliases. In the example, "clogin" is such an alias, referring to localhost on port 33301.


|-------------------------------------- ### ExpanDrive

  <image 75px-HPC_-_ExpanDrive_icon.png: HPC - ExpanDrive icon.png>

• Commercial app (approx. $40), very nice Finder integration
• See also ExpanDrive for Windows (http://www.expandrive.com/windows)

(https://wiki.anl.gov/cnm/File:HPC_-_ExpandDrive_Manager.png)
 (https://wiki.anl.gov/cnm/File:HPC_-_ExpandDrive_MenuItem.png)

  <image HPC_-_ExpandDrive_Manager.png: HPC - ExpandDrive Manager.png>

  <image HPC_-_ExpandDrive_MenuItem.png: HPC - ExpandDrive MenuItem.png>

• Requires MacFUSE.
• Supports public keys
• Review (http://macresearch.org/expandrive-brings-sftp-and-ssh-finder) via MacResearch (http://macresearch.org/)


|-------------------------------------- ### MacFUSE

  <image HPC_-_MacFUSE_icon.png: HPC - MacFUSE icon.png>

• Base package for ssh file sharing – you'll need this for the next two apps.
• Requires admin privileges to install.




|-------------------------------------- ### sshfs

  <image HPC_-_sshfs_icon.png: HPC - sshfs icon.png>

1. Straightforward Finder integration – makes remote files available as network share.
2. Recommended for most situations.
3. Requires MacFUSE.
4. To connect through a tunnel, simply use your host alias as defined in the .ssh/config file.
5. To disconnect, right-click or control-click, and select "Eject". This is required before sending a laptop to sleep.
6. Minor drawback: does not recognize public keys – you'll have to type your domain password upon connecting.
7. Endorsement: LifeHacker (http://lifehacker.com/software/ssh/geek-to-live--mount-a-file-system-on-your-mac-over-ssh-246129.php)

(https://wiki.anl.gov/cnm/File:HPC_-_sshfs_connect.png)

  <image HPC_-_sshfs_connect.png: HPC - sshfs connect.png>


|-------------------------------------- ### MacFusion

  <image HPC_-_MacFusion_icon.png: HPC - MacFusion icon.png>

• More flashy Finder integration, but requires more verbose configuration, including knowledge of your local port [what's the joy in that? – ed.]
• Supports favorites and configurable sleep/wake behavior.
• Requires MacFUSE.

(https://wiki.anl.gov/cnm/File:HPC_-_MacFusion_connect.png)
 (https://wiki.anl.gov/cnm/File:HPC_-_MacFusion_Eject.png)

  <image HPC_-_MacFusion_connect.png: HPC - MacFusion connect.png>

  <image HPC_-_MacFusion_Eject.png: HPC - MacFusion Eject.png>

• Advantage: does recognize public keys
• To unmount, right-click or Control-click and select "Eject".


|-------------------------------------- ### CyberDuck

  <image HPC_-_CyberDuck_icon.png: HPC - CyberDuck icon.png>

  <image 150px-HPC_-_CyberDuck_Action_menu_-_Synchronize.png: >

• More old-school FTP and SFTP browser for Mac OS X [the GUI is overwrought in the wrong places – ed.]
• Supports public keys, but goes its own: doesn't know about ssh-agent or known_hosts
• Doubles as regular ftp client (who's still using that? - ed., also, Leopard's finder can mount ftp:// links)
• Interesting feature: "Synchronize…" (in the Action menu)

  <image 450px-HPC_-_CyberDuck_connect.png: >

  <image 450px-HPC_-_CyberDuck_accept_key.png: >


|-------------------------------------- ### Unison

  <image HPC_-_Unison_icon.png: HPC - Unison icon.png>

• Speaking of synchronization: Unison is available and can use ssh for transport
• Current binaries (http://www.cs.haifa.ac.il/%7Eshuly/unison/) available as third-party.

(https://wiki.anl.gov/cnm/File:HPC_-_Unison_connect.png)

  <image HPC_-_Unison_connect.png: HPC - Unison connect.png>

• HPC (https://wiki.anl.gov/cnm/Category:HPC)

SSH is an open protocol with many implementations. While Mac OS X and Linux come with integrated ssh software, on Windows one of several add-on solutions must be installed. Here is a brief and non-exhaustive list.


|------------------------------------- ## Contents

1. 1 Terminal Access
 1.1. 1.1 PuTTY Suite
 1.2. 1.2 SSH Tectia Client
2. 2 File Transfer
 2.1. 2.1 ExpanDrive
 2.2. 2.2 WinSCP
 2.3. 2.3 Core FTP
3. 3 Other Programs


|------------------------------------- ## Terminal Access


|------------------------------------- ### PuTTY Suite

  <image HPC_-_PuTTY_icons-2.png: HPC - PuTTY icons-2.png>

• Putty (http://www.chiark.greenend.org.uk/~sgtatham/putty/) is a very popular ssh suite, providing all functionalities: key management, a whole terminal emulator, and file transfer.
• See also: Wikipedia entry (http://en.wikipedia.org/wiki/PuTTY)
• Tunnel setup for Carbon (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration)




|------------------------------------- ### SSH Tectia Client

  <image 200px-HPC_-_SSH_Tectia_logo.png: HPC - SSH Tectia logo.png>

SSH Communications Security (http://www.ssh.com/) offers a large suite of ssh-related applications. End users typically use the client part.

• Commercial (approx. $200)
• See http://www.ssh.com/downloads/ for evaluation versions.
• A non-commercial solution (http://www.ssh.com/support/downloads/secureshellwks/non-commercial.html) is no longer maintained. Version 3.2.9 (http://www.colorado.edu/its/docs/authenticate/printouts/win_ssh.html) is available for download from numerous places, but is no longer recommended.




|------------------------------------- ## File Transfer


|------------------------------------- ### ExpanDrive

  <image 250px-Expandrive.png: Expandrive.png>

(formerly known as SftpDrive)

• Commercial app (approx. $40)
• Direct Explorer integration – maps remote directory to a drive letter, allowing direct "Open/Save File" in any application
• See also: ExpanDrive for Mac (http://www.expandrive.com/mac).




|------------------------------------- ### WinSCP

  <image 100px-Winscp.gif: Winscp.gif>

• free, with sftp support
• drag&drop functionality




|------------------------------------- ### Core FTP

  <image Coreftp.png: Coreftp.png>

• free, with sftp support
• drag&drop functionality




|------------------------------------- ## Other Programs

• A Comparison of Free SSH and SCP Programs for Windows (http://www.jfitz.com/tips/ssh_for_windows.html) gives an authoritative overview.
• Another Comparison of SSH clients (http://en.wikipedia.org/wiki/Comparison_of_SSH_clients) is available on Wikipedia (http://en.wikipedia.org/wiki/Main_Page).
• Other options:
 • SecureCRT (http://www.vandyke.com/products/securecrt/) (terminal) and SecureFX (http://www.vandyke.com/products/securefx/) (file transfer)

Disclaimer:
Mention of any particular website or product is for informational purposes only and constitutes neither an endorsement nor a recommendation by Argonne National Laboratory.
Argonne provides this only as a convenience to our users.
Argonne assumes no responsibility with regard to the selection, performance or use of information or products found at such websites.
There are risks inherent in the use of any information or products found on the Internet, and Argonne assumes no responsibility in this regard.
Please contact the vendor for additional information.

• HPC (https://wiki.anl.gov/cnm/Category:HPC)

Various applications are available on the Mac platform for terminal access and file transfer.


|------------------------------------ ## Contents

1. 1 Terminal Access
 1.1. 1.1 Terminal (app)
 1.2. 1.2 XTerm
2. 2 File transfer
 2.1. 2.1 ExpanDrive
 2.2. 2.2 MacFUSE
 2.3. 2.3 sshfs
 2.4. 2.4 MacFusion
 2.5. 2.5 CyberDuck
 2.6. 2.6 Unison


|------------------------------------ ## Terminal Access

Mac OS X comes with two builtin solutions for terminal access which serve most user's needs.


|------------------------------------ ### None

  <image HPC_-_MacOS_Terminal_icon.png: HPC - MacOS Terminal icon.png>

• Recommended
• located in the /Applications/Utility folder (in the Finder, open it with Shift-Cmd-U. Tip: drag the Terminal icon to the Dock)
• allows multiple tabs per window (http://lifehacker.com/software/mac-os-x-leopard/leopards-revamped-terminal-sports-tabs-and-more-316599.php)




|------------------------------------ ### XTerm

  <image HPC_-_MacOS_xterm_icon.png: HPC - MacOS xterm icon.png>

• Part of the optional X11 package shipping with Mac OS X, or its XQuartz (http://xquartz.macosforge.org/trac/wiki) replacement
• Discouraged (Terminal.app provides better integration)




|------------------------------------ ## File transfer

  <image 400px-HPC_-_File_Transfer_methods.png: HPC - File Transfer methods.png>

The examples below indicate how to connect using ssh tunneling. This typically means that instead of a real remote host name and the standard ssh port (22), the host name will be localhost and the port will be the one selected during
tunnel setup (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS). Some applications do not offer the opportunity to enter port numbers, but they use the standard ssh mechanism under the hood. This is actually a good thing, as they can make full use of customizations in .ssh/config, in particular host aliases. In the example, "clogin" is such an alias, referring to localhost on port 33301.


|------------------------------------ ### ExpanDrive

  <image 75px-HPC_-_ExpanDrive_icon.png: HPC - ExpanDrive icon.png>

• Commercial app (approx. $40), very nice Finder integration
• See also ExpanDrive for Windows (http://www.expandrive.com/windows)

(https://wiki.anl.gov/cnm/File:HPC_-_ExpandDrive_Manager.png)
 (https://wiki.anl.gov/cnm/File:HPC_-_ExpandDrive_MenuItem.png)

  <image HPC_-_ExpandDrive_Manager.png: HPC - ExpandDrive Manager.png>

  <image HPC_-_ExpandDrive_MenuItem.png: HPC - ExpandDrive MenuItem.png>

• Requires MacFUSE.
• Supports public keys
• Review (http://macresearch.org/expandrive-brings-sftp-and-ssh-finder) via MacResearch (http://macresearch.org/)


|------------------------------------ ### MacFUSE

  <image HPC_-_MacFUSE_icon.png: HPC - MacFUSE icon.png>

• Base package for ssh file sharing – you'll need this for the next two apps.
• Requires admin privileges to install.




|------------------------------------ ### sshfs

  <image HPC_-_sshfs_icon.png: HPC - sshfs icon.png>

1. Straightforward Finder integration – makes remote files available as network share.
2. Recommended for most situations.
3. Requires MacFUSE.
4. To connect through a tunnel, simply use your host alias as defined in the .ssh/config file.
5. To disconnect, right-click or control-click, and select "Eject". This is required before sending a laptop to sleep.
6. Minor drawback: does not recognize public keys – you'll have to type your domain password upon connecting.
7. Endorsement: LifeHacker (http://lifehacker.com/software/ssh/geek-to-live--mount-a-file-system-on-your-mac-over-ssh-246129.php)

(https://wiki.anl.gov/cnm/File:HPC_-_sshfs_connect.png)

  <image HPC_-_sshfs_connect.png: HPC - sshfs connect.png>


|------------------------------------ ### MacFusion

  <image HPC_-_MacFusion_icon.png: HPC - MacFusion icon.png>

• More flashy Finder integration, but requires more verbose configuration, including knowledge of your local port [what's the joy in that? – ed.]
• Supports favorites and configurable sleep/wake behavior.
• Requires MacFUSE.

(https://wiki.anl.gov/cnm/File:HPC_-_MacFusion_connect.png)
 (https://wiki.anl.gov/cnm/File:HPC_-_MacFusion_Eject.png)

  <image HPC_-_MacFusion_connect.png: HPC - MacFusion connect.png>

  <image HPC_-_MacFusion_Eject.png: HPC - MacFusion Eject.png>

• Advantage: does recognize public keys
• To unmount, right-click or Control-click and select "Eject".


|------------------------------------ ### CyberDuck

  <image HPC_-_CyberDuck_icon.png: HPC - CyberDuck icon.png>

  <image 150px-HPC_-_CyberDuck_Action_menu_-_Synchronize.png: >

• More old-school FTP and SFTP browser for Mac OS X [the GUI is overwrought in the wrong places – ed.]
• Supports public keys, but goes its own: doesn't know about ssh-agent or known_hosts
• Doubles as regular ftp client (who's still using that? - ed., also, Leopard's finder can mount ftp:// links)
• Interesting feature: "Synchronize…" (in the Action menu)

  <image 450px-HPC_-_CyberDuck_connect.png: >

  <image 450px-HPC_-_CyberDuck_accept_key.png: >


|------------------------------------ ### Unison

  <image HPC_-_Unison_icon.png: HPC - Unison icon.png>

• Speaking of synchronization: Unison is available and can use ssh for transport
• Current binaries (http://www.cs.haifa.ac.il/%7Eshuly/unison/) available as third-party.

(https://wiki.anl.gov/cnm/File:HPC_-_Unison_connect.png)

  <image HPC_-_Unison_connect.png: HPC - Unison connect.png>

• HPC (https://wiki.anl.gov/cnm/Category:HPC)

Additional information:

• Slides from a talk Using Carbon - II Remote Access (PDF) (https://wiki.anl.gov/wiki_cnm/images/8/8b/HPC_Using_Carbon_-_II_Remote_Access.pdf)


|----------------------------------- ## Password Policies

The methods described above will grant you,
the holder of your Argonne domain password and private ssh key,
access to your account on Carbon. As with any Argonne computer system, the following rules apply:

• Keep passphrases and passwords private – do not share them with anyone, including administrators that you know or don't know.
• Keep your private key file private - do not share it with anyone.
• Use a strong passphrase following DOE password regulations (http://www.pns.anl.gov/pdfs/internal/password-guide.pdf).

• HPC (https://wiki.anl.gov/cnm/Category:HPC)

See also: directory layout (https://wiki.anl.gov/cnm/HPC/Directories).


|--------------------------------- # HPC/Directories


|--------------------------------- ## Contents

• 1 Overview
• 2 Home directory
• 3 Global scratch space
• 4 Local scratch space
 • 4.1 Use in job files


|--------------------------------- ## Overview

Here is a summary of key directories related to Carbon, and the environment variables used to access them:

Environment variable        Typical value                  Shared across nodes? Purge schedule                Purpose
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
$HOME (same as ~ in shells) /home/joe                      yes                  See CNM data retention policy Your main configuration files and data.
$SANDBOX                    /sandbox/joe                   yes                  6 weeks                       Scratch space for transient job data, not backed up
$TMPDIR (on login nodes)    /tmp                           no                   6 weeks                       General Unix scratch space
$TMPDIR (during jobs)       /tmp/12345.sched1....          no                   at end of job                 Job-specific scratch space, provided empty on job start.
$PBS_O_WORKDIR              (directory where qsub was run) yes                  (same as parent file system)  typically used as cd $PBS_O_WORKDIR  as first line in a job script


|--------------------------------- ## Home directory

  $HOME
  ~  (tilde character)

Your home directory can be referred to in standard Unix fashion, as shown above, by either the environment variable or the tilde sign in most shells (but generally not application programs, especially not those written in Fortran).

• Files are backed up nightly.
• Your total file volume in $HOME is subject to (soft) quota (http://en.wikipedia.org/wiki/Disk_quota) of generally 0.5 TB.
• You may exceed the soft limit by about 10% during a grace period of one week. You will see an over-quota notice upon login.
If your usage remains above the soft limit beyond the grace time, the file system will appear (to you) as being full. To recover, delete files.

Your files in $HOME are subject to CNM's Data Retention Policy (http://www.anl.gov/cnm/user-information/user-access-program#Anchor15),
which specifies that all your files may be deleted from our servers as early as 30 days after your last active proposal has expired.
At that time, your access to Carbon and its SSH gateway will be revoked.


|--------------------------------- ## Global scratch space

  $SANDBOX

This environment variable points to a user-specific directory, shared across nodes like the home-directory.

Use this directory for short-lived files that need to be shared among multiple nodes, can get large, numerous, or change often. To accommodate this, usage policies are stricter than for /home:

• Files are not backed up.
• Hard quota are 3 TB in volume and 2 million in file count.
• Soft quota are 10 GB and 10,000 files.
• The grace period for overflowing a soft limit is 3 weeks.
• Files will be deleted automatically once they are older than 3 months.

These limits are subject to change.

The limits are aimed at keeping the space available for the intended use, typically for files of unusual size (F.O.U.S. (http://tvtropes.org/pmwiki/pmwiki.php/Main/RodentsOfUnusualSize)) or for small files of unusual count.


|--------------------------------- ## Local scratch space

  $TMPDIR

This variable and the directory it refers to is provided by the queueing system for all processes that execute a job.
The directory:

1. resides on local disk on each node,
2. is named the same on each node,
3. is not shared across nodes,
4. is shared for processes on the same node (as many as given in "ppn=…"), in other words, the name is PBS job-specific, but not Unix PID-specific,
5. typically provides about 100 GB of space,
6. will be wiped upon job exit on each node.

The environment variable TMPDIR is not shared across nodes either. Either communicate it internal to your program,
or  have it exported by mpirun/mpiexec (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Example_Job_Script):

  mpirun … \
         -x TMPDIR \
         [-x OTHERVAR] \
         …

  mpiexec.hydra … \
         -genvlist TMPDIR[,OTHERVAR] \
         …


|--------------------------------- ### Use in job files

You can use $TMPDIR in one or more of the following ways:

• direct your application to store its temporary files there, which is typically done by command line switches or an environment variable such as:

  export FOO_SCRATCH=$TMPDIR

• actually run your application there:

  cd $TMPDIR

• copy files back upon job termination:

  #PBS -W stageout=$TMPDIR/foo.ext@localhost:$PBS_O_WORKDIR
  #PBS -W stageout=$TMPDIR/*.bar@localhost:$PBS_O_WORKDIR/subdir

• The string on the left of the @ character names the source files in the compute node file system.
• The string on the right gives the destination host and directory, also as seen from the compute node. This means localhost refers to the primary compute node (rank 0 in MPI parlance). $PBS_O_WORKDIR by default stems from what was qsub's current directory on the submission node, but Carbon's user file systems are mounted on login nodes and compute nodes under the same paths.
• You may give the stageout=… directive multiple times, as shown.




|-------------------------------- ## Submitting and managing jobs


|-------------------------------- ### Job Script

A job is described to Torque by a job script, which in most cases is a shell script containing directives for Torque.

• Example Job Script (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Example_Job_Script).


|-------------------------------- ### Submission

To submit a job, use Torque's qsub (http://www.adaptivecomputing.com/resources/docs/torque/4-1-4/Content/topics/commands/qsub.htm) command on a login node.

  qsub [-A accountname] [options] jobfile

To review qsub operation and options, consult the following:

  man qsub
   qsub --help

• You can submit follow-up jobs from within a parent job script while it runs on a compute node, but it may be better to leverage job dependencies. (http://www.adaptivecomputing.com/resources/docs/torque/4-1-4/Content/topics/commands/qsub.htm#W)
• Requesting Resources (http://www.adaptivecomputing.com/resources/docs/torque/4-1-4/Content/topics/2-jobs/requestingRes.htm)
• Alternatively, use Moab's msub (http://www.adaptivecomputing.com/resources/docs/mwm/6-1-9/Content/commands/msub.html) command.


|-------------------------------- ### Queues

See  Queues and Policies (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Queues_and_Policies).


|--------------------------------- # HPC/Submitting and Managing Jobs/Queues and Policies


|--------------------------------- ## Introduction

There is one main queue and one debug queue on Carbon, defined as Torque (http://en.wikipedia.org/wiki/TORQUE_Resource_Manager) queues.
Once submitted, job routing decisions are made by the Moab scheduler (http://www.clusterresources.com/products/moab-cluster-suite/workload-manager.php).

In this framework, short jobs are accommodated by a daily reserved node and by backfill scheduling,
i.e. "waving forward" small jobs while one or more big jobs wait for full resources to become available.


|--------------------------------- ## None

The main queue on Carbon is batch and need not be specified to qsub or in the job script.
The following defaults and limits apply:

  resources_default.nodes = 1:ppn=8
  resources_default.walltime = 00:15:00    # 15 min
  resources_max.walltime = 240:00:00       # 10 days
  max_user_queuable = 2000

And, given current node hardware:

  ppn ≤ 8

In addition, the Moab scheduler applies various per-user limits.
Straightforward are hard and soft limits on the number of concurrent jobs and CPU cores used (about 60% of the whole machine),
designed to prevent monopolizing the cluster by a single user while permitting use of otherwise idle resources.
A more advanced parameter is a cutoff for queued jobs considered for scheduling, based on their total number of cores requested (MAXIPROC).
This ensures a fair job turnover between different users, while not restricting throughput for large numbers of "small" jobs.

See also:

• Torque queue configuration (http://www.adaptivecomputing.com/resources/docs/torque/4.1queueconfig.php).
• Moab Usage Limits/Throttling Policies (http://www.adaptivecomputing.com/resources/docs/mwm/6.2throttlingpolicies.php).


|--------------------------------- ## None

For testing job processing and your job environment, use qsub -q debug on the command line, or the follwing in a job script:

  #PBS -q debug

The debug queue accepts jobs under the following conditions

  resources_default.nodes = 1:ppn=4
  resources_max.nodes = 2:ppn=8
  resources_default.walltime = 00:15:00
  resources_max.walltime = 01:00:00
  max_user_queuable = 3
  max_user_run = 2

in other words,

  nodes ≤ 2
  ppn ≤ 8
  walltime ≤ 1:00:00    # 1 hour


|-------------------------------- ### Checking job status

Query your jobs using commands similar to those on other HPC clusters.
You can use either Torque commands (http://www.adaptivecomputing.com/resources/docs/torque/4-1-4/Content/topics/12-appendices/commandsOverview.htm)
or Moab commands (http://www.adaptivecomputing.com/resources/docs/mwm/6-1-9/Content/a.gcommandoverview.html).
Both access the same information, but through different routes, and offer different display styles.

To get the regular output format:

  qstat [-u $USER]
  showq [-u $USER]

To get an alternate format (e.g. showing job names):

  qstat -a [-u $USER]
  showq -n [-u $USER]

You can always use -u $USER to show only your jobs.


|-------------------------------- #### Getting extra information

Show the nodes where a job runs:

  qstat -n [-1] jobnum

Give full information such as submit arguments and run directories, and do not wrap long lines ("-1" is the digit "one"):

  qstat -f [jobnum] [-1]

To diagnose problems with "stuck" jobs, use the -s option, or simply Moab's checkjob (http://www.adaptivecomputing.com/resources/docs/mwm/6-1-9/Content/commands/checkjob.html) command. The last few lines of output give past events of the job and its current status.

  qstat -s jobnum
  checkjob -v jobnum

To get estimates on when your job might start:

  showstart [-e all] jobnum


|-------------------------------- #### Peeking at job output files

Each job has associated stdin and stderr streams which are gathered on its first node and are copied back only at job end time, according to the #PBS directives -e, -o, or -j [eo|oe]. If the user does explicitly capture any output in the script (using shell redirections ">") it can be difficult to assess a job's progress.

To inspect these streams while the job is running, and also to review a job's script, use the qpeek command:

  qpeek jobnum
  qpeek -eo jobnum
  qpeek -s jobnum

Read its manual page for full documentation:

  qpeek --man

This command is a Carbon re-implementation of a Torque "contrib" script.

To inspect a job's processes running on its compute nodes:

  qpeek -p jobnum


|-------------------------------- ### Changing jobs after submission

Use qalter to modify attributes of a job.
Only attributes specified on the command line will be changed.
If any of the specified attributes cannot be modified for any reason, none of that job's attributes will be modified.
 (http://www.adaptivecomputing.com/resources/docs/torque/4-1-4/Content/topics/commands/qalter.htm)

  qalter [-l resource] […] jobnumber …
  qalter -A accountspec jobnumber …

• Most attributes can be changed only before the job starts. Others, notably mail options (http://www.adaptivecomputing.com/resources/docs/torque/4-1-4/Content/topics/commands/qsub.htm#-m) and job dependencies (http://www.adaptivecomputing.com/resources/docs/torque/4-1-4/Content/topics/commands/qsub.htm#-W) can be meaningfully adjusted after start.

• Extending the walltime resource of an already running job requires Torque administrator permission. You yourself can extend prior to running, and shorten always. Warning: In either case, the new walltime limit will be measured from start, not as remaining time. If a new walltime limit is shorter than the elapsed time, the job will be killed right away.
• You cannot modify the job script itself after submission. You will have to remove and resubmit the job.

Contact me (stern (https://wiki.anl.gov/cnm/User:Stern)) to arrange for interventions.


|-------------------------------- ### Removing jobs

To retract a queued job or kill an already running job:

  qdel jobnumber

Torque epilogue scripts (http://www.adaptivecomputing.com/resources/docs/torque/4-1-4/Content/topics/12-appendices/prologueAndEpliogueScripts.htm) will immediately remove remaining user processes and user files from the used compute nodes upon job termination, be it natural or after qdel.


|-------------------------------- ## Declaring that a job requires licenses

A job that is to run software that requires a commercial license must declare such to the job scheduler (software that decides when and on which nodes the job could start).
The job scheduler monitors known licenses for availability, and so will know which and how many licenses are available at any given time.

Note: License availability checks do not happen instantaneously but rather by polling, roughly once every minute.


|-------------------------------- ### One license type

To request a single license token of a single type, use a gres ("general resource") directive:

  #PBS -l gres=license_name

To request several tokens of a type, place either a : or + as separator, followed by the number of tokens required:

  #PBS -l gres=license_name:count

For compatibility, the resource type software is accepted, but not for multiple types of licenses.

  #PBS -l software=license_name
  #or
  #PBS -l software=license_name:count


|-------------------------------- ### Several license types

To request several different licenses, use gres with list of license tokens and their optional counts separated by %:

  #PBS -l gres=license1_name%license2_name
  #PBS -l gres=license1_name:count1%license2_name

The software resource cannot request multiple license types.
(If several software resources are requested, only the last one would be active.)


|-------------------------------- ## Interactive node access

There are two ways to interactively access nodes:

• Requesting an interactive job

  qsub -I [-l nodes=…]

• Side-access a node that already runs a job, such as to debug or inspect running processes or node-local files.

  /usr/sbin/lsof -u $USER
  /usr/sbin/lsof -c command_name
  /usr/sbin/lsof -p pid

  ps -fu $USER

  psuser


|-------------------------------- ## Job notification mails

You can request a notification message to be sent to you when a job begins, ends, or aborts. The message is rather terse and looks like this:

  Subject: PBS Job 281399.sched1.carboncluster

  PBS Job Id: 281399.sched1.carboncluster
  Job Name:   test.job
  Exec host:  n103/0
  Execution terminated
  Exit_status=0
  resources_used.cput=00:03:00
  resources_used.mem=123kb
  resources_used.vmem=240kb
  resources_used.walltime=00:03:04

In the above, Exit_status=0 reflects the shell exit status, where 0 means success.

The following means your job was terminated because it ran beyond its allocated walltime:

  Exit_status=271


|-------------------------------- ## Recording where a job ran

The #Job notification mails explained above do not include $PBS_O_WORKDIR. You will have to arrange for yourself to record that information.
One way to do that would be to simply record all job numbers and their working directories at the beginning of each job:

  #!/bin/bash
  #PBS -l nodes=…
  #PBS -l walltime=…
  #PBS -m bea

  cd $PBS_O_WORKDIR
  echo $PBS_JOBID $PWD >> $HOME/jobdirs

  …

To query a job's directory, run:

  grep jobnumber ~/jobdirs


|-------------------------------- ## Sending mail while a job is running

It may be useful to have a job automatically "phone home" sometime after it started.
This can be accomplished at job submission time by arranging a mail to be sent, using a few added commands in the job script.

  #!/bin/bash
  #PBS …

  cd $PBS_O_WORKDIR

  # arrange notification mail
  (
      sleep 600	# time offset parameter, in seconds
      tail -20 somefile.out | mailx -s "$PBS_JOBID: partial log" $USER
  ) &

  # main work here
  …

Explanation:

1. The commands inside ( … ) & run in a background track aside the main work.
2. The first command, sleep, delays further action (in this track only) by the specified time in seconds.
 2.1. To emphasize minutes, write sleep $(( 10 * 60 )) .
 2.2. To set the time relative to the walltime limit, leverage the $PBS_WALLTIME variable, e.g. as in sleep $(( PBS_WALLTIME - ( minutes * 60 ) )).
3. The tail command is a stand-in for any inspection command you might want to run. An even simpler command could be ls -lt. You could also use several commands enclosed by parentheses, ( cmd1; cmd2; ... ), to construct a more elaborate mail body.
4. The mailx command, following the pipe symbol |, reads the output of your inspection command and sends you a mail with the subject specified by the -s option.
5. If the main part of the job finishes before the pre-mail sleep is over no mail will be sent.

Note: The Moab scheduler also supports triggers (http://www.adaptivecomputing.com/resources/docs/mwm/6-1-9/Content/topics/triggers/triggersIndex.html), but they run in a different environment, not on an allocated node.

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)
• HPC (https://wiki.anl.gov/cnm/Category:HPC)

  <image 400px-HPC_job_flow.png: >


|------------------------------- ## Contents

1. 1 Introduction
2. 2 Application-specific job scripts
3. 3 Generic job scripts
 3.1. 3.1 OpenMPI, InfiniBand
 3.2. 3.2 OpenMPI, Ethernet
 3.3. 3.3 Intel-MPI
4. 4 Advanced Job scripts
 4.1. 4.1 Multithreading using OpenMP
 4.2. 4.2 GPU nodes
 4.3. 4.3 Job scripts in other scripting languages
5. 5 The account parameter
 5.1. 5.1 Timed Allocations
6. 6 Advanced node selection


|------------------------------- ## Introduction

A Torque job script is usually a shell script that begins with PBS directives.
Directives are comment lines to the shell but are interpreted by Torque, and take the form

  #PBS qsub_options

The job script is read by the qsub job submission program, which interpretes the directives and accordingly places the job in the queue. Review the qsub man page (http://www.adaptivecomputing.com/resources/docs/torque/commands/qsub.php) to learn about the options accepted and also the environment variables provided to the job script later at execution.

• The job script may be written in any scripting language, such as Perl or Python. The interpreter is specified in the first script line in Unix hash-bang syntax #!/usr/bin/perl, or using the qsub -S path_list (http://www.adaptivecomputing.com/resources/docs/torque/commands/qsub.php) option.
• The default directive token #PBS can be changed or unset entirely with the qsub -C option; see qsub (http://www.adaptivecomputing.com/resources/docs/torque/commands/qsub.php), sec. Extended Description.


|------------------------------- ## Application-specific job scripts

For most scalar and MPI-based parallel jobs on Carbon the scripts in the next section will be appropriate.
Some applications however require customizations,
typically copying $TMPDIR to an app-specific variable,
or calling MPI through app-specifc wrapper scripts.
Such application-specific custom scripts are located at the root directory of the application under /opt/soft,
and can typically be reached as:

  $APPNAME_HOME/APPNAME.job

or

  $APPNAME_HOME/sample.job

where APPNAME is the module name all UPPERCASED and with "-" (minus) characters replaced by "_" (underscore).

To find variables of this form:

  env | grep _HOME


|------------------------------- ## Generic job scripts

Here are a few example jobs for the most common tasks.
Note how the PBS directives are mostly independent from the type of job, except for the node specification.


|------------------------------- ### None

This is the default user environment. The openmpi and icc, ifort, mkl modules are preloaded in the system's shell startup files.
The InfiniBand fast interconnect is selected in the openmpi module by means of the environment variable $OMPI_MCA_btl.

  #!/bin/bash
  #
  #  Basics: Number of nodes, processors per node (ppn), and walltime (hhh:mm:ss)
  #PBS -l nodes=5:ppn=8
  #PBS -l walltime=0:10:00
  #PBS -N job_name
  #PBS -A account
  #
  #  File names for stdout and stderr.  If not set here, the defaults
  # are <JOBNAME>.o<JOBNUM> and <JOBNAME>.e<JOBNUM>
  #PBS -o job.out
  #PBS -e job.err
  #
  #  Send mail at begin, end, abort, or never (b, e, a, n). Default is "a".
  #PBS -m ea

  # change into the directory where qsub will be executed
  cd $PBS_O_WORKDIR

  # start MPI job over default interconnect; count allocated cores on the fly.
  mpirun -machinefile  $PBS_NODEFILE -np $PBS_NP \
          programname

• If your program reads from files or takes options and/or arguments, use and adjust one of the following forms:

  mpirun -machinefile  $PBS_NODEFILE -np $PBS_NP \
         programname  < run.in

  mpirun -machinefile  $PBS_NODEFILE -np $PBS_NP \
         programname  -options arguments < run.in

  mpirun -machinefile  $PBS_NODEFILE -np $PBS_NP \
         programname < run.in > run.out 2> run.err


|------------------------------- ### None

To select ethernet transport, such as for embarrasingly parallel jobs, specify an -mca option:

  mpirun -machinefile $PBS_NODEFILE -np $PBS_NP \
  	-mca btl self,tcp \
          programname


|------------------------------- ### Intel-MPI

Under  Intel-MPI (https://wiki.anl.gov/cnm/HPC/Software/Modules/impi) the job script will be:

  #!/bin/bash
  #PBS ... (same as above)

  cd $PBS_O_WORKDIR

  mpiexec.hydra 	-machinefile  $PBS_NODEFILE -np $PBS_NP \
  	programname


|------------------------------- ## Advanced Job scripts


|------------------------------- ### Multithreading using OpenMP

See HPC/Submitting and Managing Jobs/Advanced node selection#Multithreading using OpenMP (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection).


|------------------------------- ### GPU nodes

As of late 2012, Carbon has 28 nodes with 1 NVIDIA C2075 GPU each. To specifically request GPU nodes, add :gpus=1 to the nodes request. At the moment this is synonymous with but preferable to specifying …:gen3.

  #PBS -l nodes=N:ppn=PPN:gpus=1

• The gpus=… modifier refers to GPUs per node and currently must always be 1.
• GPU support depends on the application, in particular if several MPI processes or OpenMP threads can share a GPU. Test and optimize the N and PPN parameters for your situation. Start with nodes=1:ppn=4.
• Each GPU node has 12 regular CPU cores; if you submit jobs with :ppn < 12 and :gpus=1 the node may be shared with pure CPU jobs. It is to be tested if and how much interference this causes for either job. See Advanced node selection (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection) to reserve entire nodes while controlling ppn for MPI or OpenMP.


|------------------------------- ### Job scripts in other scripting languages

The job scripts shown above are written in bash, a Unix command shell language.
Actually, qsub accepts scripts in pretty much any scripting language.
The only pieces that Torque reads are the Torque directives, up to the first script command, i.e., a line which is (a) not empty, (b) not a PBS directive, and (c) not a "#"-style comment.
The script interpreter is chosen by the Linux kernel from the first line of the script.

As with any job, the script execution during the job begins in the home directory, so one of the first commands in the script should be the equivalent of cd $PBS_O_WORKDIR.
If you wish to use test your script interactively, you must avoid accessing the PBS_O_WORKDIR variable.
(This problem - and a solution - exists for bash-based job scripts as well but usually having to use mpirun and to name the machinefile makes the expected environment more obvious.)

Then, a job script in Python would typically begin like this:

  #!/usr/bin/env python3
  #PBS -l nodes=N:ppn=PPN
  #PBS -l walltime=hh:mm:ss
  #PBS -N job_name
  #PBS -A account
  #PBS -o filename
  #PBS -j oe
  #PBS -m ea    

  import os
  if "PBS_O_WORKDIR" in os.environ:
      os.chdir(os.environ["PBS_O_WORKDIR"])

  # body of script here …

Important: The job script interpreter only ever runs in serial, on one core.
Any parallelization must be initiated by one of the following mechanisms:

• Calling a child application that runs in parallel (e.g. VASP). Such a child script or application either needs to be aware of or be told to use $PBS_NODEFILE. When the child application finishes, the calling script will collect results and typically iterates until some criterion is met. This calling model is perfectly reasonable as long as the "controlling" application doesn't dominate the time required to shepherd its child calculations.
• OpenMP
• Python multiprocessing (https://docs.python.org/3/library/multiprocessing.html)
• MPI (e.g. Mpi4Py (https://docs.python.org/3/library/multiprocessing.html))

The latter is not to be confused with using mpirun to start several Python interpreters in parallel, which is how  GPAW (https://wiki.anl.gov/wiki_cnm/index.php) and  ATK (https://wiki.anl.gov/cnm/HPC/Modules/atk) operate:

  #!/bin/bash
  …
  mpirun -machinefile  $PBS_NODEFILE -np $PBS_NP \
  	gpaw-python script.py

  #!/bin/bash
  …
  mpiexec.hydra -machinefile  $PBS_NODEFILE -np $PBS_NP \
  	atkpython script.py


|------------------------------- ## None

The parameter for option -A account can take the following forms:

You can check your account balance in hours as follows:

  mybalance -h
  gbalance -u $USER -h


|------------------------------- ### Timed Allocations

See HPC/FAQ#What's my account balance? (https://wiki.anl.gov/cnm/HPC/FAQ).


|------------------------------- ## Advanced node selection

You can refine the node selection (normally done via the PBS resource -l nodes=…) to
finely control your node and core allocations. You may need to do so for the following reasons:

• select specific node hardware generations,
• permit shared vs. exclusive node access,
• vary PPN across the nodes of a job,
• accommodate multithreading (OpenMP).

See HPC/Submitting Jobs/Advanced node selection (https://wiki.anl.gov/cnm/HPC/Submitting_Jobs/Advanced_node_selection) for these topics.


|-------------------------------- # HPC/Submitting and Managing Jobs/Advanced node selection


|-------------------------------- ## Contents

1. 1 Node Types
 1.1. 1.1 Hardware
  1.1.1. 1.1.1 Node Types
  1.1.2. 1.1.2 Major CPU flags
 1.2. 1.2 Selecting node types for jobs
 1.3. 1.3 Recommendations
2. 2 PPN Tricks
 2.1. 2.1 Shared vs. Exclusive Node Access
 2.2. 2.2 Memory constraints
 2.3. 2.3 Different PPN by node
3. 3 Multithreading using OpenMP
 3.1. 3.1 Pure OpenMP, single entire node
 3.2. 3.2 Pure OpenMP, single node, possibly shared
 3.3. 3.3 OpenMP/MPI hybrid
4. 4 Advanced: PBS_* Variables


|-------------------------------- ## Node Types


|-------------------------------- ### Hardware

Carbon has several major hardware node types, named genX for short, with X = 1, 2. …. Nodes are further sub-classified by their amount of installed memory.


|-------------------------------- #### Node Types

Nodenames, types
----------------
Login
login5…6
Compute
n401…408
n409…420
n421…460
n461…476
n477…512
n513…534
…

Retired
n001…144
n145…240,289…348
n241…288
n352…366

• Compute time is charged as the product of cores reserved × wallclock time × charge rate. The charge rate accommodates nominal differences in CPU speed. The reference speed (100%) is taken at a gen2 core.
• Compute time on gen4 nodes is charged at 200% of actual walltime, given their performance relative to gen2 nodes.
• gen7 nodes have two GPUs each; GPU usage is currently not "charged" (accounted for) separately.
• Virtual memory usage on nodes may reach up to about 2 × the physical memory size. Your processes running under PBS may allocate that much vmem but cannot practically use it all for reasons of swap space size and bandwidth. If a node acitvely uses swap for more than a few minutes (which drastically slows down compute performance), the job will automatically be killed.


|-------------------------------- #### Major CPU flags

CPU capabilities grow with each node generation. Executables can be compiled to leverage specific CPU capabilities. Jobs using such executables must use the qsub option -l nodes=...:genX to be directed to nodes having that capability.

Flag name                                       gen4 gen5 gen6 gen7
-------------------------------------------------------------------
avx512_vnni                                     –    –    –    x
avx512bw, avx512cd, avx512dq, avx512f, avx512vl –    –    x    x
avx2                                            –    x    x    x
fma                                             –    x    x    x
adx                                             –    x    x    x
avx                                             x    x    x    x
sse4_2                                          x    x    x    x




|-------------------------------- ### Selecting node types for jobs

Jobs are directed automatically onto nodes of the same generation, with preference for gen2. Unless specifically requested, jobs will never mix generations. This will avoid disparate CPU speeds and MPI communication setup in a job. You can force jobs onto either node set in the job script after #PBS or on the qsub command line by suffixing the nodes= specifier with a property such as :gen1 or :gen2. For example, to run on 2 nodes with 8 cores each:

  qsub -l nodes=2:ppn=8:gen1  foo.job	# not recommended for VASP
  qsub -l nodes=2:ppn=8:gen2  foo.job

The following are (as of now) equivalent, since "bigmem" currently implies "gen2":

  qsub -l nodes=2:ppn=8:gen2:bigmem  foo.job
  qsub -l nodes=2:ppn=8:bigmem       foo.job

See also:
http://www.clusterresources.com/torquedocs21/2.1jobsubmission.shtml#resources

• Special note for VASP (https://wiki.anl.gov/cnm/HPC/Software/Catalog/vasp)


|-------------------------------- ### Recommendations

• Avoid specifying a node generation unless you have a reason. This widens the pool of nodes suitable to run your job, thus decreasing wait times.
• To get you high memory per core, specify :bigmem (6 GB) or :hugemem (8 GB, charged at 2 × walltime rate).
• With ppn=8 your jobs may run on any node generation.
• With ppn=4 your jobs have a fairly good chance of running in the "attic" of gen3 nodes which are often busy with ppn=8 jobs.


|-------------------------------- ## PPN Tricks

Each Carbon node has nodes with 8, 12, and 16 cores.
A request of ppn=8 in the job submission can get routed onto a node with exactly 8 cores and thus use the entire node,
or the job can get routed to a node with additional cores which may be used by other jobs.

You can specify if your application is fine to run on shared nodes or needs nodes for exclusive use, such as for the following reasons:

1. your application is not parallelized,
2. your application has limited hardcoded parallelization, e.g. for 2 or 4 cores only,
3. your application runs multi-threaded but uses $PBS_NODEFILE to infer the number of processes to start,
4. your application runs busy service processes or service threads (e.g. NWChem),
5. your application saturates a resource, e.g. memory bandwidth (some large VASP calculations),
6. the node's memory is exhausted by fewer application processeses than there are cores available.

Depending on the reason, the node either may be or must not be used by other jobs.
In the past, the only way to achieve exclusive but undersubscribed node access was to request ppn=8 and then to thin out a copy of the nodefile before passing it to the application.
To eliminate the need to edit the nodefile, use the -l naccesspolicy=… flag to differentiate between resources requested from Moab from those passed to the application (in $PBS_NODEFILE).

Select an option from the following scenarios.


|-------------------------------- ### Shared vs. Exclusive Node Access

  #PBS -l nodes=nnn:ppn=4

  #PBS -l naccesspolicy=SHARED

  #PBS -l nodes=nnn:ppn=2
  #PBS -l naccesspolicy=SINGLEUSER -n

  #PBS -l nodes=nnn:ppn=4
  #PBS -l naccesspolicy=SINGLEJOB -n

  #PBS -l nodes=nnn:ppn=4
  #PBS -l naccesspolicy=UNIQUEUSER


|-------------------------------- ### Memory constraints

Jobs that do not use all cores on a node are subject to memory contraints,
such that memory on each node is allocated in rough proportion to the number of cores requested.
Specifically, most of Carbon's current nodes have 2 physical memory banks (sets of DIMM slots),
and only one of these is made accessible to jobs that request ppn ≤ nproc/2,
i.e., half the number of physical cores per node nproc.

To request access to all memory on a node for jobs with ppn < nproc
use the qsub -n option, as shown in the solutions above.


|-------------------------------- ### Different PPN by node

  #PBS -l nodes=1:ppn=1+2:ppn=4
  #PBS -l naccesspolicy=SINGLEJOB -n

  nodes = ( 1:ppn=1 ) + ( 2:ppn=4 )

  n011
  n012
  n012
  n012
  n012
  n034
  n034
  n034
  n034

In all of the preceding scenarios the following applies:

• The $PBS_NODEFILE seen by the job script will always match ppn.
• For accounting, the job will be billed by the number of cores blocked from use by other users, i.e., ncores=ppn for shared nodes, and ncores=8 otherwise.


|-------------------------------- ## Multithreading using OpenMP

When you wish to use multithreading, you must ensure that the total number of "busy" user threads and processes corresponds to the number of cores requested from PBS. Today, multithreading in applications and libraries is typically programmed using the OpenMP interface (http://en.wikipedia.org/wiki/OpenMP) and the number of threads is controlled by the environment variable $OMP_NUM_THREADS.
Select from the following scenarios.


|-------------------------------- ### None

  #PBS -l nodes=1:ppn=8
  #PBS -l naccesspolicy=SINGLEJOB -n

  cd $PBS_O_WORKDIR
  export OMP_NUM_THREADS=$PBS_NUM_PPN
  ...
  programname …


|-------------------------------- ### None

Choose the number of cores n such that 1 ≤ n ≤ 8 (or 16):

  #PBS -l nodes=1:ppn=n
  ...
  cd $PBS_O_WORKDIR
  export OMP_NUM_THREADS=$PBS_NUM_PPN
  ...
  programname …

Here, the default policy "SHARED" is in effect, and OMP_NUM_THREADS is set automatically by counting the number of times that the first node occurs in $PBS_NODEFILE. This will allow you to vary or override the nodes setting using "qsub -l nodes=…" without having to edit it twice in the job file.


|-------------------------------- ### None

Making efficient use of multithreading on multiple nodes which communicate over MPI is fairly involved and is subject to ongoing research (http://www.google.com/search?hl=en&rls=en-us&q=MPI+OpenMP). Since OMP_NUM_THREADS is set to 1 by default on MPI satellite nodes, you must export this variable after you altered it in the job file.

  #!/bin/bash
  #PBS -l nodes=nnn:ppn=2
  #PBS -l naccesspolicy=SINGLEJOB -n

  # Calculate number of threads available per MPI process
  cores_per_node=$( grep -c ^processor /proc/cpuinfo )
  export OMP_NUM_THREADS=$(( cores_per_node / PBS_NUM_PPN ))

  mpirun -x OMP_NUM_THREADS -machinefile  $PBS_NODEFILE -np $PBS_NP \
       programname …

The -x option is specific to OpenMPI; please consult the documentation to achieve the same behavior in other MPI implementations.

The last example will ensure:

• you get allocated entire nodes (SINGLEJOB policy)
• you do not oversubscribe cores (OMP_NUM_THREADS is calculated from ppn)
• you only have one place to adjust (ppn), and can do so in the command line, or even post submission

It is assumed:

• The number of cores on the first node (running the job script) is the same as on the other nodes.
• All cores on a node will be used.


|-------------------------------- ## None

The following environment variables are provided in a job environment, with their value being computed, from torque-3.0.5/src/resmom/start_exec.c :

  static char *variables_else[] =   /* variables to add, value computed */
    {
    "HOME",
    "LOGNAME",
    "PBS_JOBNAME",
    "PBS_JOBID",
    "PBS_QUEUE",
    "SHELL",
    "USER",
    "PBS_JOBCOOKIE",
    "PBS_NODENUM",
    "PBS_TASKNUM",
    "PBS_MOMPORT",
    "PBS_NODEFILE",
    "PBS_NNODES",      /* number of nodes specified by size */
    "TMPDIR",
    "PBS_VERSION",
    "PBS_NUM_NODES",  /* number of nodes specified by nodes string */
    "PBS_NUM_PPN",    /* ppn value specified by nodes string */
    "PBS_GPUFILE",    /* file containing which GPUs to access */
    "PBS_NP",         /* number of processors requested */
    "PBS_WALLTIME",   /* requested or default walltime */
    NULL
    };

• HPC (https://wiki.anl.gov/cnm/Category:HPC)

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)

  module load quantum-espresso
  cat $QUANTUM_ESPRESSO_HOME/*.job

which gives:

  #!/bin/bash
  # Job template for Quantum ESPRESSO 4.x on Carbon
  #
  #PBS -l nodes=1:ppn=8
  #PBS -l walltime=1:00:00
  #PBS -N qe_jobname
  #PBS -A cnm12345
  #
  # Output and error log:
  #PBS -o job.out
  #PBS -e job.err
  #
  ## send mail at begin, end, abort, or never (b, e, a, n):
  #PBS -m ea

  cd $PBS_O_WORKDIR

  # job-specific tmp directories -- each is node-local, wiped on exit
  export ESPRESSO_TMPDIR=$TMPDIR

  mpirun -x ESPRESSO_TMPDIR \
  	-machinefile  $PBS_NODEFILE \
  	-np $(wc -l < $PBS_NODEFILE) \
  	pw.x \
  	< input.txt > output.txt

• HPC (https://wiki.anl.gov/cnm/Category:HPC)




|---------------------------- # Modules


|---------------------------- ## Applications

  abinit/7/openmpi-1.4
  abinit/8.6/impi
  amber/12/openmpi-1.4
  ambertools/12/openmpi-1.4
  ase/3.9/3.9.1-1
  atk/12/12.8.2-1
  atk/2015/2015.1-1
  atk/2016/2016.4-1
  atk/2017/2017.2-1
  atlas/3/intel
  atomeye/kermode/kermode-2010-1
  beef/0/0.1.2-1
  boost/1/gcc
  chargemol/2014/intel
  chargemol/2015/intel
  charm/6/openmpi-1.4
  comsol/4/4.1-1
  comsol/4/4.2-1
  comsol/4/4.2a-1
  comsol/4/4.3-1
  comsol/4/4.3a-1
  comsol/4/4.3b-1
  comsol/4/4.3b-2
  comsol/4/4.4-1
  comsol/4/4.4-2
  comsol/5/5.0-1
  comsol/5/5.1-1
  comsol/5/5.2-1
  comsol/5/5.2a-1
  comsol/5/5.3-1
  comsol/5/5.4-1
  comsol/5/5.4.0.388-1
  comsol/5/5.5.0.359-1
  comsol/5/5.6.0.0-1
  comsol/6/(default)
  comsol/6/6.0-1
  comsol/6/6.1-1
  cp2k/2/openmpi-1.4
  cp2k/5.1/impi
  dacapo/2/openmpi-1.4
  ddscat/7/intel
  epics/3/gcc
  feff/9.6/impi
  fftw3/3.3/impi-5
  fftw3/3.3/impi
  fftw3/3.3/intel-19
  fftw3/3.3/intel
  fftw3/3.3/openmpi-1.10
  fftw3/3.3/openmpi-1.4
  fftw3/3.3/openmpi
  fox/4/intel
  garffield/1/openmpi-1.4
  gaussian/09/09.D.01.x86_64-3
  gaussian/16/16-A.03-1
  gaussian/16/16-A.03-2
  gaussian/16/16-B.01-1
  gaussian/16/16-C.01-1
  gaussview/5/5.0.9-1
  gaussview/6/6.0.16-1
  gnuplot/4.6/4.6.6-1
  gnuplot/5.0/5.0.6-1
  gnuplot/5.2/5.2.rc1-1
  gold/2/(default)
  gold/2/2.2.0.5-6-EL6
  gold/2/2.2.0.5-7
  gold/2/2.2.0.5-7a
  GotoBLAS/1/gcc
  GotoBLAS/1/intel
  gpaw-setups/0/0.8.7929
  gpaw/0/openmpi-1.4
  gsl/1/1.16-1
  h5utils/1/gcc
  harminv/1/intel
  hdf5/1.10/intel-19
  hdf5/1.10/nvhpc-22.5
  hdf5/1/intel
  hdf5/1/openmpi-1.4
  hoomd/0/gcc
  hydra/3/gcc
  idl/8/8.2.2-1
  jdftx/0/gcc-4.9
  jmol/13/13.2.8-1
  lammps/2012/openmpi-1.4
  lammps/2015/impi
  lammps/2015/openmpi-1.10
  lammps/2015/openmpi-1.4
  lammps/2020/impi
  layout-beamer/3/3.3.0beta2_64
  libctl/3.2/intel-17
  libctl/3/intel
  libgd/2/intel-18
  libint/1/intel
  libint2/2.0/intel
  libmatheval/1/gcc
  libvdwxc/0/impi
  libvdwxc/0/intel-18
  libvdwxc/0/intel-19
  libvdwxc/0/intel
  libxc/1/intel
  libxc/2/gcc-4.9
  libxc/2/intel-15
  libxc/2/intel-16
  libxc/2/intel-18
  libxc/4/intel-18
  lumerical/2021/2021-R1-1(default)
  lumerical/2021/2021-R2-1
  lumerical/2021/2021-R2-ansyslm-1
  lumerical/2022/2022-R1.4-1
  lumerical/2022/2022-R2-2(default)
  lumerical/2022/2022-R2.1-1
  mathematica/10/10.1.0-1
  mathematica/11/11.3.0-1
  mathematica/12/12.0.0-1
  mathematica/12/12.1.1-1
  mathematica/12/12.2.0-1
  mathematica/13/13.0-1
  matlab/R2013a/R2013a-5
  matlab/R2013a/R2013a-8
  matlab/R2019b/R2019b-1
  meep/1/intel
  meep/1/openmpi-1.4
  mesa-gl/6/6.5.2-1
  mesa-gl/7/7.2-1
  mesa-gl/18/18-1 <aL>
  molpro/2009/openmpi-1.4
  molpro/2012/2012.1.29-4
  molpro/2012/2012.1.29-6
  molpro/2012/2012.1.29-7
  molpro/2012/2012.1.29-8
  mpb/1/1.5-4
  mpich/3/gcc
  mumax3/3.10beta/3.10beta-1(default)
  mumax3/3.10beta/3.10beta-2
  mumax3/3.9/3.9.3-1
  namd/2/multicore-CUDA
  namd/2/multicore
  namd/2/openmpi-1.4
  namd/2/TCP
  namd/2/verbs-smp-CUDA
  namd/2/verbs-smp
  namd/2/verbs
  netcdf/3/gcc
  netcdf/3/intel
  nlopt/2/gcc
  numpy/1/intel
  nwchem/6/openmpi-1.4
  octave/4.0/4.0.3-1
  octopus/10.1/impi
  octopus/10.1/intel
  octopus/4/intel-18
  octopus/4/openmpi-1.4
  octopus/9/intel-19
  packmol/13/intel
  periodic_NBO/2012/intel
  perl/5/5.24.1-2
  phonopy/1.10/1.10.8-1
  phonopy/1.10/1.10.8-2
  povray/3/gcc
  pwgui/4/4.2-1
  q-chem/4.1/4.1.0.1-1
  q-chem/5/(default)
  q-chem/5/5.1.2-1
  q-chem/5/5.2.1-1
  q-chem/5/5.3-3
  q-chem/5/5.3.1-1
  q-chem/6/6.0-1
  quantum-espresso/4/openmpi-1.4
  quantum-espresso/5.4/openmpi-1.10
  rasmol/2.6/2.6.4-foc-1
  rasmol/2.7/2.7.5-1
  readline/6/6.2-1
  rings/1.2/intel
  rings/1.2/openmpi-1.4
  rings/1.3/intel
  rings/1/intel
  rings/1/openmpi-1.4
  ScientificPython/2/intel
  scipy/0/openmpi-1.4
  siesta/3/openmpi-1.4
  siesta/4.0/impi-5
  siesta/4.1-b2/impi-5
  siesta/4.1-b2/impi
  siesta/4.1/impi-5
  sparta/2020-07-06/impi
  spglib/1/gcc
  vasp-vtst/4/openmpi-1.4
  vasp-vtstscripts/2012/2012-11-11-1
  vasp-vtstscripts/926/926-1
  vasp/4.6/openmpi-1.4
  vasp5/5.3-scan/impi-5
  vasp5/5.3-scan/openmpi-1.10
  vasp5/5.3/impi-5
  vasp5/5.3/openmpi-1.10
  vasp5/5.3/openmpi-1.4
  vasp5/5.4-z2pack/impi-5
  vasp5/5.4-z2pack/openmpi-1.10
  vasp5/5.4/(default)
  vasp5/5.4/impi-2019
  vasp5/5.4/impi-5
  vasp5/5.4/openmpi-1.10
  vasp6/6.3/impi
  vasp6/6.3/nvhpc
  vesta/3/3.2.1-1
  vmd/1/1.9.1-2
  voro++/0/intel
  vtk/5/intel
  wannier90/1-z2pack/1.2-z2pack-1
  wannier90/1/1.2-1
  wannier90/1/1.2-2
  wannier90/2/impi-5
  wannier90/2/openmpi-1.10
  wannier90/3/impi
  wannier90/3/intel
  wannier90/3/nvhpc-parallel
  wannier90/3/nvhpc
  wien2k/09/intel
  wien2k/14.2/impi-5
  xcrysden/1/1.5.21-1


|---------------------------- ## Development tools

  impi/4
  impi/5
  impi/2017
  impi/2018
  impi/2019
  impi/2021
  intel/11
  intel/12
  intel/13
  intel/14
  intel/15
  intel/16
  intel/17
  intel/18
  intel/19
  intel/2021

  gcc/4.4/4.4.7
  gcc/4.9/4.9.3-1
  gcc/6.4/6.4.0-1
  gcc/7.3/7.3.0-1
  gcc/8.2/8.2.0-1
  gcc/8.5/(default)
  gcc/8.5/8.5.0-1
  gcc/11.1/11.1.0-1
  glibc/2.23/2.23-1

  nvhpc-byo-compiler/22.5
  nvhpc-nompi/22.5
  nvhpc/22.5

  openmpi/1.4
  openmpi/1.6
  openmpi/1.8
  openmpi/1.10

  java/1.7/1.7.0_25-fcs

  python-anaconda/2.7/(default)
  python-anaconda/2.7/4
  python-anaconda/3.5/4
  python-centos/2.6/gcc-4.4
  python-centos/2.7/gcc-4.8
  python-env-anaconda/2.7/(default)
  python-env-anaconda/2.7/4
  python-env-anaconda/3.5/4
  python-env-intel/2.7/(default)
  python-env-intel/2.7/2017
  python-env-intel/2.7/2018
  python-env-intel/3.5/2017
  python-env-intel/3.6/2018
  python-intel/2.7/(default)
  python-intel/2.7/2015
  python-intel/2.7/2017
  python-intel/2.7/2018
  python-intel/3.5/2015
  python-intel/3.5/2017
  python-intel/3.6/2018
  python/2.7/(default)
  python/2.7/gcc-4.1
  python/2.7/gcc-4.4
  python/3.5/gcc-4.4

Contents

1 Python standard distributions
2 Python bundles within the OS
3 Python suites with vendor-distributed package set
4 Python suites with customized package set
------------------------------------------------------------------------------------------------------------------------------------------------------------------------


|--------------------------- ## Contents

• 1 Python standard distributions
• 2 Python bundles within the OS
• 3 Python suites with vendor-distributed package set
• 4 Python suites with customized package set

There are many Python installations on Carbon, each normally prepared for access by a module load modulename shell command.
Modules are grouped and named according to the type and scope of the Python installation provided.
Each module gives you access to a Python interpreter and typically
one or more Python-native packages for import,
and to supporting software.

As with other modules, each modulename will look like a Unix file name that has one or more directory components.
You can (and normally should) use abbreviated module names, with recommended name forms shown below.
For abbreviated names, the module shell command
will select the most suitable module from the modules that would complete your abbreviated name.
This will usually be the module with the highest version number or an administrator-designated default.

What follows are the types of Python installations and their module naming convention.
For the current full list of these modules, run the shell command module avail python.
Please contact [email protected] (https://wiki.anl.gov/cdn-cgi/l/email-protection) for help to choose an approach.


|--------------------------- ## Python standard distributions

Caution: Packages that were installed under one Python version (or module) usually are not accessible through another version, especially packages that contain binaries like shared libraries and executables.


|--------------------------- ## Python bundles within the OS


|--------------------------- ## Python suites with vendor-distributed package set

Python-based software suites with a broad sope became popular in recent years.
They typically contain:

1. A Python interpreter.
2. The Conda (https://en.wikipedia.org/wiki/Conda_(package_manager))/pip (https://pip.pypa.io/en/latest/) package management systems (see more context (https://packaging.python.org/guides/tool-recommendations/)).
3. A wide-ranging set of Python-native packages, extensions, and add-on executables, often including:
 3.1. NumPy (http://www.numpy.org)/SciPy (https://www.scipy.org/) – Ecosystem for scientific computing in Python
 3.2. Idle (https://docs.python.org/3/library/idle.html) – Python Integrated DeveLopment Environment
 3.3. iPython (https://ipython.org) and Jupyter (https://jupyter.org/) – Interactive computation system
 3.4. Cython (http://cython.org) – Compiler for a superset of Python and C/C++
4. All libraries and supporting binaries required by the above, e.g.:
 4.1. BLAS (http://www.netlib.org/blas/)/LAPACK (http://www.netlib.org/lapack/) – Linear algebra libraries
 4.2. Tcl (http://www.tcl.tk/) – Interpreter for the Tool Command Language
 4.3. MPI (http://mpi-forum.org/docs/) – Runtime environment for parallel applications using Message Passing Interface, including the mpirun or mpiexec launch commands.

The last item can be problematic because libraries and supporting binaries included in a Python suite can interfere with other software modules on Carbon.
For access by users, HPC software typically leverages conventional Unix environment variables
like PATH, LD_LIBRARY_PATH, and PYTHONPATH.
These environment variables are interpreted front-to-back, which implies priorities
and can easily lead to resources from one module overshadowing those from another when they use the same name.

In particular, a Python suite with an included MPI runtime makes parallel computing easily accessible under Python,
but this means a "mere python module" can clash with other MPI implementations used on Carbon.
Loading a module for a Python suite that contains MPI and a separate MPI module at the same time can be done but then requires more detail for the MPI launcher in job scripts.
Without that, non-obvious failures will result for either bundled parallel applications within the Python suite or (worse) unrelated compiled applications on Carbon.

Caution: Avoid loading modules at the same time for both a Python suite with an included MPI and a separate MPI implementation, especially in your dot-files (.bashrc, .modules-el*).

Various workarounds for MPI clashes exist:

• Altering the module load order.
• Launching the non-python MPI variant with qualified paths like $FOO_HOME/bin/mpirun.
• If MPI is not needed on the Python side, use a custom virtual environment that has MPI excluded (described in the next section).


|--------------------------- ## Python suites with customized package set

Packages from nanoscience-related domains are typically not included in vendor-distributed suites.
On Carbon, a set of virtual environments is routinely provided for each vendor distribution,
with a growing list of such packages added on and ready to use.

To request a custom environment or that packages be added to an existing environment, please contact [email protected] (https://wiki.anl.gov/cdn-cgi/l/email-protection).

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Mailing lists


|--------------------------- ## Contents

1. 1 Introduction
2. 2 Unsubscribe instructions
 2.1. 2.1 If you can still send mail from your subscription address
 2.2. 2.2 If you no longer can send from your subscribed address
3. 3 Administrative Interfaces
4. 4 Further Documentation


|--------------------------- ## Introduction

When you start using Carbon, you will automatically be enrolled in an announcement mailing list named cnm-hpc-ann, using the email address you chose to communicate with the CNM.

The same address will also be stored on Carbon, and used there for mails about job completion, aborts, and other errors.


|--------------------------- ## Unsubscribe instructions

Like in other mailing list managers, you can initiate requests by email. An alternative web interface, unfortunately, is only reachable inside Argonne.

To unsubscribe from Carbon's announcement mailing list by email, send a message to a special list management address.
A moment later, you will receive a confirmation mail, to prevent unauthorized removals.
Confirm your intent at the link therein.


|--------------------------- ### If you can still send mail from your subscription address

Select one of these links. Your mail program will open so send a new mail. If you have more than one mail account, select the one you used to subscribe.

• cnm-hpc-announce-leave (https://wiki.anl.gov/cdn-cgi/l/email-protection). This is a single-purpose address. Leave subject and body blank.
• cnm-hpc-announce-request (https://wiki.anl.gov/cdn-cgi/l/email-protection). Leave the subject blank and send this command in the mail body:

  unsubscribe


|--------------------------- ### If you no longer can send from your subscribed address

From one of your current account, use an advanced form of the unsubscribe command above and specify your old address as a parameter:

• cnm-hpc-announce-request (https://wiki.anl.gov/cdn-cgi/l/email-protection).

  unsubscribe [email protected]




|--------------------------- ## Administrative Interfaces

• https://lists.anl.gov/mailman/admin/cnm-hpc-announce
• https://lists.anl.gov/mailman/admin/cnm-hpc-discuss


|--------------------------- ## Further Documentation

The list management addresses is the regular list address appended by -request or -leave before the @-sign. Full documentation for GNU Mailman (http://www.list.org/):

• Simple unsubscribe (http://www.list.org/mailman-member/node14.html)
• Email commands quick reference (http://www.list.org/mailman-member/node41.html)


|--------------------------- # Nanofabrication/Equipment/Oxford ICP and RIE etching system


|----------------------------- # Nanofabrication/Equipment


|----------------------------- ## Contents

1. 1 Lithographic Tools
2. 2 Plasma and Reactive Ion Etching
3. 3 Wet Processing
4. 4 Deposition
5. 5 Nanocarbon Synthesis Facilities
6. 6 Metrology
7. 7 Misc Tools
8. 8 Electrical Test and Characterization


|----------------------------- ## Lithographic Tools

• (https://wiki.anl.gov/cnm/File:LaserWriter.jpg)


|------------------------------- # User contributions for Csmiller


|-------------------------------- # Uploads by Csmiller

This special page shows all uploaded files.

Date                     Name                             Thumbnail Size    Description                       Versions
----------------------------------------------------------------------------------------------------------------------
15:36, December 7, 2020  Filmetrics.jpg (file)                      188 KB                                    1
17:05, November 25, 2020 ICPRIE.JPG (file)                          2.35 MB                                   1
16:50, November 25, 2020 March1.jpg (file)                          1.07 MB                                   1
19:26, November 24, 2020 CPD.JPG (file)                             1.84 MB                                   1
21:06, November 23, 2020 Orange Box.jpg (file)                      2.29 MB                                   1
21:03, November 23, 2020 IMG 0045.JPG (file)                        1.94 MB                                   1
21:01, November 23, 2020 IMG 0996.JPG (file)                        2.36 MB                                   1
20:58, November 23, 2020 IMG 0993.JPG (file)                        2.98 MB JEOL                              1
20:33, November 23, 2020 IMG 0941.JPG (file)                        2.41 MB ICP CVD                           1
20:22, November 23, 2020 IMG 0974.JPG (file)                        2.64 MB Small AJA                         1
20:21, November 23, 2020 IMG 0970.JPG (file)                        2.74 MB AJA Oxide                         1
20:15, November 23, 2020 IMG 0962.JPG (file)                        2.14 MB TencorP7 3d                       1
19:49, November 23, 2020 IMG 0064.JPG (file)                        1.85 MB Lamda                             1
19:41, November 23, 2020 LaserWriter.jpg (file)                     1.99 MB                                   1
19:00, November 23, 2020 Sputtercoater.jpg (file)                   1.3 MB                                    1
18:57, November 23, 2020 IMG 0956.JPG (file)                        2.28 MB ADT dicing saw mounting system    1
18:56, November 23, 2020 IMG 0963.JPG (file)                        3.08 MB Keyence Laser Confocal Microscope 1
18:54, November 23, 2020 IMG 0971.JPG (file)                        2.61 MB Evaporator                        1
18:52, November 23, 2020 IMG 0955.JPG (file)                        2.55 MB ADC Dicing Saw                    1
18:50, November 23, 2020 IMG 0983.JPG (file)                        2.69 MB FIB                               1
18:44, November 23, 2020 IMG 0981.JPG (file)                        2.53 MB                                   1
22:31, November 19, 2020 Photoresist 03302020.xlsx (file)           16 KB                                     1


|---------------------------------- # Nanofabrication/Equipment/Filmetrics


|---------------------------------- ## Features

  <image 400px-Filmetrics.jpg: The instrument is located in the clean room,>


|---------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials and sizes.

  <image 180px-Filmetrics.jpg: >


|---------------------------------- # Nanofabrication/Equipment/Oxford ICP etching system


|---------------------------------- ### None

  <image 400px-ICPRIE.JPG: ICPRIE.JPG>


|---------------------------------- ### Features

1. The gases available for the ICP – Chlorine chamber are: Ar, O2, Cl2, BCl3, CO, SF6, CHF3, and HBr.
2. The gases available for the RIE – Fluorine chamber are: Ar, O2, CF4, CH4, SF6, CHF3, HCFC-124, and H2.
3. For Process Station ICP 180 the typical process operating ranges are:
 3.1. base pressure = 10-6 Torr
 3.2. total gas flows = 10 to 200 sccm
 3.3. pressure = 1 to 60 mT
 3.4. RF power = 5W to 300 W
 3.5. ICP power = 200W to 3000W
 3.6. He pressure = 0 to 30 Torr
 3.7. Temperature = -130oC to 600oC
 3.8. Liquid Nitrogen for temperature control
4. For Process Station RIE the typical process operating ranges are:
 4.1. base pressure = 10-6 Torr
 4.2. total gas flows = 10 to 150 sccm
 4.3. pressure = 5 to 500 mT
 4.4. RF power = 20W to 600 W
 4.5. He pressure = 0 to 30 Torr


|---------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal

  <image 180px-ICPRIE.JPG: >


|---------------------------------- # Nanofabrication/Equipment/REACTIVE ION ETCHERS


|---------------------------------- ### March RIE etchers

  <image 400px-March1.jpg: March1.jpg>

• There are two systems CS-1701 RIE, one for fluorinated gases and one for chlorinated gases. The operational procedure is identical for both systems and they can be used in the same time.
• The CS-1701 RIE consists of two modules: a reaction chamber/process controller (base pressure 50 mT) and a solid state RF power generator (max. 600 W).
• The process controller monitors and regulates the variable parameters of the plasma process, including chamber pressure, RF power level, process time, and gas flow rates.
 • The gases for the RIE – Fluorine chamber are: Ar, O2, CF4, H2, and SF6. The estimated etch rate are: TiW: 5,000 Å/min, SiO2: 3,000 – 7,000 Å/min.
 • The gases for the RIE – Chlorine chamber are: Ar, O2, Cl2, H2, and CH4. The estimated etch rate are: Al: 1μm/min, GaAs: 1μm/min.




|---------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 180px-March1.jpg: >


|---------------------------------- # Nanofabrication/Equipment/Critical Point Dryer


|---------------------------------- ## Contents

• 1 Critical Point Dryer
• 2 Features
• 3 Applications
• 4 Specifications
• 5 User Proposal Feasibility


|---------------------------------- ## Critical Point Dryer

The CPD 030 Critical Point Dryer is an efficient method of drying delicate samples without damaging its structure through surface tension that occurs when changing from the liquid to the gaseous phase.

  <image 400px-CPD.JPG: ,>




|---------------------------------- ## Features

• Integrated heating and refrigeration
• Easy to use interface
• Low CO2 consumption


|---------------------------------- ## Applications

• Critical point CO2 drying of delicate samples
• Low CO2 consumption


|---------------------------------- ## Specifications

• 40mm x 36mm chamber size
• 70ml CO2 capacity
• Up to 150 bar chamber pressure
• Cooling: 2-12C
• Heating: 30-45C


|---------------------------------- ## User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes

• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 180px-CPD.JPG: >


|---------------------------------- # Nanofabrication/Equipment/Interferometric


|---------------------------------- ## Interferometric Lithography system

  <image 400px-Orange_Box.jpg: The instrument is located in the clean room, room C118>




|---------------------------------- ## Features

The instrument is located in the CNM clean room.




|---------------------------------- ## User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Information about the intended patterns (shapes, sizes, distances, area coverage)
• Important pattern quality requirements (if any)
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 180px-Orange_Box.jpg: >


|---------------------------------- # Nanofabrication/Equipment/LVEBL


|---------------------------------- ## Raith 30 KV Ebeam Lithography System

The Raith is a 30KV electron beam lithography tool.

  <image 400px-IMG_0045.JPG: IMG 0045.JPG>

  <image 400px-IMG_0996.JPG: IMG 0996.JPG>


|---------------------------------- ### Features

• 30 kV electron beam column

The instrument is located in the CNM clean room


|---------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Information about the intended patterns (shapes, sizes, distances, area coverage)
• Important pattern quality requirements (if any)
• Number of samples to process or number of times of instrument usage

  <image 180px-IMG_0045.JPG: >

  <image 180px-IMG_0996.JPG: >


|---------------------------------- # Nanofabrication/Equipment/HVEBL

  <image 400px-IMG_0993.JPG: The instrument is located in the clean room, room C118>


|---------------------------------- ## Features

The instrument is located in the CNM clean room.




|---------------------------------- ## User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Information about the intended patterns (shapes, sizes, distances, area coverage)
• Important pattern quality requirements (if any)
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 180px-IMG_0993.JPG: >


|---------------------------------- # Nanofabrication/Equipment/ICP-CVD Deposition System


|---------------------------------- ## ICP - CVD Deposition System System

  <image 400px-IMG_0941.JPG: The instrument is located in the clean room,>




|---------------------------------- ### Features

Plasmalab System 100 is configured for ICP-CVD deposition of amorphous Si, SiNx, SiO2, SiC, and TEOS. This tool can process 200 mm wafers at temperatures up to 400 °C with a loadlock for higher quality film depositions. The ICP power creates volatile deposition species at lower temperatures with film deposition occurring at substrate temperatures as low as 80 °C.




|---------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Temperature compatibility of samples.
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 180px-IMG_0941.JPG: >


|---------------------------------- # Nanofabrication/Equipment/ Metal Sputter System


|---------------------------------- ## None

  <image 400px-IMG_0974.JPG: The instrument is located in the clean room,>




|---------------------------------- ### Features

The AJA general sputtering tool is an on-axis magnetron sputtering tool. The tool has 3, 2” diameter targets with multiple degrees of freedom (tilt, z-axis position), heating capabilities up to 800 °C across a 150 mm wafer, 1-RF and 3-DC sources, a load lock system, and computer automated control. This tool provides fast deposition rates for both metals (DC sputtering) and oxides (RF sputtering) because of the 2” target sizes.


|---------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Temperature compatibility of samples.
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

• Pages with broken file links (https://wiki.anl.gov/wiki_cnm/index.php)

  <image 180px-IMG_0974.JPG: >


|---------------------------------- # Nanofabrication/Equipment/AJA Oxide Sputter System


|---------------------------------- ## AJA Oxide Sputtering System

  <image 400px-IMG_0970.JPG: The instrument is located in the clean room,>




|---------------------------------- ### Features

The AJA oxide sputtering tool is a magnetron sputtering tool. The tool has 3” diameter targets, heating capabilities up to 800 °C across a 200 mm wafer, RF and DC sources, an automated load lock system, and computer automated control. This tool provides fast deposition rates for oxides (3 off-axis RF sputtering guns) because of the large target sizes and provides high fidelity oxide depositions because of the off-axis gun alignment. The tool has 2 on-axis DC sputtering guns for the deposition of metallic electrodes and adhesion layers.




|---------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Temperature compatibility of samples.
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 180px-IMG_0970.JPG: >


|---------------------------------- # Nanofabrication/Equipment/Surface Profilometer

  <image 400px-IMG_0962.JPG: IMG 0962.JPG>


|---------------------------------- ## Features


|---------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes

  <image 180px-IMG_0962.JPG: >


|---------------------------------- # Nanofabrication/Equipment/MPCVD

  <image 400px-IMG_0064.JPG: IMG 0064.JPG>


|---------------------------------- ## Features

Diamo Tek 1800 is a 915 MHz microwave plasma CVD system from Lambda Technologies Inc.(www.microcure.com) for synthesis of diamond thin films over large area(up to 200 mm diameter. The
system is fully automated and custom built to operate in the clean room environment. The unique patented design of the tunable resonant cavity microwave reactor allows unprecedented
thickness uniformity of diamond thin films on a Silicon wafers ranging from 4" to 8" diameter.
[edit] Features

• Microwave frequency: 915 MHz, Power: 1kW-10kW
• Substrate heater range: 50-750 C
• Substrate size: 4"-8" diameter wafer
• Ability to synthesize Nitrogen doped diamond thin films
• In-situ Optical emission spectroscopy to monitor gas species in real-time

The instrument is located in the CNM clean room C129.


|---------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Deposition temperature
• Type of diamond films: For example, Microcrystalline, Nanocrystalline or Ultrananocrystalline etc.
• Undoped or Nitrogen doped
• Number of depositions including film thickness

  <image 180px-IMG_0064.JPG: >

  <image 180px-LaserWriter.jpg: >


|---------------------------------- # Nanofabrication/Equipment/SmallSputter

• (https://wiki.anl.gov/cnm/File:Sputtercoater.jpg)

  <image 120px-Sputtercoater.jpg: Sputtercoater.jpg>

  <image 180px-Sputtercoater.jpg: >


|---------------------------------- # Nanofabrication/Equipment/Wafer Dicing Saw



  <image 400px-IMG_0955.JPG: ADT 7200 Dicing Saw>

  <image 400px-IMG_0956.JPG: Wafer Mounting System>


|---------------------------------- ## Contents

• 1 Dicing Saw
 • 1.1 Features
 • 1.2 Thing to know
 • 1.3 Dicing Blades
 • 1.4 User Proposal Feasibility


|---------------------------------- ## Dicing Saw

The ADT7200 Dicing saw is a semiautomatic saw that can cut up from small pieces to a 200mm silicon wafer.




|---------------------------------- ### Features

• 8 Inch Chuck

materials cut: Silicon, Glass, Sapphire, Quartz, STO


|---------------------------------- ### Thing to know

1. Each user should know or do the following before cutting or requesting staff assistance in cutting:
2. Substrate thickness and composition.
3. Blue dicing tape thickness: 75 microns (other tape may be a different thickness).
4. Spin thin photoresist layer to protect surface if needed.
5. Index for all angles
6. Where markers are located
7. No GaAs, PZT, or heavy metals are allowed.


|---------------------------------- ### Dicing Blades


|---------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials
• Layout Drawing
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 180px-IMG_0956.JPG: >

  <image 180px-IMG_0963.JPG: >


|---------------------------------- # Nanofabrication/Equipment/ PVD


|---------------------------------- ## FC2000 Electron Beam Evaporator

  <image 400px-IMG_0971.JPG: The instrument is located in the clean room, room C118>




|---------------------------------- ### Features

Metals Sources always available: Ti, Cr, Au, Pt, Al - direct in pocket;
Optional : Silver, Pd (in crucible)

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Temperature compatibility of samples.
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 180px-IMG_0971.JPG: >

  <image 180px-IMG_0955.JPG: >


|---------------------------------- # Nanofabrication/Equipment/FIB


|---------------------------------- ## FEI Nova 600 NanoLab

  <image 400px-IMG_0983.JPG: The instrument is located in the clean room, room C116>

The FEI Nova 600 NanoLab is a dual-beam instrument that integrates ion and electron beams for focused-ion-beam (FIB) and scanning electron microscope (SEM) functionality in one machine. Users can switch between the two beams for quick and accurate navigation and processing. Convergence of the SEM and FIB at short working distance allows precision milling, etching and deposition at high resolution.


|---------------------------------- ## Features

1. 30 kV Sidewinder Ga+ ion column, 1.5 pA to 20 nA, 1 kV to 30 kV
2. 30 kV Sirion electron column, 500 V to 30 kV
3. Secondary electron, limited backscattered electron, and secondary ion imaging
4. Gas injection systems: platinum, tungsten, TEOS, carbon
5. Micromanipulator from Omniprobe: Autoprobe 200
6. Raith Elphy lithography system set up for ion-beam lithography

The instrument is located in the CNM clean room.




|---------------------------------- ## User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Information about the intended patterns (shapes, sizes, distances, area coverage)
• Important pattern quality requirements (if any)
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 180px-IMG_0983.JPG: >


|---------------------------------- # Nanofabrication/Equipment/MLA

  <image 400px-IMG_0981.JPG: The instrument is located in the clean room, room C118>


|---------------------------------- ## Features

The instrument is located in the CNM clean room.




|---------------------------------- ## User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Information about the intended patterns (shapes, sizes, distances, area coverage)
• Important pattern quality requirements (if any)
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 180px-IMG_0981.JPG: >

  <image fileicon.png: >


|-------------------------------- # All public logs

Combined display of all available logs of CNM Wiki.
You can narrow down the view by selecting a log type, the username (case-sensitive), or the affected page (also case-sensitive).

1. 15:36, December 7, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Filmetrics.jpg (https://wiki.anl.gov/cnm/File:Filmetrics.jpg)
2. 17:05, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:ICPRIE.JPG (https://wiki.anl.gov/cnm/File:ICPRIE.JPG)
3. 16:50, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:March1.jpg (https://wiki.anl.gov/cnm/File:March1.jpg)
4. 16:50, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs deleted page File:March.JPG (https://wiki.anl.gov/wiki_cnm/index.php) (editing pic)
5. 16:46, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:March.JPG (https://wiki.anl.gov/wiki_cnm/index.php)
6. 19:26, November 24, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:CPD.JPG (https://wiki.anl.gov/cnm/File:CPD.JPG)
7. 21:06, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Orange Box.jpg (https://wiki.anl.gov/cnm/File:Orange_Box.jpg)
8. 21:03, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0045.JPG (https://wiki.anl.gov/cnm/File:IMG_0045.JPG)
9. 21:01, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0996.JPG (https://wiki.anl.gov/cnm/File:IMG_0996.JPG)
10. 20:58, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0993.JPG (https://wiki.anl.gov/cnm/File:IMG_0993.JPG) (JEOL)
11. 20:33, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0941.JPG (https://wiki.anl.gov/cnm/File:IMG_0941.JPG) (ICP CVD)
12. 20:22, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0974.JPG (https://wiki.anl.gov/cnm/File:IMG_0974.JPG) (Small AJA)
13. 20:21, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0970.JPG (https://wiki.anl.gov/cnm/File:IMG_0970.JPG) (AJA Oxide)
14. 20:15, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0962.JPG (https://wiki.anl.gov/cnm/File:IMG_0962.JPG) (TencorP7 3d)
15. 19:49, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0064.JPG (https://wiki.anl.gov/cnm/File:IMG_0064.JPG) (Lamda)
16. 19:41, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:LaserWriter.jpg (https://wiki.anl.gov/cnm/File:LaserWriter.jpg)
17. 19:00, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Sputtercoater.jpg (https://wiki.anl.gov/cnm/File:Sputtercoater.jpg)
18. 18:57, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0956.JPG (https://wiki.anl.gov/cnm/File:IMG_0956.JPG) (ADT dicing saw mounting system)
19. 18:56, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0963.JPG (https://wiki.anl.gov/cnm/File:IMG_0963.JPG) (Keyence Laser Confocal Microscope)
20. 18:54, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0971.JPG (https://wiki.anl.gov/cnm/File:IMG_0971.JPG) (Evaporator)
21. 18:52, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0955.JPG (https://wiki.anl.gov/cnm/File:IMG_0955.JPG) (ADC Dicing Saw)
22. 18:50, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0983.JPG (https://wiki.anl.gov/cnm/File:IMG_0983.JPG) (FIB)
23. 18:44, November 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 0981.JPG (https://wiki.anl.gov/cnm/File:IMG_0981.JPG)
24. 22:31, November 19, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Csmiller (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Photoresist 03302020.xlsx (https://wiki.anl.gov/cnm/File:Photoresist_03302020.xlsx)


|------------------------------- #### June 3, 2021

1. 19:3519:35, June 3, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −168‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎ →‎Nanofabrication
current
2. 19:1619:16, June 3, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −15‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎ Undo revision 6935 by Csmiller (talk)
Tag: Undo
3. 19:1419:14, June 3, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +15‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎ →‎Nanofabrication
4. 19:1119:11, June 3, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +159‎ 
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ →‎Patterning
current
5. 19:0819:08, June 3, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +100‎ 
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ →‎Patterning
6. 19:0519:05, June 3, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +22‎ 
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ →‎Patterning
7. 19:0319:03, June 3, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −3‎ 
Nanofabrication/Equipment/MA6 (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/MA6)
‎ →‎Features
current
8. 19:0219:02, June 3, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1,116‎  N
MA6 (https://wiki.anl.gov/cnm/MA6)
‎ Created page with "== Features == * Front Side Alignment / Front to Back side Alignment * Exposure Optics: UV400 Lamp 350 Watts * UV lamp spectral Lines (nanometers): ** 436 g-line ** 405 h-li..."
current
9. 19:0119:01, June 3, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −10‎ 
Nanofabrication/Equipment/MA6 (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/MA6)
‎ →‎MA6/BA6 Contact Aligner


|-------------------------------- # Nanofabrication/Equipment/MA6




|-------------------------------- ## None


|-------------------------------- ## Features

1. Front Side Alignment / Front to Back side Alignment
2. Exposure Optics: UV400 Lamp 350 Watts
3. UV lamp spectral Lines (nanometers):
 3.1. 436 g-line
 3.2. 405 h-line
 3.3. 365 i-line

• Filters available for g-line and i-line.
• The aligner can be operated at constant illumination (intensity 25 mw/CI2 and 13mW/CI1) or constant power CP.
• Mask Size: Various sizes available: 3x3, 4x4, 5x5, 7x7
• Wafer Size: Various Size chucks are available for users: 2", 3", 4", 6".
• Programs Description/Resolution

1. 
 1.1. Soft contact A slight mechanical pressure is applied to produce contact.
  1.1.1. 2 μ line resolution
 1.2. Hard Contact Mechanical and Pneumatic pressure is applied to produce contact.
  1.2.1. 1 μ line resolution
 1.3. Vacuum/LowVac The contact between mask and wafer is optimized by evacuating the gap between the wafer and the mask.
  1.3.1. 0.8 μ line resolution
 1.4. Flood Exposure: Available as a Lamp Test.

  * Alignment tolerance: This depends on the program, photoresist, user experience, and wafer topography. On low vacuum or vacuum contact using a thin resist 0.5 μ alignment tolerance is achievable.


|-------------------------------- ## User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Information about the intended patterns (shapes, sizes, distances, area coverage)
• Do you have your own mask?
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.


|------------------------------- #### June 2, 2021

1. 20:3420:34, June 2, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +7‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎ →‎test new
2. 20:3320:33, June 2, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −76‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎ →‎CNM Cleanroom
3. 20:3220:32, June 2, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +2,461‎  N
Photoresist (https://wiki.anl.gov/cnm/Photoresist)
‎ Created page with " :Kayakuam :[https://kayakuam.com/wp-content/uploads/2019/09/S1800-G2.pdf] is the supplier of our Shipley 1800's, MicroResist Technology, SU8, LOR, SPR, and PMMA photoresists,..."
current
4. 20:2820:28, June 2, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +17‎ 
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ →‎Patterning
5. 20:2720:27, June 2, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −17‎ 
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ →‎Patterning
6. 20:2720:27, June 2, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +17‎ 
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ →‎Patterning
7. 20:2620:26, June 2, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −70‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎ →‎CNM Cleanroom
8. 20:2520:25, June 2, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +16‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎ →‎test new
9. 20:2420:24, June 2, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −69‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎ →‎CNM Cleanroom


|------------------------------- #### June 1, 2021

1. 21:3321:33, June 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +2‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎ →‎test new
2. 21:3021:30, June 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +117‎  N
Hotplate (https://wiki.anl.gov/cnm/Hotplate)
‎ Created page with "* Optical Hotplates ** Typical temperatures are 90C and 115C *EBL Hotplate ** Typical Temperatures are 150C and 180C"
current
3. 21:2821:28, June 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +125‎  N
Ovens (https://wiki.anl.gov/cnm/Ovens)
‎ Created page with "* YES Oven ** Adhesion promotion ** Vacuum Bake * Image Reversal ** Reversal positive photoresist to negative ** vacuum bake"
current
4. 21:1821:18, June 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −69‎ 
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ →‎Patterning
5. 21:1521:15, June 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −27‎ 
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ →‎Patterning
6. 21:1321:13, June 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +216‎ 
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ →‎Patterning
7. 21:0821:08, June 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +41‎ 
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ →‎Patterning
8. 21:0121:01, June 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +47‎  N
Patterning (https://wiki.anl.gov/cnm/Patterning)
‎ Created page with "== Patterning == <gallery> File:LaserWriter.jpg"
9. 20:4520:45, June 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +96‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎No edit summary
10. 20:3720:37, June 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +23‎ 
Nanofabrication (https://wiki.anl.gov/cnm/Nanofabrication)
‎ →‎CNM Cleanroom


|------------------------------- #### January 29, 2021

• 00:4000:40, January 29, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +21‎ 
Nanofabrication/Equipment/Wafer Dicing Saw (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Wafer_Dicing_Saw)
‎ →‎Dicing Saw
current


|------------------------------- #### January 8, 2021

• 21:4721:47, January 8, 2021 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +403‎ 
Nanofabrication/Equipment/Wafer Dicing Saw (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Wafer_Dicing_Saw)
‎ →‎Dicing Saw


|------------------------------- #### December 7, 2020

1. 16:2216:22, December 7, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +25‎ 
Nanofabrication/Equipment/Filmetrics (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Filmetrics)
‎No edit summary
current
2. 16:1216:12, December 7, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +57‎ 
Nanofabrication/Equipment/Filmetrics (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Filmetrics)
‎No edit summary
3. 15:3615:36, December 7, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  N
File:Filmetrics.jpg (https://wiki.anl.gov/cnm/File:Filmetrics.jpg)
‎No edit summary
current
4. 15:1115:11, December 7, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −5‎ 
Nanofabrication/Equipment/Filmetrics (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Filmetrics)
‎ →‎User Proposal Feasibility
5. 15:1015:10, December 7, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +191‎  N
Nanofabrication/Equipment/Filmetrics (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Filmetrics)
‎ Created page with "==Features== ===User Proposal Feasibility=== When requesting the use of this instrument, please provide the following information in your user proposal: * Sample materials..."
6. 15:0815:08, December 7, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +63‎ 
Nanofabrication/Equipment (https://wiki.anl.gov/cnm/Nanofabrication/Equipment)
‎ →‎Metrology
current


|------------------------------- #### November 25, 2020

1. 17:2817:28, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1‎ 
Nanofabrication/Equipment (https://wiki.anl.gov/cnm/Nanofabrication/Equipment)
‎ Undo revision 6737 by Csmiller (talk)
Tag: Undo
2. 17:2717:27, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −1‎ 
Nanofabrication/Equipment (https://wiki.anl.gov/cnm/Nanofabrication/Equipment)
‎ →‎Plasma and Reactive Ion Etching
3. 17:2617:26, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +78‎ 
Nanofabrication/Equipment (https://wiki.anl.gov/cnm/Nanofabrication/Equipment)
‎ →‎Plasma and Reactive Ion Etching
4. 17:2317:23, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +315‎ 
Nanofabrication/Equipment/Oxford ICP etching system (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Oxford_ICP_etching_system)
‎No edit summary
current
5. 17:2117:21, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +33‎ 
Nanofabrication/Equipment/Oxford ICP etching system (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Oxford_ICP_etching_system)
‎No edit summary
6. 17:1817:18, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −4‎ 
Nanofabrication/Equipment/Oxford ICP etching system (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Oxford_ICP_etching_system)
‎ →‎Features
7. 17:1717:17, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +61‎ 
Nanofabrication/Equipment/Oxford ICP etching system (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Oxford_ICP_etching_system)
‎No edit summary
8. 17:1517:15, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +25‎ 
Nanofabrication/Equipment/REACTIVE ION ETCHERS (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/REACTIVE_ION_ETCHERS)
‎No edit summary
current
9. 17:1417:14, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1,259‎  N
Nanofabrication/Equipment/Oxford ICP etching system (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Oxford_ICP_etching_system)
‎ Created page with "===Features=== :PlasmaLab System 100 (Oxford Instruments) located in C122. The system comprises two process stations (Process Station 1 (ICP 180) dedicated to chlorine-based e..."
10. 17:1117:11, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −16‎ 
Nanofabrication/Equipment (https://wiki.anl.gov/cnm/Nanofabrication/Equipment)
‎ →‎Plasma and Reactive Ion Etching
11. 17:0717:07, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −30‎ 
Nanofabrication/Equipment/Oxford ICP and RIE etching system (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/Oxford_ICP_and_RIE_etching_system)
‎No edit summary
current
12. 17:0517:05, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  N
File:ICPRIE.JPG (https://wiki.anl.gov/cnm/File:ICPRIE.JPG)
‎No edit summary
current
13. 16:5116:51, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −18‎ 
Nanofabrication/Equipment/REACTIVE ION ETCHERS (https://wiki.anl.gov/cnm/Nanofabrication/Equipment/REACTIVE_ION_ETCHERS)
‎No edit summary
14. 16:5016:50, November 25, 2020 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  N
File:March1.jpg (https://wiki.anl.gov/cnm/File:March1.jpg)
‎No edit summary
current


|------------------------------- # Nanofabrication/Equipment/Laserwriter

  <image 400px-LaserWriter.jpg: The instrument is located in the clean room, room C118>


|------------------------------- ## Laser Writer


|------------------------------- ### Features

• The laser radiation is sent onto the substrate through a final focusing lens placed in the upper part of the work chamber.
• The operator can choose among the following stop positions:

  - Low resolution lens (NA limited to 0.12). This position is usually used for large field substrate inspection and not for writing, as the low NA value lens corresponds to a minimum achievable linewidth around 8 μm, which is too large for most applications.
   - Medium resolution lens, with NA = 0.25. Besides surface inspection, this position can be used for writing. This medium resolution lens allows aminimum linewidth of about 4 μm.
   - High resolution lens, with NA = 0.4. Besides surface inspection, this position is well suited for writing, because it allows a linewidth around 2 μm.
   - Max resolution lens (NA = 0.65). In this position writing occurs with the maximum optical resolution (1 μm linewidth or better, limited by proximity effects in the photoresist).
   - Spare position, for future optical accessories.
   - Any gdsi or cif layout can be used.




|------------------------------- ### User Proposal Feasibility

When requesting the use of this instrument, please provide the following information in your user proposal:

• Sample materials, shapes, and sizes
• Information about the intended patterns (shapes, sizes, distances, area coverage)
• Number of samples to process or number of times of instrument usage

Questions? Please contact the instrument custodian before submitting your proposal.

  <image 120px-LaserWriter.jpg: LaserWriter.jpg>


|----------------------------- ## Plasma and Reactive Ion Etching


|----------------------------- ## Wet Processing


|------------------------------ # Nanofabrication/Equipment/Wafer Priming Oven

YES Priming oven for surface preparation using HMDS to improve resist adhesion.

• Pages with broken file links (https://wiki.anl.gov/wiki_cnm/index.php)


|------------------------------ # Nanofabrication/Equipment/Process Stations


|------------------------------ ## Contents

1. 1 RESIST PREPARATION AND DEVELOPMENT
 1.1. 1.1 Vertical Laminar Flow Exhausted Clean Bench (Polypropylene)
 1.2. 1.2 Vertical Laminar Flow Exhausted Clean Bench (Polypropylene)
 1.3. 1.3 Vertical Laminar Flow Exhausted Clean Bench (Stainless Steel)
 1.4. 1.4 Vertical Laminar Flow Exhausted Clean Bench (Stainless Steel)
 1.5. 1.5 Vertical Laminar Flow Exhausted Clean Bench (Stainless Steel)
 1.6. 1.6 Vertical Laminar Flow Exhausted Clean Bench (Stainless Steel)
 1.7. 1.7 Vertical Laminar Flow Exhausted Clean Bench (Stainless Steel)
 1.8. 1.8 Vertical Laminar Flow Exhausted Clean Bench (Stainless Steel)
2. 2 WET CHEMISTRY AND ELECTROCHEMISTRY
 2.1. 2.1 Polypropylene Process Station
 2.2. 2.2 Polypropylene Process Station
 2.3. 2.3 Polypropylene Process Station
 2.4. 2.4 Polypropylene Process Station
 2.5. 2.5 Polypropylene Process Station
 2.6. 2.6 Vertical Laminar Flow Exhausted Clean Bench (Stainless Steel)


|------------------------------ # RESIST PREPARATION AND DEVELOPMENT


|------------------------------ ## None

1. Located in C112 Lithography Chemistry
2. Applications: resist development with basic solutions and anisotropic etching of Si with KOH solution
3. 72” Open Wet Bench
4. Clear eye front shield, half-hinged (resistant to bases)
5. Light switch and fan switch
6. Electrical out-lets
7. Vacuum, compressed air and nitrogen ports
8. N2 blow off gun with inline filter
9. DIW hand sprayer
10. Timers
11. One DIW gooseneck and sink
12. One DIW cascade for 6” wafer cassette and resistivity monitor, with filling switch and drain switch
13. KOH bath (hot plate, secondary container, beaker, condensor)


|------------------------------ ## None

1. Located in C112 Lithography Chemistry
2. Applications: resist development with basic solutions
3. 72” Open Wet Bench
4. Clear eye front shield, half-hinged (resistant to bases)
5. Light switch and fan switch
6. Electrical out-lets
7. Vacuum, compressed air and nitrogen ports
8. N2 blow off gun with inline filter
9. DIW hand sprayer
10. Timers
11. One DIW gooseneck and sink
12. One DIW cascade for 6” wafer cassette and resistivity monitor, with filling switch and drain switch




|------------------------------ ## None

1. Located in C112 Lithography Chemistry
2. Applications: polymers and non-standard resists coating and baking
3. 72” Open Wet Bench
4. Clear eye front shield, half-hinged (resistant to methanol, IPA, acetone, acetonitrile)
5. Light switch and fan switch
6. Electrical out-lets
7. Vacuum, compressed air and nitrogen ports
8. N2 blow off gun with inline filter
9. Timers
10. Laurell spinners
11. Hot plates
12. Lower vented storage compartment with sliding doors to store optical resist




|------------------------------ ## None

1. Located in C112 Lithography Chemistry
2. Applications: e-beam resist development, lift-off process
3. 96” Open Wet Bench
4. Clear eye front shield, half-hinged (resistant to methanol, IPA, acetone, acetonitrile)
5. Light switch and fan switch
6. Electrical out-lets
7. Vacuum, compressed air and nitrogen ports
8. N2 blow off guns with inline filter
9. DIW hand sprayers
10. One DIW gooseneck and sink
11. Timers
12. Hot plates
13. Ultrasonic bath
14. Cold development set-up




|------------------------------ ## None

1. Located in C115 Resist Preparation
2. Applications: e-beam resist annealing, resist dilution
3. 72” Open Wet Bench
4. Clear eye front shield, half-hinged (resistant to methanol, IPA, acetone, acetonitrile)
5. Light switch and fan switch
6. Electrical out-lets
7. Vacuum, compressed air and nitrogen ports
8. N2 blow off guns with inline filter
9. Timers
10. Hot plates, temperature controller




|------------------------------ ## None

1. Located in C115 Resist Preparation
2. Applications: e-beam resist coating and baking
3. 72” Open Wet Bench
4. Clear eye front shield, half-hinged (resistant to methanol, IPA, acetone, acetonitrile)
5. Light switch and fan switch
6. Electrical out-lets
7. Vacuum, compressed air and nitrogen ports
8. N2 blow off guns with inline filter
9. Timers
10. Laurell spinners
11. Hot plates
12. Lower vented storage compartment with sliding doors to store e-beam resist.




|------------------------------ ## None

1. Located in C115 Resist Preparation
2. Applications: optical resist coating and baking
3. 72” Open Wet Bench
4. Clear eye front shield, half-hinged (resistant to methanol, IPA, acetone, acetonitrile)
5. Light switch and fan switch
6. Electrical out-lets
7. Vacuum, compressed air and nitrogen ports
8. N2 blow off guns with inline filter
9. Timers
10. Laurell spinners
11. Hot plates
12. Lower vented storage compartment with sliding doors to store optical resist.




|------------------------------ ## None

1. Located in C115 Resist Preparation
2. Applications: optical resist baking
3. 72” Open Wet Bench
4. Clear eye front shield, half-hinged (resistant to methanol, IPA, acetone, acetonitrile)
5. Light switch and fan switch
6. Electrical out-lets
7. Vacuum, compressed air and nitrogen ports
8. N2 blow off guns with inline filter
9. Timers
10. Hot plates with temperature controller
11. YES Priming oven for surface preparation using HMDS to improve resist adhesion






|------------------------------ # WET CHEMISTRY AND ELECTROCHEMISTRY


|------------------------------ ## Polypropylene Process Station

1. Located in C114
2. Applications: wet etching with basic solutions
3. 72” Open Wet Bench
4. Clear eye front shield with hinged front access panels (resistant to basic solution)
5. Electrical out-lets
6. Vacuum, compressed air and nitrogen ports
7. N2 blow off guns with inline filter
8. DIW hand sprayers
9. One DIW gooseneck and sink
10. DIW dump and over flow rinse tank with programmable mode
11. Timers
12. Lower tank compartment with controlled valves to dump bases or hazardous rinse water.
13. Optional: hot plates.




|------------------------------ ## Polypropylene Process Station

1. Located in C114
2. Applications: wet etching with acidic solutions
3. 72” Open Wet Bench
4. Clear eye front shield with hinged front access panels (resistant to acidic solution)
5. Electrical out-lets
6. Vacuum, compressed air and nitrogen ports
7. N2 blow off guns with inline filter
8. DIW hand sprayers
9. One DIW gooseneck and sink
10. DIW dump and over flow rinse tank with programmable mode
11. Timers
12. Lower tank compartment with controlled valves to dump acids or hazardous rinse water.
13. Hot plates.




|------------------------------ ## Polypropylene Process Station

1. Located in C114
2. Applications: electroplating
3. 72” Open Wet Bench
4. Clear eye front shield with hinged front access panels (resistant to acidic solution)
5. Electrical out-lets
6. Vacuum, compressed air and nitrogen ports
7. N2 blow off guns with inline filter
8. DIW hand sprayers
9. One DIW gooseneck and sink
10. Timers
11. Electroplating bathes: copper, gold, nickel, platinum, chromium (hot plates, power supplies, beakers, filtration pumps)




|------------------------------ ## Polypropylene Process Station

1. Located in C114
2. Applications: electroplating, anodic bonding
3. 72” Open Wet Bench
4. Clear eye front shield with hinged front access panels (resistant to acidic and basic solution)
5. Electrical out-lets
6. Vacuum, compressed air and nitrogen ports
7. N2 blow off guns with inline filter
8. Timers
9. Anodic bonding set-up: hot plates, power supplies, stereo microscope.






|------------------------------ ## Polypropylene Process Station

1. Located in C114
2. Applications: electrochemistry analysis (scanning vibrating electrode- investigation of localized surface phenomena-such as pitting corrosion, defects in coating, inhibitor functionality, microbial influenced corrosion and inter-granular corrosion).
3. 72” Open Wet Bench
4. Clear eye front shield with hinged front access panels (resistant to basic and acidic solution)
5. Electrical out-lets
6. Vacuum, compressed air and nitrogen ports
7. N2 blow off guns with inline filter
8. DIW hand sprayers
9. One DIW gooseneck and sink
10. Timers
11. Scanning Vibrating Electrode M370




|------------------------------ ## None

1. Located in C11? UNCD seeding
2. Applications: UNCD seeding
3. 72” Open Wet Bench
4. Clear eye front shield, half-hinged (resistant to methanol, IPA, acetone, acetonitrile)
5. Light switch and fan switch
6. Electrical out-lets
7. Vacuum, compressed air and nitrogen ports
8. N2 blow off guns with inline filter
9. Timers
10. Ultrasonic bathes
11. Lower vented storage compartment with doors to store solvents.

• Pages with broken file links (https://wiki.anl.gov/wiki_cnm/index.php)


|----------------------------- ## Deposition


|----------------------------- ## Nanocarbon Synthesis Facilities


|------------------------------ # Nanofabrication/Equipment/ Seeding Station for UNCD Deposition


|------------------------------ ## Seeding Station for UNCD Depostion


|------------------------------ ## Features

• 2 Ultrasonic baths (1 large and 1 small)
• Solvents for seeding

• Pages with broken file links (https://wiki.anl.gov/wiki_cnm/index.php)


|----------------------------- ## Metrology


|----------------------------- ## Misc Tools




|----------------------------- ## Electrical Test and Characterization


|--------------------------- ## None

  <image 400px-ICPRIE.JPG: ICPRIE.JPG>




|--------------------------- ### Features

1. The gases available for the ICP Chamber 1 – Chlorine chamber are: Ar, O2, Cl2, BCl3, CO, SF6, CHF3, and HBr.
2. The gases available for the ICP Chamber 3 – Fluorine chamber are: Ar, O2, CF4, CH4, SF6, CHF3, HCFC-124, and H2.
3. For Process Station ICP 180 the typical process operating ranges are:
 3.1. base pressure = 10-6 Torr
 3.2. total gas flows = 10 to 200 sccm
 3.3. pressure = 1 to 60 mT
 3.4. RF power = 5W to 300 W
 3.5. ICP power = 200W to 3000W
 3.6. He pressure = 0 to 30 Torr
 3.7. Temperature = -130oC to 600oC
 3.8. Liquid Nitrogen for temperature control
4. For Process Station RIE the typical process operating ranges are:
 4.1. base pressure = 10-6 Torr
 4.2. total gas flows = 10 to 150 sccm
 4.3. pressure = 5 to 500 mT
 4.4. RF power = 20W to 600 W
 4.5. He pressure = 0 to 30 Torr
 4.6. Temperature = -130oC to 600oC
 4.7. Liquid Nitrogen for temperature control
5. The operational procedure is identical for both stations and only one station can be used at a time.


|--------------------------- # Nanofabrication/Photoresist





Resist Name       Photoresist Type Tk/Flavor               Developer                          Strippers           Optical (MA6, Stepper) Laser Writer EBEAM Lith. (JEOL, RAITH) Process Data Sheet
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1800 Series       positive         1805, 1813, 1818        351 Dev: H20 (1:4) ratios can vary Acetone/IPA or 1165 yes                    yes                                    https://kayakuam.com/wp-content/uploads/2019/09/S1800-G2.pdf
AZ P4620          positive         1700 - 2600 nm          351 Dev: H20 (1:4) ratios can vary Acetone/IPA or 1165 yes                    yes
SPR 220 series    positive         3, 7 i-line photoresist CD26                               Acetone/IPA or 1165 yes                    yes                                    https://kayakuam.com/wp-content/uploads/2019/10/SPR_220_DATA_SHEET_RH.pdf
SPR 955-CM Series positive         nm                      CD26                               Acetone/IPA or 1165 yes                    yes(MLA)                               https://kayakuam.com/products/megaposit-spr955-cm-series-high-resolution-i-line-photoresists/
LOR 3A, 30B       positive         nm                      CD26                               Acetone/IPA or 1165 yes                    yes                                    https://kayakuam.com/wp-content/uploads/2019/09/KAM-LOR-PMGI-Data-Sheet-11719.pdf
AZ nLOF 2000      negative                                 351 Dev: H20 (1:3) ratios can vary Acetone/IPA or 1165                                     yes
ma-N 1400 Series  negative                                 Ma-D 355                           Acetone/IPA or 1165                                     yes                       https://kayakuam.com/wp-content/uploads/2019/09/ma-N-1400-400-overview.pdf%7C
SU8               negative                                 SU8 Developer                      Acetone/IPA or 1165 yes                    yes (MLA)    yes                       https://kayakuam.com/wp-content/uploads/2020/09/KAM-SU-8-2-25-Datasheet-9.3.20-final.pdf%7C
SU8 3000          negative                                 SU8 Developer                      Acetone/IPA or 1165 yes                    yes (MLA)    yes
ZEP               positive                                 MIBK: IPA 1:3                      Acetone/IPA or 1165                                     yes
PMMA 495          positive         A2, A3                  MIBK: IPA 1:3                      Acetone/IPA or 1165                                     yes                       https://kayakuam.com/wp-content/uploads/2019/09/PMMA_Data_Sheet.pdf%7C
PMMA 950          positive         A2, A3, A4, A8, A11     MIBK: IPA 1:3                      Acetone/IPA or 1165                                     yes                       https://kayakuam.com/wp-content/uploads/2019/09/PMMA_Data_Sheet.pdf%7C


|--------------------------- # Nanoprobe Scanning Quick Reference/dude


|--------------------------- ## Get the latest version at home

Go to https://hub.docker.com/r/danielzt12/dude 
check out the latest version, and specify that when executing the docker run command.
 (https://hub.docker.com/r/danielzt12/dude)


|--------------------------- ## Load data

File -> Open, point to the mda folder and click OPEN.
If you are using dude to look at data other than those acquired with the Eiger detector, change that under Settings -> Detector.


|--------------------------- ## Main interface

[1] right mouse click on the canvas or drag while clicked, show the corresponding detector images. Also work for 1D scans.
[2] when doing step [1], the motor positions and detector values are also updated , under P0 (Point 0).
[3] left mouse click on the canvas updates the position under P1 (Point 1), and calculates the distance between P1 and P0. Does not work for 1D scans.
[4] disable Auto to change the min and max of the color scale. The colormap can be changed under Settings. Toggle Log to switch between log and linear scale. Toggle Scale to show / hide the scale bar. The scaler bar is valid for the vertical axis only, and is only valid for the horizontal axis if the step size in x and y are equal.
[5] drag while clicked with left mouse button to make a rectangle on the canvas to zoom in. Scroll up and down to change the zoom. drag when zoomed to pan.
[6] click Full to reset zoom.
[7] hover on the canvas will update the pixel position and intensity values. Show calibrated angles instead by enabling "Settings -> Show Angle". This is only valid for eiger-in positions and if the angle calibration files are found under the Analysis folder. Disable and enable again if the calibration files have been changed.

[5] change here to show values from existing detector channels.
[]


|--------------------------- # Sandbox/News

1. 2021R1

1. 2021R2

1. 2021R3


|---------------------------- # EMMD/Oxide MBE

View intranet version
---------------------


|---------------------------- ## Contents

• 1 Aim
• 2 Team
• 3 Tools
• 4 Highlights
• 5 Recent Publications


|---------------------------- ## Aim

To explore emergent behavior at the interfaces between complex oxides with distinct ground states, where reconstructions of spin, lattice and charge degrees of freedom give rise to novel collective states.


|---------------------------- ## Team

  <image Oxide_mbe.jpg: >


|---------------------------- ## Tools

We have designed and commissioned an ozone-assisted molecular beam epitaxy (MBE) (http://en.wikipedia.org/wiki/Molecular_beam_epitaxy) system, capable of synthesizing complex oxides with single-atomic layer precision. The system was built by DCA Instruments (Finland) (http://www.dca.fi/).

1. Pure ozone as the oxidizing agent
2. 10 differentially-pumped Knudsen cells (http://en.wikipedia.org/wiki/Knudsen_Cell)
3. 3-pocket electron-beam sources
4. In situ reflection high energy electron diffraction (RHEED) (http://en.wikipedia.org/wiki/RHEED)
5. Atomic flux monitoring by quartz crystal monitor
6. Atomic Absorption Spectroscopy (http://en.wikipedia.org/wiki/Atomic_absorption_spectroscopy) for real time in situ flux monitoring




|---------------------------- ## Highlights

CNM News: Frontiers of Complex Oxides Workshop -- Poster Prize (http://nano.anl.gov/news/highlights/2008_mbe.html)

  <image 400px-Oxide_TEM.jpg: >

  <image 450px-ToCfigure.jpg: >




|---------------------------- ## Recent Publications

• S. J. May, T. S. Santos and A. Bhattacharya, "Onset of Metallic Behavior in Strained (LaNiO3)n/(SrMnO3)2 Superlattices," submitted to Phys. Rev. B

• Tiffany S. Santos, Steven J. May, J. Lee Robertson and Anand Bhattacharya, "Stabilizing an Antiferromagnetic Metal in La1-xSrxMnO3 by Digital Synthesis, manuscript in preparation

• S. J. May, A. B. Shah, S. G. E. te Velthuis, M. R. Fitzsimmons, J. M. Zuo, X. Zhai, J. N. Eckstein, S. D. Bader and A. Bhattacharya, "Magnetically Asymmetric Interfaces in a LaMnO3/SrMnO3 Superlattice due to Structural Asymmetries," Phys. Rev. B 77, 174409 (2008) (http://link.aps.org/doi/10.1103/PhysRevB.77.174409).

• A. Bhattacharya, S. J. May, S. G. E. te Velthuis, M. Warusawithana, X. Zhai, Bin Jiang, J.-M. Zuo, M. R. Fitzsimmons, S. D. Bader and J. N. Eckstein, "Metal-Insulator Transition and Its Relation to Magnetic Structure in (LaMnO3)2n/(SrMnO3)n Superlattices," Phys. Rev. Lett. 100, 257203 (2008) (http://link.aps.org/doi/10.1103/PhysRevLett.100.257203).

• Serban Smadici, Peter Abbamonte, Anand Bhattacharya, Xiaofang Zhai, Bin Jiang, Andrivo Rusydi, James N. Eckstein, Samuel D. Bader and Jian-Min Zuo, "Electronic Reconstruction at SrMnO3-LaMnO3 Superlattice Interfaces," Phys. Rev. Lett. 99, 196404 (2007) (http://link.aps.org/doi/10.1103/PhysRevLett.99.196404).


|---------------------------- # HPC/Application licenses


|---------------------------- ## Contents

1. 1 Introduction
2. 2 Eligible remote computers
3. 3 Configure client applications to access the license servers
 3.1. 3.1 Option 1: Single license server
 3.2. 3.2 Option 2: Redundant license servers
4. 4 Host name resolution
5. 5 Eligible user and administrator accounts
6. 6 Available license tokens
7. 7 Troubleshooting
8. 8 Applications


|---------------------------- ## Introduction

Licenses for several high-profile commercial applications are hosted on servers within the Carbon HPC cluster.
Applications consuming these licenses can run as follows:

1. On a machine outside the HPC cluster,
2. Interactively on Carbon's login nodes, either in a virtual desktop (VNC) (https://wiki.anl.gov/cnm/HPC/VNC), or displaying on your own X11 display.
3. Non-interactively (as a batch job) on Carbon's compute node.


|----------------------------- # HPC/Network Access/Virtual Desktop


|----------------------------- ## Contents

1. 1 Principle of operation
2. 2 Operating a virtual desktop session
 2.1. 2.1 Start the server
 2.2. 2.2 Forward the server's port
 2.3. 2.3 Connect with a client
 2.4. 2.4 Use the virtual desktop
 2.5. 2.5 Stop the server
3. 3 Tips
 3.1. 3.1 Avoiding multiple VNC sessions
 3.2. 3.2 Customizing the virtual desktop
 3.3. 3.3 Screen Sharing on the Mac
 3.4. 3.4 Anticipatory port forwarding
4. 4 Troubleshooting


|----------------------------- ## Principle of operation

VNC (http://en.wikipedia.org/wiki/VNC) is a multi-platform graphical remote access mechanism.
It is not as common as the X Window System (http://en.wikipedia.org/wiki/X_Window_System) that serves a similiar purpose but is more light-weight on the user side and over the network.
If you find that graphical remote use over X11 is too slow, try VNC. It operates as follows:

• You start a VNC server on a Carbon login node. This is an application process that runs under your user ID in the background and provides a virtual desktop for you.
• You need to augment your SSH connection to forward an appropriate port.
• You run a VNC client on your desktop machine and tell it to connect to the forwarded port. This will open the virtual desktop as a window on your actual desktop.
• You can stop your VNC client and reconnect later.
• When done, you kill the VNC server process on Carbon.


|----------------------------- ## Operating a virtual desktop session


|----------------------------- ### Start the server

• Log in to Carbon (https://wiki.anl.gov/cnm/HPC/Network_Access) using ssh as documented.
• On the Carbon prompt (showing either login5 or login6 as host name), enter:

  vncserver

• At the first time, you will be asked for a password which will limit access to your virtual desktop session.

• Take note of the display number from the output of the vncserver command:

  New 'login5:1 (stern)' desktop is login5:1

  Starting applications specified in /home/stern/.vnc/xstartup
  Log file is /home/stern/.vnc/login5:1.log


|----------------------------- ### None

Forward a network port from your machine to the same port on the Carbon login node.
How to do that depends on the SSH program you use, and which port to forward depends on the display number.

• Press <Enter> ~ C (three keys in succession: enter, tilde, capital C). You should get a prompt like this:

  ssh>

• At the prompt, enter:

  -L port:localhost:port

  ssh> -L 5901:localhost:5901
  Forwarding port.

• Press <Enter> to regain your regular prompt.

Configure your PuTTY Clogin session (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/Accessing_Carbon_licenses_remotely) to apply #Anticipatory port forwarding (see section below).
It appears PuTTY does not support adding tunnels on the fly.


|----------------------------- ### Connect with a client

• Select Connect to Server… from the Finder's menu, or press Command + K.

  <image 400px-HPC_2012-10-04_VNC_Finder_Connect_to_Server.png: HPC 2012-10-04 VNC Finder Connect to Server.png>

• Enter the Server Address in the form vnc://localhost:portnum/ and push Connect.
• You will get a warning that the connection is not encrypted. The impact is fairly low as the unencrypted part of the connection runs merely between two processes on the same host (sshd and vncserver) and does not go out over the network. The main remote connection from your own desktop to clogin will continue to be encrypted over the ssh channel.
• Enter the VNC password you chose earlier.

  <image 400px-HPC_2012-10-04_VNC_Screen_Sharing_warning.png: HPC 2012-10-04 VNC Screen Sharing warning.png>

  <image 400px-HPC_2012-10-04_VNC_Screen_Sharing_password.png: HPC 2012-10-04 VNC Screen Sharing password.png>

1. Select and install a VNC client.
 1.1. http://www.realvnc.com/download/viewer/
 1.2. http://www.tightvnc.com/download.php
2. Start the VNC client
 2.1. See e.g. Using VNC Viewer (http://www.realvnc.com/products/vnc/documentation/5.0/guides/user/Chapter3.html) in the RealVNC-5.0 documentation.
3. Connect to the VNC server at address

  127.0.0.1:displaynum

• Follow your VNC client's documentation.


|----------------------------- ### Use the virtual desktop

• Your virtual desktop will be running an xterm (http://en.wikipedia.org/wiki/Xterm) command line window and the Motif Window Manager (http://en.wikipedia.org/wiki/Motif_Window_Manager). The desktop is deliberately kept simple to reduce overhead and startup times.

  <image 600px-HPC_2012-10-04_VNC_running.png: HPC 2012-10-04 VNC running.png>

  <image HPC_2012-10-04_VNC_MWM_context_menu.png: HPC 2012-10-04 VNC MWM context menu.png>

• You can use the virtual desktop like a regular X11 session. Use the xterm command line to run shell commands or to start graphical applications, such as the Jmol molecular visualization application.

  $ echo $DISPLAY
  :1.0
  $ module load jmol
  $ jmol

• To open another terminal window, run the command xterm & or right-click and select New Window.


|----------------------------- ### Stop the server

Stop the server when you no longer need the virtual desktop. On a Carbon login node where you started the VNC server, enter:

  vncserver -kill :displaynum

All child processes that used the desktop will be killed, and VNC client connections will be severed.


|----------------------------- ## Tips

Please practice good housekeeping and do not needlessly leave vncserver processes running.
Stale vncserver processes (those that have not been used for days) will be killed.


|----------------------------- ### Avoiding multiple VNC sessions

• Avoid concurrent VNC sessions on different hosts, or even multiple VNC sessions on the same host.
• To inspect your current VNC processes, use the command

  vncserver -l

  ls -ltr ~/.vnc

• To use an existing session or clean up, log in to the specific node (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS).


|----------------------------- ### Customizing the virtual desktop

• Override the size and color depth of the virtual desktop by supplying options to vncserver:

  vncserver -geometry 1920x1080 -depth 24

  man vncserver


|----------------------------- ### Screen Sharing on the Mac

  <image 350px-HPC_2020-01_VNC_Screen_Sharing_Preferences_1.png: Screen Sharing, Preferences, Display (macOS 10.14).>

  <image 350px-HPC_2020-01_VNC_Screen_Sharing_Preferences_2.png: Screen Sharing, Preferences, Quality (macOS 10.14).>

• Recent Screen Sharing versions will pass through almost all keyboard input, which effectively disables many regular OS X keyboard shortcuts, in particular those for switching applications and taking screen shots.
• To switch from Screen Sharing to another application, click on its Dock icon.
• To take a screen shot, select Save Screen Capture As… from the Connection menu of the Screen Sharing application menu.
• To take screen shots more easily and use various other control options, choose Show Toolbar from the View menu of the Screen Sharing application menu.

The screen shots were taken under macOS 10.14. Other OS versions will look slightly differently.

  <image 450px-HPC_2012-10-04_VNC_in_Screen_Sharing_Connection_menu.png: HPC 2012-10-04 VNC in Screen Sharing Connection menu.png>

  <image 450px-HPC_2012-10-04_VNC_in_Screen_Sharing_View_menu.png: HPC 2012-10-04 VNC in Screen Sharing View menu.png>

  <image 900px-HPC_2012-10-04_VNC_in_Screen_Sharing_with_mouse_hovering_over_toolbar.png: HPC 2012-10-04 VNC in Screen Sharing with mouse hovering over toolbar.png>


|----------------------------- ### Anticipatory port forwarding

The VNC server allocates its ports and displays from a pool that all users have access to on a particular machine.
As a result, display numbers vary as soon as more than one user uses VNC at a given time.
The procedure above sets up port forwarding for just the port that your server selected.
You can avoid the step of having to manually identify and forward that port by preemptively forwarding a broader range of ports.
This is not guaranteed to cover all cases but will be sufficient for most, given the fairly sporadic use of VNC.
You must, however, still tell your VNC client application which displaynum (5900 + x) or :port (":x") to connect to.

Port forwarding depends on the SSH client you use.

1. Edit (or create) your file $HOME/.ssh/config.

2. Locate (or add) the section beginning with

  Host clogin

3. Add the following lines.

  LocalForward  5901	localhost:5901
  	LocalForward  5902	localhost:5902
  	LocalForward  5903	localhost:5903
  	LocalForward  5904	localhost:5904
  	LocalForward  5905	localhost:5905
  	LocalForward  5906	localhost:5906
  	LocalForward  5907	localhost:5907
  	LocalForward  5908	localhost:5908
  	LocalForward  5909	localhost:5909
  	LocalForward  5910	localhost:5910

The forwards will be active the next time you connect to clogin.

1. Configure PuTTY port forwarding as shown in the context of remote license access. (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/Accessing_Carbon_licenses_remotely)
Use the port numbers as shown in the previous section. They should appear in the Forwarded ports section of the Tunnels panel as:

  L5901  localhost:5901
  L5902  localhost:5902
  …

Again, these forwards will be active the next time you connect to clogin.


|----------------------------- ## Troubleshooting

• To reset your VNC password, run:

  vncpasswd

• To see a list of recent VNC servers that you might be running:

  ls -ltr ~/.vnc/*.pid

• Identify and inspect server log files:

  ls -ltr ~/.vnc/*.log
  cat ~/.vnc/$HOSTNAME:displaynum.log

• X11-style Copy&Paste requires a 3-button mouse. Diagnose your mouse button mappings using the xev command (http://linux.die.net/man/1/xev). Move your mouse into the xev window and click the buttons. Look for events like this:

  ButtonPress event, serial 31, synthetic NO, window 0x600001,
      root 0x281, subw 0x600002, time 784185758, (35,33), root:(39,55),
      state 0x0, button 3, same_screen YES

• You can simply and unceremoniously kill all your vncservers on a given host by using the Unix kill command. For good measure, run it twice, then clean up:

  kill `cat ~/.vnc/$HOSTNAME*.pid`
  kill `cat ~/.vnc/$HOSTNAME*.pid`
  rm ~/.vnc/$HOSTNAME*.pid



• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)

Read below about running on non-HPC computers (case 1).

To run on HPC-internal computers (cases 2 and 3), no network considerations arise for license access, though they do for remote graphics.


|---------------------------- ## Eligible remote computers

For help with installing or running commercially licensed applications, the target computer must meet all of the following requirements:

• be Argonne-owned,
• have the application already installed, or hold a download of the application's online or offline installer,
• be able or eligible to reach the Carbon license servers (components of the Carbon HPC cluster) over the network by short host name.

• wired, in building 440/441 at Argonne, or
• the Argonne-auth WiFi network in the same building, or
• a VPN connection that has been opened by the user account of a CNM staff member, which includes regular employees, postdocs, and students, since only such an HR status will place the user in the correct firewall perimeter,

• have an SSH connection open to mega that has been configured to forward (tunnel) the appropriate network ports of one of Carbon's license servers.


|---------------------------- ## Configure client applications to access the license servers


|---------------------------- ### Option 1: Single license server

If your computer primarily uses SSH tunneling to connect to CNM:

• Ensure that tunneling to clicense1 is configured and is active
• Enter as license server:

  localhost

Redundant license servers, described below, cannot be easily leveraged over ssh,
because typically the same default port numbers are used on all license servers,
and that cannot be tunneled simultaneously on the same port.


|---------------------------- ### Option 2: Redundant license servers

You can configure your application so that it can automatically select,
under certain conditions (given below),
the license server from 1 of 3 servers that we run at CNM.
This improves license availability because when one of the servers is down, such as for maintenance,
one of the other 2 can step in to serve the license.

This selection requires full-fledged network connectivity for the computer where you wish to run the licensed application on. It must:

• be located physically at CNM, and
• be on an active wired or Argonne-auth WiFi network connection,

• or

• has VPN active, and
• you are an NST staff member (only then is your computer "virtually" at NST/CNM).

To use the 3-server redundant license servers,
enter the following short host names (having no domain part)
into the license configuration dialog of an application or in its configuration files:

  clicense1
  clicense2
  clicense3

For port numbers, see application-specific documentation.


|---------------------------- ## Host name resolution

Verify that from the target computer the license server IP addresses can be looked up (resolved) from their short host names:

  nslookup clicense1

To this end, the target computer's network profile settings must include the following DNS domains:

• cnm.anl.gov
• nst.anl.gov

One or both of these domains must usually be explicitly added (once) to the appropriate VPN or networking configuration, unless ssh tunneling is used.


|---------------------------- ## Eligible user and administrator accounts

For installing a licensed application on a non-HPC computer, the active user account must:

• have the ability to install applications on the target computer (be or become local administrator).

For running some installers, and for all applications, the active user account must:

• belong to a Service Desk member, or to an end user who is an Argonne employee, and
• have been authorized to access the application license.

If not already done, request license access for the specific account name and application name, and await confirmation.

The user accounts for running installers vs. applications need not be the same. – Some installers require and verify license access before proceeding.
Access requests are made under the user account running the installer,
so administrator accounts must be authorized by account name in the same manner as regular user accounts.


|---------------------------- ## Available license tokens

A license must be available (not be in use) to run the application, and, where applicable, to run the installer.


|---------------------------- ## Troubleshooting

When a license error occurs, one or more of the above requirements may not be met.

Review the following:

1. Carefully read the error message. This is the first and best step to narrow down potential causes of a failure to obtain a license.
2. Is the target computer in a suitable network location and connection state?
3. Is the application configured with short host names for the license servers?
4. Does the configuration of the active network profile include the correct DNS search domains?
5. Has license access been granted to the active user account?
6. Is failure to obtain a license token persistent, i.e., have you retried at a later time?


|---------------------------- ## Applications

Find applications-specific details at:

• HPC/Applications/comsol (https://wiki.anl.gov/cnm/HPC/Applications/comsol)
• HPC/Applications/lumerical (https://wiki.anl.gov/cnm/HPC/Applications/lumerical)

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)


|---------------------------- # HPC/Linux Guides

Contents

1 Beginners
2 Intermediate
3 Advanced
-----------------------------------------------


|---------------------------- ## Contents

• 1 Beginners
• 2 Intermediate
• 3 Advanced

To use Carbon and other HPC systems, you will need to become familiar with the Unix/Linux ways of doing things.

You will be navigating directories, create, view, and edit various text files, and run commands on the shell command line and in scripts.
As you become comfortable and learn more about commands and shell features you will find that you get much more efficient.

There are numerous resources to get you started; some are shown below.

• Web pages and PDFs that are available at no cost usually contain either short introductions or more or less detailed reference materials. Those are relatively straightforward to put together from existing sources, but when compared to a textbook or course on the subject, they would constitute only the first and last chapters.
• Materials created for teaching, by contrast, will present the entirety of the subject matter, and at a gradual learning curve. This requires a great deal more effort and time to assemble, and thus, these materials are usually available upon purchase.


|---------------------------- ## Beginners



  <image 100px-HPC_2012-02-04_Book_cover_small_-_The_Linux_Command_Line.png: HPC 2012-02-04 Book cover small - The Linux Command Line.png>

• by William Shotts; No Starch Press, March 2019, 504 pp.; ISBN-13: 9781593279523; about $25 – $30 as ebook (from the publisher (https://nostarch.com/tlcl2) or here (https://books.apple.com/us/book/the-linux-command-line-2nd-edition/id1438349057)), or about $40 in print.



• By Harry Mangalam (http://moo.nac.uci.edu/~hjm/Mangalam_2014.html), UC Irvine.





  <image 100px-HPC_2012-02-04_Book_cover_small_-_Learning_the_bash.gif: HPC 2012-02-04 Book cover small - Learning the bash.gif>

• By Cameron Newham; O'Reilly, March 2005; about $30–$50.






|---------------------------- ## Intermediate

  <image 100px-HPC_2012-02-04_Book_cover_small_-_bash_Cookbook.gif: HPC 2012-02-04 Book cover small - bash Cookbook.gif>

• By Carl Albing, JP Vossen, Cameron Newham; O'Reilly, May 2007; about $30–$50.
• Related materials at http://bashcookbook.com/


|---------------------------- ## Advanced

  <image 100px-HPC_2012-02-04_Book_cover_small_-_Unix_Power_Tools.jpg: HPC 2012-02-04 Book cover small - Unix Power Tools.jpg>

• By Jerry Peek, Shelley Powers, Tim O'Reilly, Mike Loukides; O'Reilly, Third Edition 2002. About $40–$70 in print or as ebook.


|---------------------------- # HPC/Sharing Files


|---------------------------- ## Contents

1. 1 Introduction
 1.1. 1.1 Sharing files on Carbon
 1.2. 1.2 Transferring files to or from Carbon
2. 2 Sharing within a project group
 2.1. 2.1 Sharing within proposals
 2.2. 2.2 Managing permissions
3. 3 Sharing in your own directories
4. 4 Using a /tmp directory


|---------------------------- ## Introduction


|---------------------------- ### None

When you collaborate with other users on a common project on Carbon you will naturally wish to share files among you.
There are several ways to do this, largely distinguished by how often and for how long sharing is needed.


|---------------------------- ### None

See HPC/Network Access/SSH Tunnel Setup on Linux and MacOS#File transfer (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS).


|---------------------------- ## Sharing within a project group

Leveraging a group is a convenient way for users to share files repeatedly over an extended period of time.

To use this method, request a project group and directory (https://wiki.anl.gov/cdn-cgi/l/email-protection) by mail. Send the following information:

1. a reason for the request,
2. a group name which should be short (up to some 8 chars), descriptive, and distinctive,
3. the initial user list (later changes are easy).

• A new Unix group will be created and users will be made members of that group. To pick up such a change, log out and back in.
• A group directory will be created and can be accessed by one of the following names:

  /home/share/groupname
  ~groupname

• The directory will be mutually readable and writable among group members, and will not be accessible by other users.
• The group will usually be inherited by all files and directories created there.


|---------------------------- ### Sharing within proposals

Typically, a project group and associated sharing directory are created automatically for each CNM proposal that has more than one user.
Access those directories under one of the following names:

  /home/share/cnm12345
  ~cnm12345


|---------------------------- ### Managing permissions

Carbon's /home/share directories are configured such that users of a group can read and write files and directories.
To share directories and files that are for some reason not accessible by group members, the owner (or an administrator) must run the following:

• To make files writeable by group members:

  chgrp groupname shared_file ...
  chmod g+rw shared_file ...

• To make a directory and all files thereunder (-R) group-writeable, which includes the ability to delete files:

  chgrp -R groupname shared_dir_name
  chmod -R g+rwX shared_dir_name

Lean more about chmod, chown, and chgrp (http://linuxfrombeginning.wordpress.com/2008/09/25/linux-command-9-chown-chgrp-chmod/).

Advanced: Directories under /home/share are typically created administratively
with the setgid bit (https://en.wikipedia.org/wiki/Setuid#setuid_and_setgid_on_directories) active,
which will cause newly created files and directories to inherit the shared group of the parent, and thus become shared as well.
But this inheritance does not apply to existing directories that have been moved here.

To share moved directories, run the commands above, then switch on group inheritance as follows:

  find shared_dir_name -type d -print0 | xargs -0 chmod -v g+s

The first part of this pipeline can be run alone to simply show a list of all directories (-type d), like so:

  find shared_dir_name -type d
  find shared_dir_name -type d  -ls

The full command as shown earlier produces that list in a robust manner (using NULL-terminated strings of names), then uses xargs(1) (http://man7.org/linux/man-pages/man1/xargs.1.html) to run chmod(1) (http://man7.org/linux/man-pages/man1/chmod.1.html) to activate the setgid bit on these directories (but not files).

Alternatively, instead of moving files into a proposal-shared directory, copy them first, then remove the source:

  cp -R --preserve=timestamps  source_dir  ~cnm123456/
  rm -r source_dir


|---------------------------- ## Sharing in your own directories

You can give access to some of your directories in  your respective $HOME or $SANDBOX (https://wiki.anl.gov/cnm/HPC/Directories) by opening permissions.

• This option is typically useful for one-way sharing.
• For bidirectional sharing, you will need to grant world-write permissions, which is not recommended for files in your own directory space.
• You will likely need to repeatedly open permissions (chmod) for additional files that are placed there.

You as the owner can arrange this on your own as follows:

  chmod a+x $HOME/
  mkdir $HOME/share
  # populate ..
  chmod -R a+rX $HOME/share

Direct your fellow users as follows:

  cd /home/owner/share
  ls
  cp -p ....

The first cd is crucial to have your collaborator step into a sharing directory you designated instead of stepping in from your home directory.
Other users are not usually able to simply rummage around your home directory with "ls" – it is up to you to show them a specific directory they can browse.

If you have particularly large files, replace $HOME and /home by $SANDBOX and /sandbox, respectively.


|---------------------------- ## None

You can drop files into the general-use /tmp directory of a login node and set permissions as needed. This way of sharing is:

• suitable for one-off exchanges,
• typically fairly loose with permissions,
• resides on only one host,
• world-write is not recommended,
• likely to need chmod whenever more files are placed.

To share files under /tmp, do the following:

  mkdir /tmp/foo
  # populate ..
  chmod -R a+rX /tmp/foo


|-------------------------- # Sandbox/Test 1 – Lists


|-------------------------- ## Test

Main paragraph text. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

• Bullet A
• Bullet B
Bullet-Colon B1

More text

• Bullet D
• Bullet E

• Colon-Bullet E1

Foo bar.

• Bullet F

• Bullet G

• Colon-Bullet G1


|-------------------------- # Sandbox/Test 2 – XMG Exports


|-------------------------- ## XMG Export

• Sandbox/XMG page list (https://wiki.anl.gov/cnm/Sandbox/XMG_page_list)
• Sandbox/XMG media list (https://wiki.anl.gov/cnm/Sandbox/XMG_media_list)


|--------------------------- # Sandbox/XMG page list

Pages related to XMG, as of 2014-01-10 12:03:16

1. Amptek_fluorescence_detector_is_not_found_by_the_control_software (https://wiki.anl.gov/cnm/Amptek_fluorescence_detector_is_not_found_by_the_control_software)
2. Amtek_fluorescence_detector (https://wiki.anl.gov/cnm/Amtek_fluorescence_detector)
3. Amtek_fluorescence_detector_found_but_no_counts_in_the_control_software (https://wiki.anl.gov/cnm/Amtek_fluorescence_detector_found_but_no_counts_in_the_control_software)
4. Attocubes (https://wiki.anl.gov/cnm/Attocubes)
5. Beamline_Alignment_Quick_Reference (https://wiki.anl.gov/cnm/Beamline_Alignment_Quick_Reference)
6. Beamline_Controls (https://wiki.anl.gov/cnm/Beamline_Controls)
7. Beamline_Instrumentation (https://wiki.anl.gov/cnm/Beamline_Instrumentation)
8. Beamline_aligning_sequence (https://wiki.anl.gov/cnm/Beamline_aligning_sequence)
9. Beamline_alignment (https://wiki.anl.gov/cnm/Beamline_alignment)
10. Beamline_component_description_and_relevant_parameters (https://wiki.anl.gov/cnm/Beamline_component_description_and_relevant_parameters)
11. Blank_EPICS_windows (https://wiki.anl.gov/cnm/Blank_EPICS_windows)
12. CCD_changeover (https://wiki.anl.gov/cnm/CCD_changeover)
13. Condenser_module_(CM) (https://wiki.anl.gov/cnm/Condenser_module_(CM))
14. Connect_the_Bicron_detector (https://wiki.anl.gov/cnm/Connect_the_Bicron_detector)
15. Connect_the_filter_box (https://wiki.anl.gov/cnm/Connect_the_filter_box)
16. Counting_macros (https://wiki.anl.gov/cnm/Counting_macros)
17. Diffraction (https://wiki.anl.gov/cnm/Diffraction)
18. Fluorescence (https://wiki.anl.gov/cnm/Fluorescence)
19. Fluorescence_Standard_Reference_Material (https://wiki.anl.gov/cnm/Fluorescence_Standard_Reference_Material)
20. Focusing_optics_module_(FOM) (https://wiki.anl.gov/cnm/Focusing_optics_module_(FOM))
21. Focusing_zone_plates (https://wiki.anl.gov/cnm/Focusing_zone_plates)
22. Homing_procedure_for_vertical_focusing_motors (https://wiki.anl.gov/cnm/Homing_procedure_for_vertical_focusing_motors)
23. Imaging_optics_module_(IOM) (https://wiki.anl.gov/cnm/Imaging_optics_module_(IOM))
24. Imaging_zone_plates (https://wiki.anl.gov/cnm/Imaging_zone_plates)
25. Initialize_the_PI_C-848_controller (https://wiki.anl.gov/cnm/Initialize_the_PI_C-848_controller)
26. Ion_chamber_reading_is_not_correct (https://wiki.anl.gov/cnm/Ion_chamber_reading_is_not_correct)
27. Linux_commands (https://wiki.anl.gov/cnm/Linux_commands)
28. Linux_machine_does_not_print (https://wiki.anl.gov/cnm/Linux_machine_does_not_print)
29. MLL_motors (https://wiki.anl.gov/cnm/MLL_motors)
30. Macro_for_horizontal_focusing_motor_corrections (https://wiki.anl.gov/cnm/Macro_for_horizontal_focusing_motor_corrections)
31. Macro_for_sample_motor_corrections (https://wiki.anl.gov/cnm/Macro_for_sample_motor_corrections)
32. Macro_for_vertical_focusing_motor_corrections (https://wiki.anl.gov/cnm/Macro_for_vertical_focusing_motor_corrections)
33. Mirror_System_(26-ID-A) (https://wiki.anl.gov/cnm/Mirror_System_(26-ID-A))
34. Mirror_system (https://wiki.anl.gov/cnm/Mirror_system)
35. Motor_macros (https://wiki.anl.gov/cnm/Motor_macros)
36. Motor_scans (https://wiki.anl.gov/cnm/Motor_scans)
37. Motors_vyu_and_vyd_are_pinned (https://wiki.anl.gov/cnm/Motors_vyu_and_vyd_are_pinned)
38. NPI_Manuals (https://wiki.anl.gov/cnm/NPI_Manuals)
39. Nanoprobe_Optics_Information (https://wiki.anl.gov/cnm/Nanoprobe_Optics_Information)
40. New_Huber_slits_are_not_working (https://wiki.anl.gov/cnm/New_Huber_slits_are_not_working)
41. PI-M663_motors_referencing_timeout (https://wiki.anl.gov/cnm/PI-M663_motors_referencing_timeout)
42. PIXIS_1024XF (https://wiki.anl.gov/cnm/PIXIS_1024XF)
43. PIXIS_CCD_camera (https://wiki.anl.gov/cnm/PIXIS_CCD_camera)
44. Pewin (https://wiki.anl.gov/cnm/Pewin)
45. Plotting_macros (https://wiki.anl.gov/cnm/Plotting_macros)
46. Region_of_Interest_(ROI) (https://wiki.anl.gov/cnm/Region_of_Interest_(ROI))
47. Restart_an_IOC (https://wiki.anl.gov/cnm/Restart_an_IOC)
48. Sample_Alignment_Quick_Reference (https://wiki.anl.gov/cnm/Sample_Alignment_Quick_Reference)
49. Sample_module_(SM) (https://wiki.anl.gov/cnm/Sample_module_(SM))
50. Sample_stage (https://wiki.anl.gov/cnm/Sample_stage)
51. Scanning_Probe_Diffraction_Quick_Reference (https://wiki.anl.gov/cnm/Scanning_Probe_Diffraction_Quick_Reference)
52. Scanning_probe_detector_channel_descriptions (https://wiki.anl.gov/cnm/Scanning_probe_detector_channel_descriptions)
53. Soft_IOC_Rachmaninoff (https://wiki.anl.gov/cnm/Soft_IOC_Rachmaninoff)
54. Start_the_MLL_controlls (https://wiki.anl.gov/cnm/Start_the_MLL_controlls)
55. TMC_Micro-g_optical_table (https://wiki.anl.gov/cnm/TMC_Micro-g_optical_table)
56. The_MLL_Project (https://wiki.anl.gov/cnm/The_MLL_Project)
57. Tomography (https://wiki.anl.gov/cnm/Tomography)
58. Vortex_ME4_(SII_4-element_silicon_drift_diode) (https://wiki.anl.gov/cnm/Vortex_ME4_(SII_4-element_silicon_drift_diode))
59. Wiring_of_Ion_Chambers (https://wiki.anl.gov/cnm/Wiring_of_Ion_Chambers)
60. X-Ray_Microscopy (https://wiki.anl.gov/cnm/X-Ray_Microscopy)
61. ZP50-240-9 (https://wiki.anl.gov/cnm/ZP50-240-9)
62. ZP_24-133-3 (https://wiki.anl.gov/cnm/ZP_24-133-3)


|-------------------------- # Sandbox/Test 3 – Module hierarchy shortening


|-------------------------- ## Module hierarchy shortening

To simplify URLs and the hierarchy I moved the "toplevel" HPC/Software/Modules (https://wiki.anl.gov/cnm/HPC/Software/Modules) page to HPC/Modules (https://wiki.anl.gov/cnm/HPC/Modules).
Conveniently, MediaWiki offered to move sub-pages. Result of the move action:

1. The page HPC/Software/Modules/atk (https://wiki.anl.gov/cnm/HPC/Software/Modules/atk) has been moved to HPC/Modules/atk (https://wiki.anl.gov/cnm/HPC/Modules/atk).
2. The page HPC/Software/Modules/atk/Installation on Windows (https://wiki.anl.gov/cnm/HPC/Software/Modules/atk/Installation_on_Windows) has been moved to HPC/Modules/atk/Installation on Windows (https://wiki.anl.gov/cnm/HPC/Modules/atk/Installation_on_Windows).
3. The page HPC/Software/Modules/atk/License configuration on Windows (https://wiki.anl.gov/cnm/HPC/Software/Modules/atk/License_configuration_on_Windows) has been moved to HPC/Modules/atk/License configuration on Windows (https://wiki.anl.gov/cnm/HPC/Modules/atk/License_configuration_on_Windows).
4. The page HPC/Software/Modules/atk/License troubleshooting on Windows (https://wiki.anl.gov/cnm/HPC/Software/Modules/atk/License_troubleshooting_on_Windows) has been moved to HPC/Modules/atk/License troubleshooting on Windows (https://wiki.anl.gov/cnm/HPC/Modules/atk/License_troubleshooting_on_Windows).
5. The page HPC/Software/Modules/atk/Remote Access (https://wiki.anl.gov/cnm/HPC/Software/Modules/atk/Remote_Access) has been moved to HPC/Modules/atk/Remote Access (https://wiki.anl.gov/cnm/HPC/Modules/atk/Remote_Access).
6. The page HPC/Software/Modules/atk/Remote Access using Cygwin (https://wiki.anl.gov/cnm/HPC/Software/Modules/atk/Remote_Access_using_Cygwin) has been moved to HPC/Modules/atk/Remote Access using Cygwin (https://wiki.anl.gov/cnm/HPC/Modules/atk/Remote_Access_using_Cygwin).
7. The page HPC/Software/Modules/comsol (https://wiki.anl.gov/cnm/HPC/Software/Modules/comsol) has been moved to HPC/Modules/comsol (https://wiki.anl.gov/cnm/HPC/Modules/comsol).
8. The page HPC/Software/Modules/cp2k (https://wiki.anl.gov/cnm/HPC/Software/Modules/cp2k) has been moved to HPC/Modules/cp2k (https://wiki.anl.gov/cnm/HPC/Modules/cp2k).
9. The page HPC/Software/Modules/g03 (https://wiki.anl.gov/cnm/HPC/Software/Modules/g03) has been moved to HPC/Modules/g03 (https://wiki.anl.gov/cnm/HPC/Modules/g03).
10. The page HPC/Software/Modules/impi (https://wiki.anl.gov/cnm/HPC/Software/Modules/impi) has been moved to HPC/Modules/impi (https://wiki.anl.gov/cnm/HPC/Modules/impi).
11. The page HPC/Software/Modules/jmol (https://wiki.anl.gov/cnm/HPC/Software/Modules/jmol) has been moved to HPC/Modules/jmol (https://wiki.anl.gov/cnm/HPC/Modules/jmol).
12. The page HPC/Software/Modules/lammps (https://wiki.anl.gov/cnm/HPC/Software/Modules/lammps) has been moved to HPC/Modules/lammps (https://wiki.anl.gov/cnm/HPC/Modules/lammps).
13. The page HPC/Software/Modules/lumerical (https://wiki.anl.gov/cnm/HPC/Software/Modules/lumerical) has been moved to HPC/Modules/lumerical (https://wiki.anl.gov/cnm/HPC/Modules/lumerical).
14. The page HPC/Software/Modules/meep (https://wiki.anl.gov/cnm/HPC/Software/Modules/meep) has been moved to HPC/Modules/meep (https://wiki.anl.gov/cnm/HPC/Modules/meep).
15. The page HPC/Software/Modules/mkl (https://wiki.anl.gov/cnm/HPC/Software/Modules/mkl) has been moved to HPC/Modules/mkl (https://wiki.anl.gov/cnm/HPC/Modules/mkl).
16. The page HPC/Software/Modules/namd (https://wiki.anl.gov/cnm/HPC/Software/Modules/namd) has been moved to HPC/Modules/namd (https://wiki.anl.gov/cnm/HPC/Modules/namd).
17. The page HPC/Software/Modules/q-chem (https://wiki.anl.gov/cnm/HPC/Software/Modules/q-chem) has been moved to HPC/Modules/q-chem (https://wiki.anl.gov/cnm/HPC/Modules/q-chem).
18. The page HPC/Software/Modules/vasp (https://wiki.anl.gov/cnm/HPC/Software/Modules/vasp) has been moved to HPC/Modules/vasp (https://wiki.anl.gov/cnm/HPC/Modules/vasp).
19. The page HPC/Software/Modules/vasp5 (https://wiki.anl.gov/cnm/HPC/Software/Modules/vasp5) has been moved to HPC/Modules/vasp5 (https://wiki.anl.gov/cnm/HPC/Modules/vasp5). {double via HPC/Modules/vasp5 (https://wiki.anl.gov/cnm/HPC/Modules/vasp5) to HPC/Modules/vasp (https://wiki.anl.gov/cnm/HPC/Modules/vasp)}


|--------------------------- # HPC/Modules/atk

Redirect to:

• HPC/Applications/atk (https://wiki.anl.gov/cnm/HPC/Applications/atk)


|--------------------------- # HPC/Modules/atk/Installation on Windows

Redirect to:

• HPC/Applications/atk/Installation on Windows (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Modules/atk/Installation on Windows

Redirect to:

• HPC/Applications/atk/Installation on Windows (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Modules/atk/License configuration on Windows

Redirect to:

• HPC/Applications/atk/License configuration on Windows (https://wiki.anl.gov/cnm/HPC/Applications/atk/License_configuration_on_Windows)


|--------------------------- # HPC/Applications/atk/License troubleshooting on Windows

1. Open a Windows command prompt. (http://windows.microsoft.com/en-US/windows7/Command-Prompt-frequently-asked-questions)
2. Inspect the current license setting.
echo %QUANTUM_LICENSE_PATH%
You should get one of the following:
6200@localhost
6200@localhost;6201@localhost
The first entry uses one license server only, the second entry uses one of two available servers.
3. If you do not see one of the above resuls, log out and log back in again, and repeat these steps from step 1 above.
4. Run the following commands exactly as shown:
cd %HOMEPATH%
set LMX_EXTENDEDLOG=Desktop\lmx.log
set > %LMX_EXTENDEDLOG%
You can select and Copy the string from here and Paste it into the Command Prompt window from the right-click context menu.
5. Run this command, adapting it to the path you installed ATK under:
C:\"Program Files (x86)"\QuantumWise\atk-12.2.2\vnl\bin\vnl.exe
It will take a few seconds for the command to start.
Note: For this test only, do not start VNL by clicking on its icon in Explorer or its desktop shortcut.
6. Move any VNL windows away from the command prompt window.
7. Take a screenshot of your entire screen. (http://windows.microsoft.com/en-US/windows7/Use-Snipping-Tool-to-capture-screen-shots)
Use Save Snip, Save As to produce an image file.
8. Close VNL.
 (https://wiki.anl.gov/cnm/File:HPC_2012-08_VNL_LMX_log.png)
9. Locate the lmx.log file on your Desktop. The extension may not be shown.
10. Optional: To inspect the log file, open it by double-clicking. It is a text file that opens by default in Notepad.
11. Send by email the lmx.log file and the screenshot from step (5) (http://windows.microsoft.com/en-US/windows7/Send-a-file-in-e-mail)
12. Close the Command Prompt window.

  <image HPC_2012-08_VNL_LMX_log.png: HPC 2012-08 VNL LMX log.png>


|--------------------------- # HPC/Modules/atk/Remote Access

Redirect to:

• HPC/Applications/atk/Remote Access (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Applications/atk/Remote Access

Redirect to:

• HPC/Software/Modules/atk/Installation on Windows (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Modules/atk/Remote Access using Cygwin

Redirect to:

• HPC/Applications/atk/Remote Access using Cygwin (https://wiki.anl.gov/cnm/HPC/Applications/atk/Remote_Access_using_Cygwin)


|---------------------------- # HPC/Applications/atk/Remote Access using Cygwin

Contents

1 Cygwin preparation
2 Configure access to the Carbon license servers
3 Run VNL
-----------------------------------------------------------------------------------------


|---------------------------- ## Contents

• 1 Cygwin preparation
• 2 Configure access to the Carbon license servers
• 3 Run VNL


|---------------------------- ## Cygwin preparation

1. Install Cygwin/X (http://cygwin.com/) by running or re-running http://cygwin.com/setup.exe
2. Select the following packages for installation (in addition to the default):
 2.1. OpenSSH (in section Net)
 2.2. gVim (in section Editors)
 2.3. nano (in section Editors)
 2.4. X11 (entire section)

Use the Search box in the Select Packages stage to locate the packages by name, for instance:

  <image 500px-HPC_Install_nano_in_cygwin.png: HPC Install nano in cygwin.png>


|---------------------------- ## Configure access to the Carbon license servers

On your windows machine:

• Open a Cywin terminal.
• In the terminal window:

  nano ~/.ssh/config

• In the section beginning with Host clogin, add the 3 bold lines below:

  Host clogin
         Hostname localhost
         User              username
         Port              33301
         ForwardX11        yes
         ForwardX11Trusted yes
         LocalForward  6200 mgmt03:6200
         LocalForward  6201 mgmt04:6200

• Close the editor (Type Control-X, "Y" to save the file, and Enter to confirm the existing file name.)

• Edit your .bashrc file to set up the license server. In the terminal window:

  nano ~/.bashrc

• The file is mostly comments. It's best to simply delete all lines and replace them with the following:

  # ~/.bashrc: executed by bash(1) for interactive shells.

  # The latest version as installed by the Cygwin Setup program can
  # always be found at /etc/defaults/etc/skel/.bashrc

  # If not running interactively, don't do anything
  [[ "$-" != *i* ]] && return

  export QUANTUM_LICENSE_PATH="6200@localhost;6201@localhost"
  export ATK_HOME="/cygdrive/c/Program Files (x86)/QuantumWise/atk-12.2.2"

  PATH=$ATK_HOME/atkpython/bin:$ATK_HOME/vnl/bin:$PATH

• The last three non-empty lines are the ones relevant for ATK and VNL. The one before is used internally by bash.

• Close all clogin windows that were open.


|---------------------------- ## Run VNL

• Open a connection to mega if you do not have one open. In a Cygwin terminal:

  ssh -v -N mega

• Minimize the mega terminal window.
• Open a new Cygwin connection to clogin:

  ssh clogin

• Minimize the clogin terminal window.
• Open a third Cygwin terminal, and start vnl in it (do not connect to Carbon):

  cd atk
  vnl &


|--------------------------- # HPC/Applications/atk/Remote Access using Cygwin

Contents

1 Cygwin preparation
2 Configure access to the Carbon license servers
3 Run VNL
-----------------------------------------------------------------------------------------


|--------------------------- ## Contents

• 1 Cygwin preparation
• 2 Configure access to the Carbon license servers
• 3 Run VNL


|--------------------------- ## Cygwin preparation

1. Install Cygwin/X (http://cygwin.com/) by running or re-running http://cygwin.com/setup.exe
2. Select the following packages for installation (in addition to the default):
 2.1. OpenSSH (in section Net)
 2.2. gVim (in section Editors)
 2.3. nano (in section Editors)
 2.4. X11 (entire section)

Use the Search box in the Select Packages stage to locate the packages by name, for instance:

  <image 500px-HPC_Install_nano_in_cygwin.png: HPC Install nano in cygwin.png>


|--------------------------- ## Configure access to the Carbon license servers

On your windows machine:

• Open a Cywin terminal.
• In the terminal window:

  nano ~/.ssh/config

• In the section beginning with Host clogin, add the 3 bold lines below:

  Host clogin
         Hostname localhost
         User              username
         Port              33301
         ForwardX11        yes
         ForwardX11Trusted yes
         LocalForward  6200 mgmt03:6200
         LocalForward  6201 mgmt04:6200

• Close the editor (Type Control-X, "Y" to save the file, and Enter to confirm the existing file name.)

• Edit your .bashrc file to set up the license server. In the terminal window:

  nano ~/.bashrc

• The file is mostly comments. It's best to simply delete all lines and replace them with the following:

  # ~/.bashrc: executed by bash(1) for interactive shells.

  # The latest version as installed by the Cygwin Setup program can
  # always be found at /etc/defaults/etc/skel/.bashrc

  # If not running interactively, don't do anything
  [[ "$-" != *i* ]] && return

  export QUANTUM_LICENSE_PATH="6200@localhost;6201@localhost"
  export ATK_HOME="/cygdrive/c/Program Files (x86)/QuantumWise/atk-12.2.2"

  PATH=$ATK_HOME/atkpython/bin:$ATK_HOME/vnl/bin:$PATH

• The last three non-empty lines are the ones relevant for ATK and VNL. The one before is used internally by bash.

• Close all clogin windows that were open.


|--------------------------- ## Run VNL

• Open a connection to mega if you do not have one open. In a Cygwin terminal:

  ssh -v -N mega

• Minimize the mega terminal window.
• Open a new Cygwin connection to clogin:

  ssh clogin

• Minimize the clogin terminal window.
• Open a third Cygwin terminal, and start vnl in it (do not connect to Carbon):

  cd atk
  vnl &


|--------------------------- # HPC/Modules/comsol

Redirect to:

• HPC/Applications/comsol (https://wiki.anl.gov/cnm/HPC/Applications/comsol)


|--------------------------- # HPC/Modules/cp2k

Redirect to:

• HPC/Applications/cp2k (https://wiki.anl.gov/cnm/HPC/Applications/cp2k)


|---------------------------- # HPC/Applications/cp2k

Note: This document is based on a .doc file of unknown provenance. I converted it and made minor updates to links. ---stern (https://wiki.anl.gov/cnm/User:Stern).

The former main CP2K site http://cp2k.berlios.de/ is now defunct. Content has not yet been migrated to the new site http://www.cp2k.org/ .


|---------------------------- ## Contents

1. 1 CP2K User Self Support
2. 2 Input and Output
 2.1. 2.1 Input Reference Manual
 2.2. 2.2 General Input Syntax
 2.3. 2.3 Basic Input File Structure
 2.4. 2.4 Output Generation and "Print Keys"
  2.4.1. 2.4.1 Section parameter (= argument to &SECTION)
 2.5. 2.5 Restarting Calculations
3. 3 Parameter choices
 3.1. 3.1 GPW
 3.2. 3.2 Cutoff
 3.3. 3.3 Smoothing
 3.4. 3.4 Basisset
 3.5. 3.5 Pseudo Potential
 3.6. 3.6 XC selection
 3.7. 3.7 WF Convergence
 3.8. 3.8 ot / diag
 3.9. 3.9 MD
  3.9.1. 3.9.1 Trajectory
  3.9.2. 3.9.2 MD Convergence
   3.9.2.1. 3.9.2.1 Equilibration
 3.10. 3.10 gapw
 3.11. 3.11 Periodicity


|---------------------------- ## CP2K User Self Support

The following pages are intended to be a starting point for people who want to use CP2K in their research. They are by far not complete and by no means a replacement for reading the related literature, running tests etc., but an attempt to get users started at all and explain commonly used features, quirks and problems of the CP2K code. Part of it is based on the doc/tutorialCp2k.html file from the CP2K cvs distribution. All CP2K users are encouraged to contribute to these pages by making corrections and/or adding new text to make it as useful as possible.

Further information:

• http://www.cp2k.org/ cp2k developers page
• http://cp2k.berlios.de/manual/ input reference manual – defunct
• http://groups.google.com/group/cp2k/ join the CP2K user forum


|---------------------------- ## Input and Output


|---------------------------- ### Input Reference Manual

The input reference documentation (i.e. what keywords exist, what flags they accept and a short description of the purpose) of cp2k is embedded into the executable. The version matching the current cvs main trunk code can be found on the website
http://cp2k.berlios.de/manual/ . Alternatively, you can generate it from your cp2k executable by using the command line flags --html-manual or --xml (
generate_manual_howto (http://cp2k.berlios.de/manual/generate_manual_howto.html)). The documentation generated by the executable should be consistent with its version, whereas the one on the website (usually) refers to the latest version.


|---------------------------- ### General Input Syntax

1. The input is divided into a tree of sections and subsections that start with &<KEYWORD> and end with &END.
2. Each section can contain plain keywords (followed by value(s)) or further (sub-)sections.
3. Both the section names and the keyword names are case insensitive.
4. The special characters "#" and "!" denote the beginning of a comment that goes until the end of the line.
5. If the value of a keyword is expressed in units, the unit can be changed (where supported) by preceding the value with the unit in square brackets. In the square brackets there must be no spaces. Example: "[m]" switches lengths to meters.
6. A long line of input can be split using the "\" character at the end of the line
7. Keywords with a logical value (flags), often default to 'false' when the keyword is missing and to true if the value is omitted; providing an explicit value after the keyword as is recommended (for example KEYWORD T).
8. Sections can have a default parameter that comes right after the section value. For example the OT section has a logical default parameter that controls the activation of the OT method. So, simply writing

  &OT
   ...
   &END OT

  &OT FALSE
   ...
   &END OT

• Whitespace is (mostly) ignored, so using indentation in the input file helps making sure that the structure is correct. If you are an (x-)emacs user, you can try the cp2k emacs mode from http://cp2k.googlegroups.com/web/cp2k-mode.el to assist in editing. This mode recognized known cp2k keywords for syntax highlighting and indentation.


|---------------------------- ### Basic Input File Structure

On the topmost level a minimal cp2k input file must have a
&GLOBAL (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EGLOBAL.html) section which allows to set basic and global job parameters (e.g. project name and run type) and usually also the
&FORCE_EVAL (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL.html) section is provided to select the method by which forces and/or energies are computed. Depending on the run type you may need addional sections, most frequently a
&MOTION (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EMOTION.html) section.

The most important flag in the
&FORCE_EVAL (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL.html) section is the value you provide to the
METHOD (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL.html#METHOD) keyword, as this selects how energies and forces a evaluated (ab initio DFT, empirical force-field, QM/MM and so on). This way you can easily switch from one method to the another (provided there are meaningful parameters to both methods in the input). If you want to use the ab-initio DFT part of cp2k then the 
&DFT subsection and its
&QS (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7EDFT%7EQS.html) subsection will probabily be of interest for you, in the case of a force-field calculation you may want to have a closer look at the
&MM (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7EMM.html) subsection. The
&SUBSYS (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7ESUBSYS.html) subsection allows you to define your (sub-)system (=atoms, elements, positions, supercell and so on). Specifically coordinates and molecular mechanics topologies can be provided "inline" or read in from external files.

Whenever atoms move during a calculation (e.g. geometry optimization or molecular dynamics), you can set the corresponding parameters in the
&MOTION (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EMOTION.html) section.

More details on frequently used keywords will follow in the description of individual examples. In general, one has to keep in mind that the structure of the input file tries to mimic the structure of the code (so it may happen, that seemingly related flags are defined in different sections). Also, when discussing individual flags, it is recommended to name a flags by its whole "trace", e.g. use
%FORCE_EVAL%SUBSYS%COORD (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7ESUBSYS%7ECOORD.html) to refer to the section where you provide coordinates explicitely. This naming conventions is also used by the input reference manual, so if you search it for functionality, you can see immediately where the keyword belongs in the input "tree".


|---------------------------- ### None

Output handling in cp2k is, like many other things, very flexible and modular, and thus for the beginner occasionally a bit confusing. One generally controls the amount and frequency and destination of output generated from &PRINT subsections in input file sections that control a certain functionality. Those &PRINT subsections are generally referred to as print keys. Whether a print key is "triggered" or not is primarily and globally controlled by the
%GLOBAL%PRINT_LEVEL (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EGLOBAL.html#PRINT_LEVEL) keyword. Possible values are:

with MEDIUM being the default (this is quite verbose, but a good choice when starting a new project). For output that is written to a file, that file name is usually derived from the value of the
%GLOBAL&PROJECT_NAME (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EGLOBAL.html#PROJECT_NAME) keyword.

A more fine grained control about what is printed where can be obtained via modifying print keys explicitly and changing the contained parameters.To understand how to control the output, it is necessary to first understand the iteration level. During the calculations cp2k keeps a global iteration level count, which is a set of integers that keep track how many iterations of what program module one has done so far. The exact meaning of each iteration level depends on the run type, for example doing an MD with the QS GPW method an iteration level count of "1 4 5" means that the program is doing the 5th SCF step of the 4th MD step, whereas "1 9" means the we are at the 9th md step (outside the scf loop). The first 1 is a root iteration level that stays always 1 during a normal MD run.


|---------------------------- #### None

Level starting at which this property is printed, valid values are the available print levels SILENT, LOW, MEDIUM, HIGH, DEBUG and additionally ON and OFF. Not providing a &PRINT section means to take its default value (predefined based on the general usefulness of the corresponding output). The presence of a &PRINT section implies a value of ON (= always printed). Use OFF to selectively turn a printkey off.

• Use __STD_OUT__ (exactly as written here) for the screen or a standard logger file.
• Use filename to get "projectname-filename[-middlename]-iteration.extension"
• Use ./filename (or any path that contains at least one "/") to get "./filename[-middlename]-iteration.extension"
• Use =filename to get exactly filename as output file (please note that this can be dangerous because different output/iterations might write on the same file


|---------------------------- ### Restarting Calculations

For large or long calculations one needs a restart mechanism to continue a calculation from where it was left of and sometimes also change a few parameters (e.g. continue an NVE trajectory in NVT ensemble). Regular cp2k restart files are just (normal) input files with all the defaults made explicit. So it should not be too difficult to understand them. However editing those restart file is not so practical, and cannot be prepared before the previous run has finished. To make this restarting easier and more flexible one can tell cp2k to read (additional) input from an external file and which parts of that file should override the current input. This is done with the section
&EXT_RESTART (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EEXT_RESTART.html) giving the name of the external input file with the
%EXT_RESTART%RESTART_FILE_NAME (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EEXT_RESTART.html#RESTART_FILE_NAME)
[1] (http://groups.google.com/) keyword. In this section there are several keywords control exactly what is taken from the external file, for example if one wants to restart the positions and not the velocities, one needs to set RESTART_VEL F and RESTART_POS T. By default all (supported) parameters read in from the restart file override the current input.

In DFT calculation there is a second restart file containing the wavefunctions. This restart is stored in a binary file that is architecture specific (see cp2k/tools/RestartTools if you need to transfer it). The name. location and frequency of this file are controlled by the
%FORCE_EVAL%DFT%SCF%PRINT%RESTART (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7EDFT%7ESCF%7EPRINT%7ERESTART.html) print key. Reading in the wavefunction restart is done by setting the file name with
%FORCE_EVAL%DFT%WFN_RESTART_FILE_NAME (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7EDFT.html#WFN_RESTART_FILE_NAME) and then setting the value of the keyword
%FORCE_EVAL%DFT%SCF%SCF_GUESS (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7EDFT%7ESCF.html#SCF_GUESS) to RESTART (default is an atomic guess).




|---------------------------- ## Parameter choices


|---------------------------- #### GPW

The Gaussian Plane Waves method
Lippert1997 (http://cp2k.berlios.de/manual/references.html#reference_31) to efficiently solve the DFT Kohn-Sham equations. It uses gaussians as basisset, and planewaves as auxiliary basis. This is similar at the Resolution of Identity (RI) methods but with a different basisset.

In GPW the whole density is transferred to plane waves, and one has the density n(r)=sumi jPi j phii(r)phij(r) in the gaussian basis set and the density ñ taken on a uniform grid.

Then ñ is used to caluclate the hartree potential VH (via an FFT based poisson solver) and the exchange and correlation potential Vxc. These potential are then transferred back to gaussian basis set by integrating them with phii(r)phij(r). To make the collocation and integration perfectly consistent with each other one can set FORCE_EVAL%DFT%QS%MAP_CONSISTENT this normally adds only a very small overhead to the calculation and is


|---------------------------- #### Cutoff

n and ñ are not equal, and this introduces an error in the calculation. ñ converges toward n when the cutoff (that controls the grid spacing) goes to infinity (and gridspacing to 0). Which cutoff is sufficient to represent a density depends on how sharp is the gaussian basis set (or that of the potential, but it is always broader).

For hystorical reasons the density of the grid is given as the energy (in Ry) of the highest reciprocal vector that can be represented on the on the grid. This can be roughly given as 0.5(pi/dr)**2 where dr is the gridspacing in Bohr. The characteristic length of a gaussian with exponent A is given by 1/sqrt(a) (up to a factor 2 depending on the convention used). This means that the cutoff to represent in the same way a gaussian depends linearly on the exponent. Thus one can get a first guess for an acceptable guess can be take from the knowledge that for water with alphaH=47.7 a good cutoff for doing MD is 280 Ry.

It turns out that if one wants to put the whole density on the grid, the core electrons of even the simplest atoms cannot be represented, thus one has to remove to core electrons and use pseudopotentials for the atoms. In Cp2k we use the Goedecker-Teter-Hutter pseudopotentials
Goedecker1996 (http://cp2k.berlios.de/manual/references.html#reference_28), these are harder than other pseudopotentials, but also more accurate.


|---------------------------- #### Smoothing

ñ is optimized for the electrostatic part, but is used also to calculate the echange and correlation potential. Because of this, and because the GTH pseudopotential goes almost to 0 close to the core of the atom, the xc potentisl, especially for gradient corrected functionals, converges badly. Instead of using very high cutoffs one can perform a smoothing of the density, and calculate the derivatives on the grid with other methods than the G-space based derivatives. For MD of water using a cutoff of 280 Ry XC_SMOOTH_RHO NN10 and XC_DERIV SPLINE2_SMOOTH (in the FORCE_EVAL%DFT%SC%XC_GRID section) give good results, please note that these options renormalize the total energy, and the amount of renormalization is dependent on the cutoff. Thus energies with different cutoffs cannot be easily compared, only interaction energies or forces can be calculated.

Methods that do not redefine the total energy are XC_SMOOTH_RHO NONE and XC_DERIV equal to either PW, SPLINE3 or SPLINE2. Thes are listed from the one that assumes more regularity (PW the the one that assumes less regularity SPLINE2. Normally SPLINE2 is a good choice, but for high cutoffs (600 Ry for water) SPLINE3 is better. The default (PW) is not bad, but generally inferior to the others.


|---------------------------- #### Basisset

The QS part of Cp2k uses basis sets that are a linear combination gaussian functions. As the GPW method uses pseudopotentials one cannot use basis set of other programs, at least the core part should be optimized for cp2k. The polarization and augmentation functions can be taken from dunning type basis sets.

Cp2k basis normally are build with an increasing accuracy level starting from SZV (single Z valence, normally only for really crude results), DZVP (double Z valence and one polarization function, already suitable for MD, and give reasonable results), TZV2P (triple Z valence and two polarization functions, fairly good results), QZV3P (quadruple Z valence and three polarization functions, good results). Note that the discussion about the quality of the result is very indicative, and valid for condensed phase MD, for gas phase to reduce the BSSE an augmented basis (aug-) with diffuse basis functions is needed, if you calculate properties that depend on the polarization probably also (aug-) and polarization functions will be important. In any case you should perform a convergence check for your properties with respect to the basis set.

A good set of basis set are available in the BASIS_SET and GTH_BASIS_SETS files. Other can be created with a program, and you can ask on the list or try to optimize them with the program that is part of cp2k.

The basis set to use for an element is set in the FORCE_EVAL%SUBSYS%KIND section with its name with the BASIS_SET keyword.


|---------------------------- #### Pseudo Potential

The GTH pseudopotential that one has to use has a large library of elements available in the POTENTIAL file. The pseudopotential has to be optimized for the exchange correlation functional that one is using. Normally changing from one functional to the other is not too difficult with the optimization program that is part of cp2k. If your element-functional combination is missing ask on the forum.

The pseudopotential to use for an element is set in the FORCE_EVAL%SUBSYS%KIND section with its name.


|---------------------------- #### XC selection

In DFT the choice exchange correlation functional is an important issue, because unfortunately results can depend on it. Here we don't want to discuss how to select it, normally it is a good idea to use the same one as what is used in your field, so that you can more easily compare your results with the literature. An important choice though is whether to use exact exchange or an hybrid functional or not. Hybrid functionals normally improve the description of barriers and radicals, but are much more costly. In general one should start with a GGA and meta GGA and switch to hybrid functionals to check the results or if needed.

In cp2k the xc functional is selected in the FORCE_EVAL%DFT%TDDFPT%XC section. Common functional combinations can be selected directly as section parameters of the XC_FUNCTIONAL for example with the POTENTIAL keyword.

  &XC_FUNCTIONAL BLIP
  &END XC_FUNCTIONAL

but more complex combination have to be choosen by directly setting the underlying subsections.


|---------------------------- #### WF Convergence

Apart from cutoff and basis set with the GPW method there are two other importan switches that control the convergence of the method. One is FORCE_EVAL%DFT%QS%EPS_DEFAULT that controls the convergence of integral calculation, overlap cutoff, neighboring lists... and sets a slew of other EPS_* keywords so that the KS matrix is calculated with the requested precision. The other is EPS_SCF which controls the convergence of the scf procedure. In general one should have an error ef on the forces one should have sqrt(eps_scf) < ef and sqrt(eps_default) < eps_scf, and in general around 1.e-3 is the error that you need to have reasonable MD.


|---------------------------- #### None

To perform the SCF and find the groundstate there are two main methods: the traditional disgonalization method accellerated by the DIIS procedure, and the orbital transform method.

FORCE_EVAL%DFT%SCF%SCF_GUESS RESTART is a parameter that controls how the initial density is built, normally one uses either ATOMIC or RESTART. During an MD this setting normally influences only the initial startup.

Traditional diagonalization is like most other DFT codes, it diagonalizes the KS matrix to get a new density from the n lowest eigenvectors. The density for the next scf cycle is built at the beginning just mixing the new and the old density with the FORCE_EVAL%DFT%SCF%MIXING factor. If the new density is close enough to the old density FORCE_EVAL%DFT%SCF%EPS_DIIS then the DIIS procedure is activated.

Diagonalization works well, but for difficult or big systems the OT method [VH03] is better (and in general there is no reason not to use it as default). The OT method directly minimizes the the electronic energy with respect to the wavefunctions. It uses a clever parametrizations of the wavefunctions so that the orthogonality constraint becomes a linear constraint. To activate OT adding the section FORCE_EVAL%DFT%SCF%OT is enough.

The advantage of the OT method, are that being a direct method it always converges to something, that it needs less memory than the diagonalization (important for big systems), and each SCF iteration is faster (but it might need a little more iterations). Anyway normally it is faster than diagonalization.

The speed of convergence of the OT method the preconditioner choice (FORCE_EVAL%DFT%SCF%PRECONDITIONER) is important. FULL_KINETIC is a good choice for very large systems, but for smaller or difficult systems FULL_ALL is normally better. The quality of the preconditioner is dependent on how close one is to the solution. Especially with expensive preconditioners like FULL_ALL being closer might improve much the preconditioner and the convergence. For this reason it might be worthwhile to rebuild the preconditioner after some iterations of the SCF. This might be reached using setting FORCE_EVAL%DFT%SCF%MAX_SCF to a small value, and activating the outer scf loop addint the FORCE_EVAL%DFT%SCF%OUTER_SCF section, and setting its EPS_SCF equal to the one of the scf loop, and chooing a outer MAX_SCF big enough (the total number of iteration is the product of internal and external MAX_SCF.

Also the minimizer of the OT method can be changed withFORCE_EVAL%DFT%SCF%OT%MINIMIZER, the default is CG that uses a very robust conjugated gradient method. Less roubust but often faste is the DIIS method.


|---------------------------- ### MD

Molecular dynamics a good method to perform themodynamical averages, and to look at dynamical properties. It also a good starting point for many other more advanced techniques.

During an MD one expects the density to change more or less continously, thus it is possible to use the solutions of the previous steps to create the new initial guess for the density (and wavefunctions for OT). Indeed cp2k can use different extrapolations techniques (FORCE_EVAL%DFT%QS).

For MD a good guess is PS with an EXTRAPOLATION_ORDER of 3. If you are doing something where from one step to the other there is little continuity, (geometry optimization, montecarlo), then something with little continuity like LINEAR_PS or just the previous density (USE_PREV_P) might be better. If you change the particle number then a USE_GUESS that restarts from scratch with the restart method choosen in FORCE_EVAL%DFT%SCF%SCF_GUESS. The ASPC extrapolation is used in connection with langevin and a reduced SCF convergence (just on SCF step) and hystory restart to simulate big systems.


|---------------------------- #### Trajectory

With the printkey MOTION%PRINT%TRAJECTORY you can control the output of the trajectory. The name of the file is by default projectname-pos-1.xyz and projectname is whatever you have written in GLOBAL%PROJECT. In the prinkey you can also chenge the format from xyz to something else.

An interesting file to check is the projectname-1.ener file, in it you can find the following columns:
md_step, time[fs], e_kin [hartree], temp[K], e_pot [hartree], e_tot [hartree], cpu_time_per_step [s]

You should always check it and look at how the system equilibrates.

The .ener file and other interesting trajectory files are all controlled with subsections of MOTION%PRINT.


|---------------------------- #### MD Convergence

If the MD has to be trusted then one should be sure that the trajectory can be trusted. Actually a simple, and very sensitive test that there are no big technical errors is to perform an NVE trajectory and look at the energy conservation. The enrgy conservation has normally two features, short time oscillations (that are larger when the system is not yet equilibrated) and a long range drift. If you express these in K/atom, then you can compare them with the temperature that you are simulating at. Another (equivalent) possibility is to express them as fraction of the kinetic energy. The oscillation and drift (normally per ps, but it also depends on how many picoseconds you want to simulate, and if you want an NVE trajectory) should be small with respect to the kinetic energy (1% or less is a good value, but obviously it depends on the accuracy that you want to achieve, more might be acceptable, or less needed).

To improve the energy conservation one can either improve the forces with EPS_SCF and EPS_DEFAULT, improve ñ increasing the cutoff, and reduce the timestep. For the timestep a good value is normally around 1 fs, but if you are simulating high temperature or special system you might need to reduce it. Normally having good forces and larger timestep is advantageous. Obviously the timestep cannot be smaller than the frequency of the highest oscillations of the system (typically H atoms, that is the reason sometime D atoms are used).

Conserving the total energy well is not enough if the system is very heterogeneous and the interesting part is small. In that case there is the risk that even a large error on it might pass unnoticed. If this is to be excepted (for example the atom with the sharpest gaussian basis set is in the interesting part) then checking that part of the system (oscillations, kinetic energy,...) is advisable.


|---------------------------- ##### Equilibration

For the result to be meaningful the system should be equilibrated, and not in a very unlikely state. If one is doing shooting or transition path sampling then this is less true, but still the system should not be in a very high-energy state.

So at the beginning you should build your system in some meaningful way, or from classical simulations. To have a better startingpoint you can optimize the energy (if your system is small), you anneal it, but it is not always needed. Then you can equilibrate it at a given temperature.

To equilibrate a system one can use a crude velocity rescale when he is too far away from the goal temperature (as established by MOTION%MD%TEMP_TOL). Doing an NVE simulation with TEMP_TOL is better way to equilibrate than using the NVT ensamble that uses the Nose-Hoover chain thermostats and might give spurios effects if you are far from equilibrium, as it tryes to conserve some extended quantity.the thermostat can store energy that he will give back at some later point. It should be taken into account that the temperature is not constant, but does oscillate in the NVE ensamble, these oscillations are connected with the specific heat and are inversely proportional with sqrt(N) where N is the system size.

A faster way to equilibrate the system is to use LANGEVIN as MOTION%MD%ENSEMBLE, and use a GAMMA of 0.001 [1/fs] (or larger if you want to equilibrate faster). Langevin introduces a viscous dissipative force and a random forces that are in equilibrioum at the given temperature. For equilibration purposes (and not to simulate removed degrees of freedom, like a solvent), the smaller gamma the longer it takes to equilibrate, and the closer the trajectory is to an NVE trajectory, the larger gamma the more the "environment thermostat" influences the system. Also With langevin if your system is in a bad initial configuration it is a good idea to set a TEMP_TOL, or first anneal a little the system.


|---------------------------- ### gapw


|---------------------------- ### Periodicity

The Cp2k program is optimized for periodic calculations, and those are the default, still it is possible to perform also other kinds of calculations. First an important thing to note is that by convention the cell goes from 0 to h, not from -h/2 to h/2, thus if ypou want to put a cluster at the center of the cell you need to put it in h/2 not in 0.

The periodicity of the neighboring list, and thus of the gaussian collocation/integration is controlled by FORCE_EVAL%SUBSYS%CELL%PERIODIC.

The poisson solver (electrostatics) is controlled in the section FORCE_EVAL%DFT%POISSON. The possible poisson solver are choosen with the POISSON_SOLVER keyword, that can have the values

• PERIODIC, which can do only fully periodic solvers,
• ANALYTIC which can do 0, 1d and 2d periodic solutions using analytical green functions in the g space (slow convergence),
• MT Martyna Tuckermann decoupling, that interacts only with the nearest neighbohr, beware these are completely wrong in the cell is smaller than twice the cluster size (with electronic density),
• MULTIPOLE, uses a schema that fits the total charge with one gaussian per atom [Blo95].

The periodicity of the poisson solver (electrostatics) is set in FORCE_EVAL%DFT%POISSON%PERIODIC, and the poisson solver choosen should support
[document ends abruptly --stern (https://wiki.anl.gov/cnm/User:Stern)]


|--------------------------- # HPC/Applications/cp2k

Note: This document is based on a .doc file of unknown provenance. I converted it and made minor updates to links. ---stern (https://wiki.anl.gov/cnm/User:Stern).

The former main CP2K site http://cp2k.berlios.de/ is now defunct. Content has not yet been migrated to the new site http://www.cp2k.org/ .


|--------------------------- ## Contents

1. 1 CP2K User Self Support
2. 2 Input and Output
 2.1. 2.1 Input Reference Manual
 2.2. 2.2 General Input Syntax
 2.3. 2.3 Basic Input File Structure
 2.4. 2.4 Output Generation and "Print Keys"
  2.4.1. 2.4.1 Section parameter (= argument to &SECTION)
 2.5. 2.5 Restarting Calculations
3. 3 Parameter choices
 3.1. 3.1 GPW
 3.2. 3.2 Cutoff
 3.3. 3.3 Smoothing
 3.4. 3.4 Basisset
 3.5. 3.5 Pseudo Potential
 3.6. 3.6 XC selection
 3.7. 3.7 WF Convergence
 3.8. 3.8 ot / diag
 3.9. 3.9 MD
  3.9.1. 3.9.1 Trajectory
  3.9.2. 3.9.2 MD Convergence
   3.9.2.1. 3.9.2.1 Equilibration
 3.10. 3.10 gapw
 3.11. 3.11 Periodicity


|--------------------------- ## CP2K User Self Support

The following pages are intended to be a starting point for people who want to use CP2K in their research. They are by far not complete and by no means a replacement for reading the related literature, running tests etc., but an attempt to get users started at all and explain commonly used features, quirks and problems of the CP2K code. Part of it is based on the doc/tutorialCp2k.html file from the CP2K cvs distribution. All CP2K users are encouraged to contribute to these pages by making corrections and/or adding new text to make it as useful as possible.

Further information:

• http://www.cp2k.org/ cp2k developers page
• http://cp2k.berlios.de/manual/ input reference manual – defunct
• http://groups.google.com/group/cp2k/ join the CP2K user forum


|--------------------------- ## Input and Output


|--------------------------- ### Input Reference Manual

The input reference documentation (i.e. what keywords exist, what flags they accept and a short description of the purpose) of cp2k is embedded into the executable. The version matching the current cvs main trunk code can be found on the website
http://cp2k.berlios.de/manual/ . Alternatively, you can generate it from your cp2k executable by using the command line flags --html-manual or --xml (
generate_manual_howto (http://cp2k.berlios.de/manual/generate_manual_howto.html)). The documentation generated by the executable should be consistent with its version, whereas the one on the website (usually) refers to the latest version.


|--------------------------- ### General Input Syntax

1. The input is divided into a tree of sections and subsections that start with &<KEYWORD> and end with &END.
2. Each section can contain plain keywords (followed by value(s)) or further (sub-)sections.
3. Both the section names and the keyword names are case insensitive.
4. The special characters "#" and "!" denote the beginning of a comment that goes until the end of the line.
5. If the value of a keyword is expressed in units, the unit can be changed (where supported) by preceding the value with the unit in square brackets. In the square brackets there must be no spaces. Example: "[m]" switches lengths to meters.
6. A long line of input can be split using the "\" character at the end of the line
7. Keywords with a logical value (flags), often default to 'false' when the keyword is missing and to true if the value is omitted; providing an explicit value after the keyword as is recommended (for example KEYWORD T).
8. Sections can have a default parameter that comes right after the section value. For example the OT section has a logical default parameter that controls the activation of the OT method. So, simply writing

  &OT
   ...
   &END OT

  &OT FALSE
   ...
   &END OT

• Whitespace is (mostly) ignored, so using indentation in the input file helps making sure that the structure is correct. If you are an (x-)emacs user, you can try the cp2k emacs mode from http://cp2k.googlegroups.com/web/cp2k-mode.el to assist in editing. This mode recognized known cp2k keywords for syntax highlighting and indentation.


|--------------------------- ### Basic Input File Structure

On the topmost level a minimal cp2k input file must have a
&GLOBAL (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EGLOBAL.html) section which allows to set basic and global job parameters (e.g. project name and run type) and usually also the
&FORCE_EVAL (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL.html) section is provided to select the method by which forces and/or energies are computed. Depending on the run type you may need addional sections, most frequently a
&MOTION (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EMOTION.html) section.

The most important flag in the
&FORCE_EVAL (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL.html) section is the value you provide to the
METHOD (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL.html#METHOD) keyword, as this selects how energies and forces a evaluated (ab initio DFT, empirical force-field, QM/MM and so on). This way you can easily switch from one method to the another (provided there are meaningful parameters to both methods in the input). If you want to use the ab-initio DFT part of cp2k then the 
&DFT subsection and its
&QS (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7EDFT%7EQS.html) subsection will probabily be of interest for you, in the case of a force-field calculation you may want to have a closer look at the
&MM (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7EMM.html) subsection. The
&SUBSYS (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7ESUBSYS.html) subsection allows you to define your (sub-)system (=atoms, elements, positions, supercell and so on). Specifically coordinates and molecular mechanics topologies can be provided "inline" or read in from external files.

Whenever atoms move during a calculation (e.g. geometry optimization or molecular dynamics), you can set the corresponding parameters in the
&MOTION (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EMOTION.html) section.

More details on frequently used keywords will follow in the description of individual examples. In general, one has to keep in mind that the structure of the input file tries to mimic the structure of the code (so it may happen, that seemingly related flags are defined in different sections). Also, when discussing individual flags, it is recommended to name a flags by its whole "trace", e.g. use
%FORCE_EVAL%SUBSYS%COORD (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7ESUBSYS%7ECOORD.html) to refer to the section where you provide coordinates explicitely. This naming conventions is also used by the input reference manual, so if you search it for functionality, you can see immediately where the keyword belongs in the input "tree".


|--------------------------- ### None

Output handling in cp2k is, like many other things, very flexible and modular, and thus for the beginner occasionally a bit confusing. One generally controls the amount and frequency and destination of output generated from &PRINT subsections in input file sections that control a certain functionality. Those &PRINT subsections are generally referred to as print keys. Whether a print key is "triggered" or not is primarily and globally controlled by the
%GLOBAL%PRINT_LEVEL (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EGLOBAL.html#PRINT_LEVEL) keyword. Possible values are:

with MEDIUM being the default (this is quite verbose, but a good choice when starting a new project). For output that is written to a file, that file name is usually derived from the value of the
%GLOBAL&PROJECT_NAME (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EGLOBAL.html#PROJECT_NAME) keyword.

A more fine grained control about what is printed where can be obtained via modifying print keys explicitly and changing the contained parameters.To understand how to control the output, it is necessary to first understand the iteration level. During the calculations cp2k keeps a global iteration level count, which is a set of integers that keep track how many iterations of what program module one has done so far. The exact meaning of each iteration level depends on the run type, for example doing an MD with the QS GPW method an iteration level count of "1 4 5" means that the program is doing the 5th SCF step of the 4th MD step, whereas "1 9" means the we are at the 9th md step (outside the scf loop). The first 1 is a root iteration level that stays always 1 during a normal MD run.


|--------------------------- #### None

Level starting at which this property is printed, valid values are the available print levels SILENT, LOW, MEDIUM, HIGH, DEBUG and additionally ON and OFF. Not providing a &PRINT section means to take its default value (predefined based on the general usefulness of the corresponding output). The presence of a &PRINT section implies a value of ON (= always printed). Use OFF to selectively turn a printkey off.

• Use __STD_OUT__ (exactly as written here) for the screen or a standard logger file.
• Use filename to get "projectname-filename[-middlename]-iteration.extension"
• Use ./filename (or any path that contains at least one "/") to get "./filename[-middlename]-iteration.extension"
• Use =filename to get exactly filename as output file (please note that this can be dangerous because different output/iterations might write on the same file


|--------------------------- ### Restarting Calculations

For large or long calculations one needs a restart mechanism to continue a calculation from where it was left of and sometimes also change a few parameters (e.g. continue an NVE trajectory in NVT ensemble). Regular cp2k restart files are just (normal) input files with all the defaults made explicit. So it should not be too difficult to understand them. However editing those restart file is not so practical, and cannot be prepared before the previous run has finished. To make this restarting easier and more flexible one can tell cp2k to read (additional) input from an external file and which parts of that file should override the current input. This is done with the section
&EXT_RESTART (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EEXT_RESTART.html) giving the name of the external input file with the
%EXT_RESTART%RESTART_FILE_NAME (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EEXT_RESTART.html#RESTART_FILE_NAME)
[1] (http://groups.google.com/) keyword. In this section there are several keywords control exactly what is taken from the external file, for example if one wants to restart the positions and not the velocities, one needs to set RESTART_VEL F and RESTART_POS T. By default all (supported) parameters read in from the restart file override the current input.

In DFT calculation there is a second restart file containing the wavefunctions. This restart is stored in a binary file that is architecture specific (see cp2k/tools/RestartTools if you need to transfer it). The name. location and frequency of this file are controlled by the
%FORCE_EVAL%DFT%SCF%PRINT%RESTART (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7EDFT%7ESCF%7EPRINT%7ERESTART.html) print key. Reading in the wavefunction restart is done by setting the file name with
%FORCE_EVAL%DFT%WFN_RESTART_FILE_NAME (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7EDFT.html#WFN_RESTART_FILE_NAME) and then setting the value of the keyword
%FORCE_EVAL%DFT%SCF%SCF_GUESS (http://cp2k.berlios.de/input/InputReference%7E__ROOT__%7EFORCE_EVAL%7EDFT%7ESCF.html#SCF_GUESS) to RESTART (default is an atomic guess).




|--------------------------- ## Parameter choices


|--------------------------- #### GPW

The Gaussian Plane Waves method
Lippert1997 (http://cp2k.berlios.de/manual/references.html#reference_31) to efficiently solve the DFT Kohn-Sham equations. It uses gaussians as basisset, and planewaves as auxiliary basis. This is similar at the Resolution of Identity (RI) methods but with a different basisset.

In GPW the whole density is transferred to plane waves, and one has the density n(r)=sumi jPi j phii(r)phij(r) in the gaussian basis set and the density ñ taken on a uniform grid.

Then ñ is used to caluclate the hartree potential VH (via an FFT based poisson solver) and the exchange and correlation potential Vxc. These potential are then transferred back to gaussian basis set by integrating them with phii(r)phij(r). To make the collocation and integration perfectly consistent with each other one can set FORCE_EVAL%DFT%QS%MAP_CONSISTENT this normally adds only a very small overhead to the calculation and is


|--------------------------- #### Cutoff

n and ñ are not equal, and this introduces an error in the calculation. ñ converges toward n when the cutoff (that controls the grid spacing) goes to infinity (and gridspacing to 0). Which cutoff is sufficient to represent a density depends on how sharp is the gaussian basis set (or that of the potential, but it is always broader).

For hystorical reasons the density of the grid is given as the energy (in Ry) of the highest reciprocal vector that can be represented on the on the grid. This can be roughly given as 0.5(pi/dr)**2 where dr is the gridspacing in Bohr. The characteristic length of a gaussian with exponent A is given by 1/sqrt(a) (up to a factor 2 depending on the convention used). This means that the cutoff to represent in the same way a gaussian depends linearly on the exponent. Thus one can get a first guess for an acceptable guess can be take from the knowledge that for water with alphaH=47.7 a good cutoff for doing MD is 280 Ry.

It turns out that if one wants to put the whole density on the grid, the core electrons of even the simplest atoms cannot be represented, thus one has to remove to core electrons and use pseudopotentials for the atoms. In Cp2k we use the Goedecker-Teter-Hutter pseudopotentials
Goedecker1996 (http://cp2k.berlios.de/manual/references.html#reference_28), these are harder than other pseudopotentials, but also more accurate.


|--------------------------- #### Smoothing

ñ is optimized for the electrostatic part, but is used also to calculate the echange and correlation potential. Because of this, and because the GTH pseudopotential goes almost to 0 close to the core of the atom, the xc potentisl, especially for gradient corrected functionals, converges badly. Instead of using very high cutoffs one can perform a smoothing of the density, and calculate the derivatives on the grid with other methods than the G-space based derivatives. For MD of water using a cutoff of 280 Ry XC_SMOOTH_RHO NN10 and XC_DERIV SPLINE2_SMOOTH (in the FORCE_EVAL%DFT%SC%XC_GRID section) give good results, please note that these options renormalize the total energy, and the amount of renormalization is dependent on the cutoff. Thus energies with different cutoffs cannot be easily compared, only interaction energies or forces can be calculated.

Methods that do not redefine the total energy are XC_SMOOTH_RHO NONE and XC_DERIV equal to either PW, SPLINE3 or SPLINE2. Thes are listed from the one that assumes more regularity (PW the the one that assumes less regularity SPLINE2. Normally SPLINE2 is a good choice, but for high cutoffs (600 Ry for water) SPLINE3 is better. The default (PW) is not bad, but generally inferior to the others.


|--------------------------- #### Basisset

The QS part of Cp2k uses basis sets that are a linear combination gaussian functions. As the GPW method uses pseudopotentials one cannot use basis set of other programs, at least the core part should be optimized for cp2k. The polarization and augmentation functions can be taken from dunning type basis sets.

Cp2k basis normally are build with an increasing accuracy level starting from SZV (single Z valence, normally only for really crude results), DZVP (double Z valence and one polarization function, already suitable for MD, and give reasonable results), TZV2P (triple Z valence and two polarization functions, fairly good results), QZV3P (quadruple Z valence and three polarization functions, good results). Note that the discussion about the quality of the result is very indicative, and valid for condensed phase MD, for gas phase to reduce the BSSE an augmented basis (aug-) with diffuse basis functions is needed, if you calculate properties that depend on the polarization probably also (aug-) and polarization functions will be important. In any case you should perform a convergence check for your properties with respect to the basis set.

A good set of basis set are available in the BASIS_SET and GTH_BASIS_SETS files. Other can be created with a program, and you can ask on the list or try to optimize them with the program that is part of cp2k.

The basis set to use for an element is set in the FORCE_EVAL%SUBSYS%KIND section with its name with the BASIS_SET keyword.


|--------------------------- #### Pseudo Potential

The GTH pseudopotential that one has to use has a large library of elements available in the POTENTIAL file. The pseudopotential has to be optimized for the exchange correlation functional that one is using. Normally changing from one functional to the other is not too difficult with the optimization program that is part of cp2k. If your element-functional combination is missing ask on the forum.

The pseudopotential to use for an element is set in the FORCE_EVAL%SUBSYS%KIND section with its name.


|--------------------------- #### XC selection

In DFT the choice exchange correlation functional is an important issue, because unfortunately results can depend on it. Here we don't want to discuss how to select it, normally it is a good idea to use the same one as what is used in your field, so that you can more easily compare your results with the literature. An important choice though is whether to use exact exchange or an hybrid functional or not. Hybrid functionals normally improve the description of barriers and radicals, but are much more costly. In general one should start with a GGA and meta GGA and switch to hybrid functionals to check the results or if needed.

In cp2k the xc functional is selected in the FORCE_EVAL%DFT%TDDFPT%XC section. Common functional combinations can be selected directly as section parameters of the XC_FUNCTIONAL for example with the POTENTIAL keyword.

  &XC_FUNCTIONAL BLIP
  &END XC_FUNCTIONAL

but more complex combination have to be choosen by directly setting the underlying subsections.


|--------------------------- #### WF Convergence

Apart from cutoff and basis set with the GPW method there are two other importan switches that control the convergence of the method. One is FORCE_EVAL%DFT%QS%EPS_DEFAULT that controls the convergence of integral calculation, overlap cutoff, neighboring lists... and sets a slew of other EPS_* keywords so that the KS matrix is calculated with the requested precision. The other is EPS_SCF which controls the convergence of the scf procedure. In general one should have an error ef on the forces one should have sqrt(eps_scf) < ef and sqrt(eps_default) < eps_scf, and in general around 1.e-3 is the error that you need to have reasonable MD.


|--------------------------- #### None

To perform the SCF and find the groundstate there are two main methods: the traditional disgonalization method accellerated by the DIIS procedure, and the orbital transform method.

FORCE_EVAL%DFT%SCF%SCF_GUESS RESTART is a parameter that controls how the initial density is built, normally one uses either ATOMIC or RESTART. During an MD this setting normally influences only the initial startup.

Traditional diagonalization is like most other DFT codes, it diagonalizes the KS matrix to get a new density from the n lowest eigenvectors. The density for the next scf cycle is built at the beginning just mixing the new and the old density with the FORCE_EVAL%DFT%SCF%MIXING factor. If the new density is close enough to the old density FORCE_EVAL%DFT%SCF%EPS_DIIS then the DIIS procedure is activated.

Diagonalization works well, but for difficult or big systems the OT method [VH03] is better (and in general there is no reason not to use it as default). The OT method directly minimizes the the electronic energy with respect to the wavefunctions. It uses a clever parametrizations of the wavefunctions so that the orthogonality constraint becomes a linear constraint. To activate OT adding the section FORCE_EVAL%DFT%SCF%OT is enough.

The advantage of the OT method, are that being a direct method it always converges to something, that it needs less memory than the diagonalization (important for big systems), and each SCF iteration is faster (but it might need a little more iterations). Anyway normally it is faster than diagonalization.

The speed of convergence of the OT method the preconditioner choice (FORCE_EVAL%DFT%SCF%PRECONDITIONER) is important. FULL_KINETIC is a good choice for very large systems, but for smaller or difficult systems FULL_ALL is normally better. The quality of the preconditioner is dependent on how close one is to the solution. Especially with expensive preconditioners like FULL_ALL being closer might improve much the preconditioner and the convergence. For this reason it might be worthwhile to rebuild the preconditioner after some iterations of the SCF. This might be reached using setting FORCE_EVAL%DFT%SCF%MAX_SCF to a small value, and activating the outer scf loop addint the FORCE_EVAL%DFT%SCF%OUTER_SCF section, and setting its EPS_SCF equal to the one of the scf loop, and chooing a outer MAX_SCF big enough (the total number of iteration is the product of internal and external MAX_SCF.

Also the minimizer of the OT method can be changed withFORCE_EVAL%DFT%SCF%OT%MINIMIZER, the default is CG that uses a very robust conjugated gradient method. Less roubust but often faste is the DIIS method.


|--------------------------- ### MD

Molecular dynamics a good method to perform themodynamical averages, and to look at dynamical properties. It also a good starting point for many other more advanced techniques.

During an MD one expects the density to change more or less continously, thus it is possible to use the solutions of the previous steps to create the new initial guess for the density (and wavefunctions for OT). Indeed cp2k can use different extrapolations techniques (FORCE_EVAL%DFT%QS).

For MD a good guess is PS with an EXTRAPOLATION_ORDER of 3. If you are doing something where from one step to the other there is little continuity, (geometry optimization, montecarlo), then something with little continuity like LINEAR_PS or just the previous density (USE_PREV_P) might be better. If you change the particle number then a USE_GUESS that restarts from scratch with the restart method choosen in FORCE_EVAL%DFT%SCF%SCF_GUESS. The ASPC extrapolation is used in connection with langevin and a reduced SCF convergence (just on SCF step) and hystory restart to simulate big systems.


|--------------------------- #### Trajectory

With the printkey MOTION%PRINT%TRAJECTORY you can control the output of the trajectory. The name of the file is by default projectname-pos-1.xyz and projectname is whatever you have written in GLOBAL%PROJECT. In the prinkey you can also chenge the format from xyz to something else.

An interesting file to check is the projectname-1.ener file, in it you can find the following columns:
md_step, time[fs], e_kin [hartree], temp[K], e_pot [hartree], e_tot [hartree], cpu_time_per_step [s]

You should always check it and look at how the system equilibrates.

The .ener file and other interesting trajectory files are all controlled with subsections of MOTION%PRINT.


|--------------------------- #### MD Convergence

If the MD has to be trusted then one should be sure that the trajectory can be trusted. Actually a simple, and very sensitive test that there are no big technical errors is to perform an NVE trajectory and look at the energy conservation. The enrgy conservation has normally two features, short time oscillations (that are larger when the system is not yet equilibrated) and a long range drift. If you express these in K/atom, then you can compare them with the temperature that you are simulating at. Another (equivalent) possibility is to express them as fraction of the kinetic energy. The oscillation and drift (normally per ps, but it also depends on how many picoseconds you want to simulate, and if you want an NVE trajectory) should be small with respect to the kinetic energy (1% or less is a good value, but obviously it depends on the accuracy that you want to achieve, more might be acceptable, or less needed).

To improve the energy conservation one can either improve the forces with EPS_SCF and EPS_DEFAULT, improve ñ increasing the cutoff, and reduce the timestep. For the timestep a good value is normally around 1 fs, but if you are simulating high temperature or special system you might need to reduce it. Normally having good forces and larger timestep is advantageous. Obviously the timestep cannot be smaller than the frequency of the highest oscillations of the system (typically H atoms, that is the reason sometime D atoms are used).

Conserving the total energy well is not enough if the system is very heterogeneous and the interesting part is small. In that case there is the risk that even a large error on it might pass unnoticed. If this is to be excepted (for example the atom with the sharpest gaussian basis set is in the interesting part) then checking that part of the system (oscillations, kinetic energy,...) is advisable.


|--------------------------- ##### Equilibration

For the result to be meaningful the system should be equilibrated, and not in a very unlikely state. If one is doing shooting or transition path sampling then this is less true, but still the system should not be in a very high-energy state.

So at the beginning you should build your system in some meaningful way, or from classical simulations. To have a better startingpoint you can optimize the energy (if your system is small), you anneal it, but it is not always needed. Then you can equilibrate it at a given temperature.

To equilibrate a system one can use a crude velocity rescale when he is too far away from the goal temperature (as established by MOTION%MD%TEMP_TOL). Doing an NVE simulation with TEMP_TOL is better way to equilibrate than using the NVT ensamble that uses the Nose-Hoover chain thermostats and might give spurios effects if you are far from equilibrium, as it tryes to conserve some extended quantity.the thermostat can store energy that he will give back at some later point. It should be taken into account that the temperature is not constant, but does oscillate in the NVE ensamble, these oscillations are connected with the specific heat and are inversely proportional with sqrt(N) where N is the system size.

A faster way to equilibrate the system is to use LANGEVIN as MOTION%MD%ENSEMBLE, and use a GAMMA of 0.001 [1/fs] (or larger if you want to equilibrate faster). Langevin introduces a viscous dissipative force and a random forces that are in equilibrioum at the given temperature. For equilibration purposes (and not to simulate removed degrees of freedom, like a solvent), the smaller gamma the longer it takes to equilibrate, and the closer the trajectory is to an NVE trajectory, the larger gamma the more the "environment thermostat" influences the system. Also With langevin if your system is in a bad initial configuration it is a good idea to set a TEMP_TOL, or first anneal a little the system.


|--------------------------- ### gapw


|--------------------------- ### Periodicity

The Cp2k program is optimized for periodic calculations, and those are the default, still it is possible to perform also other kinds of calculations. First an important thing to note is that by convention the cell goes from 0 to h, not from -h/2 to h/2, thus if ypou want to put a cluster at the center of the cell you need to put it in h/2 not in 0.

The periodicity of the neighboring list, and thus of the gaussian collocation/integration is controlled by FORCE_EVAL%SUBSYS%CELL%PERIODIC.

The poisson solver (electrostatics) is controlled in the section FORCE_EVAL%DFT%POISSON. The possible poisson solver are choosen with the POISSON_SOLVER keyword, that can have the values

• PERIODIC, which can do only fully periodic solvers,
• ANALYTIC which can do 0, 1d and 2d periodic solutions using analytical green functions in the g space (slow convergence),
• MT Martyna Tuckermann decoupling, that interacts only with the nearest neighbohr, beware these are completely wrong in the cell is smaller than twice the cluster size (with electronic density),
• MULTIPOLE, uses a schema that fits the total charge with one gaussian per atom [Blo95].

The periodicity of the poisson solver (electrostatics) is set in FORCE_EVAL%DFT%POISSON%PERIODIC, and the poisson solver choosen should support
[document ends abruptly --stern (https://wiki.anl.gov/cnm/User:Stern)]


|--------------------------- # HPC/Modules/g09

Redirect to:

• HPC/Applications/g09 (https://wiki.anl.gov/cnm/HPC/Applications/g09)


|---------------------------- # HPC/Applications/g09


|---------------------------- ## Contents

1. 1 Introduction
 1.1. 1.1 Version note
 1.2. 1.2 License status
2. 2 Job script
 2.1. 2.1 Usage
 2.2. 2.2 Operation
3. 3 Parsing script
4. 4 Notes on Linda
 4.1. 4.1 Incomplete node use
 4.2. 4.2 Error messages


|---------------------------- ## Introduction

Gaussian (http://www.gaussian.com/) is an electronic
structure program used by chemists, chemical
engineers, biochemists, physicists and others for research in
established and emerging areas of chemical interest.

Starting from the basic laws of quantum mechanics, Gaussian predicts
the energies, molecular structures, and vibrational frequencies of
molecular systems, along with numerous molecular properties derived
from these basic computation types. It can be used to study molecules
and reactions under a wide range of conditions, including both stable
species and compounds which are difficult or impossible to observe
experimentally such as short-lived intermediates and transition
structures. This article introduces several of its new and enhanced
features.


|---------------------------- ### Version note

The g09 versions on Carbon are 64-bit versions with full support for shared memory and Linda parallelization.

  $ module -l avail g09
  - Package -----------------------------+- Versions -+- Last mod. ------
  /opt/soft/modulefiles:
  g09/A.02.x86_64-1                                    2010/04/29 21:07:18
  g09/A.02.x86_64-2                                    2011/08/05 19:56:04
  g09/C.01.x86_64-1                                    2012/01/16 20:05:38
  g09/D.01.x86_64-1                                    2013/08/02 19:19:22

The last version is the default at the moment for

  module load g09


|---------------------------- ### License status

Our license agreement with Gaussian, Inc. restricts the use of Gaussian applications to Argonne employees.


|---------------------------- ## Job script

• Inspect the job script template (after having loaded the g09 module) at:

  $G09_HOME/g09.job

• This script shows how to use a preprocessing script

  g09preprocess


|---------------------------- ### Usage

Copy the template script and use it in one of two ways:

• edit for each job as needed, or
• adapt the script for basic needs of several jobs, and individualize it by the PBS job name.

The job name can be up to 15 characters long and should not contain unusual characters. Set it, along with your project name and the walltime limit on the qsub command line:

  qsub -N foo [-l walltime=hhh:mm:ss]  g09.job


|---------------------------- ### Operation

Upon job execution, the script reads the input file, and the g09preprocess script interprets and modifies your input for use under PBS on Carbon, as follows:

• Link0-commands %NProcShared=ppn and %LindaWorkers=n123,n124,n125,... are inserted automatically.
• Checkpoint-files named in %chk directives are identified and copied into the compute node's job-specifc $TMPDIR. The %chk specification will be changed to include $TMPDIR. Note that this will be echoed in the g03 output as follows:

  %chk=/tmp/12345.sched1.carboncluster/test0420.chk

• At the end of the job, chk-files in $TMPDIR are moved to $PBS_O_WORKDIR.


|---------------------------- ## Parsing script

Much of the output from Gaussian is available in plaintext format in the log file.
Many users write grep-like utilities on their own to extract such information.
I (stern (https://wiki.anl.gov/cnm/User:Stern) (talk (https://wiki.anl.gov/cnm/User_talk:Stern))) wrote my own, which is available alongside each Gaussian module.

  gauss-parse

For information on usage, run:

  gauss-parse --help
  gauss-parse --man

To give an idea of scope, here is the beginning of the help output:

  Usage:
      gauss-parse [options] [gaussian-output-file ...]

  Options:
      --energy    Output energies (default).

      --spectrum  Output eigenvalues.

      --diis      Print DIIS errors.

      --geometry  Output geometries (into separate files unless "-join" is
                  given).

      --charge    Output Mulliken charges. When --Spin is used, output spin
                  densities instead.

      --force     Output forces.

      --freq      Output frequencies.

      --archive   Expand archive entry.

      --last      Print output for last frame only.

      For energy, geometry, or force modes only:
      …

The script grew from my needs and is not meant as be-all and end-all.
Contact me if you enounter a bug or might need additional functionality, or simply find it useful.


|---------------------------- ## Notes on Linda

G09 is parallelized in two complementary ways:

• on a single node across its processors using shared memory, and
• across different nodes via a subset of the Linda parallelization language – http://gaussian.com/g_tech/g_ur/m_linda.htm


|---------------------------- ### Incomplete node use

g09/Linda may decide not to use the entirety of the nodes made available to it by the g09preprocess stage in the PBS job file.
This section describes how to determine when this is the case and what to do about it.

Consider the following input:

  %mem=20mw
  #p MP2/6-311G(2df,p) force symm=loose MaxDisk=250000000 test
  …

This being run in the job file through g09preprocess:

  #PBS -l nodes=2:ppn=8
  …
  g09preprocess test0420.com | g09 > test0420.out

which produces the input that g09 will see, inserting the node names allocated by PBS:

  %NProcShared=8
  %LindaWorkers=n994,n992
  %mem=20mw
  #p MP2/6-311G(2df,p) force symm=loose MaxDisk=250000000 test
  …

Gaussian will echo its input line by line in its log file:

  Entering Gaussian System, Link 0=g09
  Initial command:
  /opt/soft/g09-D.01.x86_64-1/g09/l1.exe "/tmp/341710.sched1.carboncluster/Gau-32350.inp" -scrdir="/tmp/341710.sched1.carboncluster/"
  Entering Link 1 = /opt/soft/g09-D.01.x86_64-1/g09/l1.exe PID=     32351.
 
  Copyright (c) 1988,1990,1992,1993,1995,1998,2003,2009,2013,
             Gaussian, Inc.  All Rights Reserved.
  …
  Cite this work as:
  Gaussian 09, Revision D.01,
  …
   ******************************************
  Gaussian 09:  EM64L-G09RevD.01 24-Apr-2013
                  1-Aug-2013 
  ******************************************
  %NProcShared=8
  Will use up to    8 processors via shared memory.
  %LindaWorkers=n994,n992
  %mem=20mw
  SetLPE:  input flags="-v -opt "Tsnet.Node.lindarsharg: ssh" "
  SetLPE:    new flags="-v -opt "Tsnet.Node.lindarsharg: ssh"  -nodelist 'n994.carboncluster n992.carboncluster'"
  Will use up to    2 processors via Linda.
  --------------------------------------------------------------------
  #p MP2/6-311G force …
  --------------------------------------------------------------------

• I highly recommend to use the #p ("profuse") flag to better track progress through Gaussian's link stages.
• The term processors is used inconsistently here. For shared memory, it means cores, but for Linda it means nodes.
• You can track the use of Linda by:

  grep exel file.out

  (Enter /opt/soft/g09-D.01.x86_64-1/g09/linda-exe/l302.exel)
  (Enter /opt/soft/g09-D.01.x86_64-1/g09/linda-exe/l401.exel)
  …

• g09 may decide to not use Linda after all. A note like this will appear in the log file:

  PrsmSu:  requested number of processors reduced to:   6 ShMem   1 Linda.


|---------------------------- ### Error messages

When running jobs on more than one node (i.e., using Linda), you may see messages like these in a job's error stream:

  eval server 0 on n019.carboncluster has dropped it's connection.
  eval server 0 on n019.carboncluster has dropped it's connection.
  subprocess pid = 11505 has exited. status = 0x0000, id = 0, state = 17. command was /opt/soft/g09-D.01.x86_64-1/g09/linda8.2/opteron …
  died after signing in successfully
  eval server 0 on n019.carboncluster has dropped it's connection.
  …

• These messages can be ignored, according to http://umbc.rnet.missouri.edu/resources/How2RunGAUSSIAN.html :

These messages are not indicative of a problem. They indicate that the Linda work in a Gaussian link is finished, and that Gaussian is continuing with a new link.

• The environment variable GAUSS_FLAGS (http://gaussian.com/g_tech/g_ur/m_linda.htm) (as set in the g09 modulefile) is now configured to include the flag -v, to better trace Linda operations on worker nodes. Additional lines like the following will show up in a job's error stream:

  ntsnet: using executable file /opt/soft/g09-D.01.x86_64-1/g09/linda-exe/l302.exel
  ntsnet: trying to schedule 1 worker
  ntsnet: scheduled a total of 1 worker
  ntsnet: starting master process on n994.carboncluster
  ntsnet: starting 1 worker on n992.carboncluster


|--------------------------- # HPC/Applications/g03

Contents

1 Introduction

1.1 Version note
1.2 Status


2 Modules
3 Job script

3.1 Usage
3.2 Operation
-------------------------------------------------------------------------------------------------------


|--------------------------- ## Contents

1. 1 Introduction
 1.1. 1.1 Version note
 1.2. 1.2 Status
2. 2 Modules
3. 3 Job script
 3.1. 3.1 Usage
 3.2. 3.2 Operation


|--------------------------- ## Introduction

Gaussian (http://www.gaussian.com/) is an electronic
structure program used by chemists, chemical
engineers, biochemists, physicists and others for research in
established and emerging areas of chemical interest.

Starting from the basic laws of quantum mechanics, Gaussian predicts
the energies, molecular structures, and vibrational frequencies of
molecular systems, along with numerous molecular properties derived
from these basic computation types. It can be used to study molecules
and reactions under a wide range of conditions, including both stable
species and compounds which are difficult or impossible to observe
experimentally such as short-lived intermediates and transition
structures. This article introduces several of its new and enhanced
features.


|--------------------------- ### Version note

This version is Gaussian 03: IA32L-G03RevC.02 from 12-Jun-2004.
This is a 32-bit binary which supports shared memory for up to 4 processors,
but Linda parallelization is not supported.

Gaussian09 (https://wiki.anl.gov/cnm/HPC/Applications/g09) is available, and is a native 64bit version without these limitations.


|--------------------------- ### Status

Available to Argonne-affiliated users only.


|--------------------------- ## Modules

• module:

  module load g03


|--------------------------- ## Job script

• job script template:

  $G03_HOME/g03.job


|--------------------------- ### Usage

The template script can be used for several jobs without re-editing.
Input/Output files are normally derived from the job name, which can be up to 15
characters long and should not contain unusual characters. You can set it, along with your
project name and the walltime limit on the command line:

  qsub -A cnm1234 -N foo [-l walltime=hhh:mm:ss]  g03.job

... or you create one or more personal versions of this script with
your account name and appropriate walltime defaults filled in, and name e.g.
g03-short.job and g03-long.job. You can the use them as follows:

  qsub -N struc1 g03-long.job
  qsub -N struc2 g03-long.job
  ...


|--------------------------- ### Operation

Upon job execution, the script reads the input file, interprets and modifies it as follows:

• Link0-commands %NProcShared=4 and %mem=2GB are inserted automatically.
• Checkpoint-files named in %chk directives are identified and copied into the compute node's job-specifc $TMPDIR. The %chk specification will be changed to include $TMPDIR. Note that this will be echoed in the g03 output as follows:

  %chk=/tmp/12345.mds01.teamhpccluster/test420.chk

• At the end of the job, chk-files in $TMPDIR are moved to $PBS_O_WORKDIR.


|--------------------------- # HPC/Applications/impi


|--------------------------- ## Introduction

Intel-MPI is based on MPICH2 and provides an MPICH2 runtime environment for precompiled binaries.

• Vendor product overview (http://software.intel.com/en-us/articles/intel-mpi-library/)
• Full documentation (http://software.intel.com/en-us/articles/intel-mpi-library-documentation/)


|--------------------------- ## Process manager

Use the Hydra process manager (new since impi version 4.x). See sec. 2.4 Scalable Process Management System in the Reference Manual (http://software.intel.com/sites/products/documentation/hpc/mpi/linux/reference_manual.pdf).
To do so, simply use mpiexec.hydra instead of the customary mpirun or mpiexec calls:

  mpiexec.hydra \
  	-machinefile  $PBS_NODEFILE \
  	-np $(wc -l < $PBS_NODEFILE) \
  	./a.out

With Hydra, you no longer need to set up and tear down the older and considerably less stable MPD manager.


|--------------------------- ## IMPI vs. OpenMPI

Since the openmpi module is loaded by default, use the following instead of module load impi:

  module switch openmpi impi

However, the modules can coexist at runtime if:

• impi (https://wiki.anl.gov/cnm/HPC/Applications) is loaded first and is called using mpiexec.hydra.
• openmpi (https://wiki.anl.gov/cnm/HPC/Applications) is loaded second and is called using mpirun.
• binaries using impi are statically linked, i.e.,

  ldd binary-using-impi | grep libmpi.so || echo OK

• you don't attempt to compile software using the convenience wrappers like mpicc, mpif90, etc. For these wrappers, the last module loaded will be active. It may be possible to use full paths like $IMPI_HOME/bin/mpif90, but this has not been tested fully.

  module unload openmpi
  module load impi
  module load openmpi

  (cd $OMPI_HOME; ls -1 {bin,lib}/* ) > /tmp/ompi
  (cd $IMPI_HOME; ls -1 {bin,lib}/* ) > /tmp/impi
  comm -1 -2 /tmp/?mpi
  rm /tmp/?mpi

  bin/mpicc
  bin/mpicxx
  bin/mpiexec
  bin/mpif77
  bin/mpif90
  bin/mpirun
  lib/libmpi.so


|--------------------------- # HPC/Modules/jmol

Redirect to:

• HPC/Applications/jmol (https://wiki.anl.gov/cnm/HPC/Applications/jmol)


|---------------------------- # HPC/Applications/jmol


|---------------------------- ## Jmol

1. Documentation (http://jmol.sourceforge.net/docs/)
2. Scripting (http://chemapps.stolaf.edu/jmol/docs/)
3. Wiki (http://wiki.jmol.org/)
4. v.11 added a number of significant features:
 4.1. math operators
 4.2. iso-surfaces and planes (http://jmol.sourceforge.net/docs/surface/), incl. transparency
 4.3. read G03 output and cube files


|---------------------------- ## See Also

• Rasmol (http://openrasmol.org/)


|--------------------------- # HPC/Applications/jmol


|--------------------------- ## Jmol

1. Documentation (http://jmol.sourceforge.net/docs/)
2. Scripting (http://chemapps.stolaf.edu/jmol/docs/)
3. Wiki (http://wiki.jmol.org/)
4. v.11 added a number of significant features:
 4.1. math operators
 4.2. iso-surfaces and planes (http://jmol.sourceforge.net/docs/surface/), incl. transparency
 4.3. read G03 output and cube files


|--------------------------- ## See Also

• Rasmol (http://openrasmol.org/)


|--------------------------- # HPC/Modules/lammps

Redirect to:

• HPC/Applications/lammps (https://wiki.anl.gov/cnm/HPC/Applications/lammps)


|---------------------------- # HPC/Applications/lammps


|---------------------------- ## Contents

1. 1 Binaries
2. 2 Library linking
3. 3 GPU support
 3.1. 3.1 Using GPU packages
 3.2. 3.2 Jobs on Carbon
4. 4 Benchmark (pre-GPU version)
 4.1. 4.1 Diagnostic for hybrid parallel runs
 4.2. 4.2 References


|---------------------------- ## Binaries

Several LAMMPS binaries are provided by the LAMMPS module, giving you options to run with MPI and/or a couple of GPU packages.
Earlier modules only contained one MPI binary.
Binaries compiled with GPU support will not run on nodes without a GPU
(CUDA libraries are deliberately only installed on GPU nodes.)
Moreover, a binary built with the USER-CUDA package will attempt to access the GPU by default [1] (http://lammps.sandia.gov/doc/Section_start.html#start_7).

Binary name           Description
------------------------------------------------------------------------------------------------
lmp_openmpi-main      The baseline binary, containing the packages shown by  module help lammps.
lmp_openmpi           The distribution's default name; synonym for lmp_openmpi-main;
lmp_openmpi-gpu       The package "gpu" and all packages from main.
lmp_openmpi-user-cuda The package "user-cuda" and all packages from main.
lmp_openmpi-jr        A custom build for user J.R.

To use the *-gpu and *=user-cuda binaries, load the cuda (https://wiki.anl.gov/cnm/HPC/Applications) module in addition to lammps.

  module load cuda
  module load lammps

To use any one of the binaries, simply name the appropriate one in the job file; full paths are neither necessary nor recommended.


|---------------------------- ## Library linking

• Consult the LAMMPS documentation (http://lammps.sandia.gov/doc/Section_howto.html#library-interface-to-lammps)
• Carbon-specifics: To point your compiler and linker to the installed LAMMPS module, always use the environment variable $LAMMPS_HOME, never full path names. Edit the makefile of your application and add settings similar to the following:

  CPPFLAGS += -I${LAMMPS_HOME}/include
  FPPFLAGS += -I${LAMMPS_HOME}/include
  LDFLAGS += -L$(FFTW3_HOME) -L${LAMMPS_HOME}/lib -llammps -lfftw3 -limf

• The library created with the -llammps link option provides the same LAMMPS package set as the main binary, and supports MPI and OpenMP. It is actually equivalent to using:

  -llammps_mpi-main

• To use GPU nodes, link with one of the following instead:

  -llammps_mpi-gpu
  -llammps_mpi-user-cuda

Inspect a sample code that uses LAMMPS as a library at:

  cd ${LAMMPS_HOME}/src/examples/COUPLE/simple
  less README Makefile


|---------------------------- ## GPU support

LAMMPS offers two different packages for using GPUs, one official, the other user-contributed.
Only one of these packges can be used for a run.
The packages are fully documented in the following sections of the LAMMPS manual (http://lammps.sandia.gov/doc/Manual.html):

• 5. Accelerating LAMMPS performance (http://lammps.sandia.gov/doc/Section_accelerate.html)
 • 5.6 GPU package (http://lammps.sandia.gov/doc/Section_accelerate.html#acc_6)
 • 5.7 USER-CUDA package (http://lammps.sandia.gov/doc/Section_accelerate.html#acc_7)
 • 5.8 Comparison of GPU and USER-CUDA packages (http://lammps.sandia.gov/doc/Section_accelerate.html#acc_8)

To use LAMMPS with GPUs on Carbon you must read and understand these sections. A summary and Carbon-specific details are given in the next section.


|---------------------------- ### Using GPU packages

• HPC/Applications/lammps/Package GPU (https://wiki.anl.gov/cnm/HPC/Applications/lammps/Package_GPU)
• HPC/Applications/lammps/Package USER-CUDA (https://wiki.anl.gov/cnm/HPC/Applications/lammps/Package_USER-CUDA)
• HPC/Applications/lammps/Package OMP (https://wiki.anl.gov/cnm/HPC/Applications/lammps/Package_OMP) – if you really want to.


|----------------------------- # HPC/Applications/lammps/Package GPU


|----------------------------- ## Package GPU

• Provides multi-threaded versions of most pair styles, all dihedral styles and a few fixes in LAMMPS; for the full list:
 • In your browser, open http://lammps.sandia.gov/doc/Section_commands.html#comm
 • Search for the string /cuda.
• Supports one physical GPU per LAMMPS MPI process (CPU core).
• Multiple MPI processes (CPU cores) can share a single GPU, and in many cases it will be more efficient to run this way.


|----------------------------- ### Usage

1. Use the lmp_mpi-gpu binary instead of the MPI-only one.
2. Use a GPU potential style. Do one of the following:
 2.1. Append /gpu to the style name (e.g. pair_style lj/cut/gpu).
 2.2. Use the command suffix gpu (http://lammps.sandia.gov/doc/suffix.html).
 2.3. On the command line, use the -suffix gpu (http://lammps.sandia.gov/doc/Section_start.html#command-line-options).
3. Detail the GPU request. Do one of the following:
 3.1. Near the beginning of your LAMMPS control script, use the command package gpu Ngpu (http://lammps.sandia.gov/doc/package.html) . Since all Carbon GPU nodes have just one GPU per node, the Ngpu argument must be 1.
 3.2. Add -package gpu 1 (http://lammps.sandia.gov/doc/Section_start.html#command-line-options) to the command line options. This is perhaps preferred because you do not need to alter your input file.
4. In the job file or qsub command line, request a node having a GPU (http://www.clusterresources.com/torquedocs21/2.1jobsubmission.shtml#resources), using #PBS -l nodes=...:gpus=1 (referring to the number of GPUs per node).


|----------------------------- ### Job file example

  #PBS -l nodes=...:gpus=1
  …
  mpirun … lmp_mpi-gpu -sf gpu -pk gpu 1 -in infile


|----------------------------- # HPC/Applications/lammps/Package USER-CUDA


|----------------------------- ## Contents

• 1 Package USER-CUDA
 • 1.1 Usage
 • 1.2 Input file example
 • 1.3 Job file example


|----------------------------- ## Package USER-CUDA

• Provides GPU versions of several pair styles and for long-range Coulombics via the PPPM command.
• Only supports a single CPU (core) with each GPU [That should mean multiple nodes are possible; feasibility and efficiency to be determined --stern (https://wiki.anl.gov/cnm/User:Stern) ]


|----------------------------- ### Usage

1. Optional: Use the command package cuda keyword value keyword value … (http://lammps.sandia.gov/doc/package.html) near the beginning of your LAMMPS control script to finely control settings. This is optional since a LAMMPS binary with USER-CUDA always detects and uses a GPU by default.
2. Do one of the following:
 2.1. Append /cuda to the style name (e.g. pair_style lj/cut/cuda)
 2.2. Use the suffix cuda command (http://lammps.sandia.gov/doc/suffix.html).
 2.3. On the command line, use the -suffix cuda switch (http://lammps.sandia.gov/doc/Section_start.html#start_7).
3. Optional: The kspace_style pppm/cuda (http://lammps.sandia.gov/doc/kspace_style.html) command has to be requested explicitly. [I am not sure if that means that other k-space styles implicitly use the GPU --stern (https://wiki.anl.gov/cnm/User:Stern). ]
4. In the job file or qsub command line, request a GPU (http://www.clusterresources.com/torquedocs21/2.1jobsubmission.shtml#resources) #PBS -l nodes=...:gpus=1.
5. Call the lmp_openmpi-user-cuda binary.

• Append /cuda to the style name (e.g. pair_style lj/cut/cuda)
 • Use the suffix cuda command (http://lammps.sandia.gov/doc/suffix.html).
 • On the command line, use the -suffix cuda switch (http://lammps.sandia.gov/doc/Section_start.html#start_7).


|----------------------------- ### Input file example

Examples:

  package cuda gpu/node/special 2 0 2
  package cuda test 3948

  …
  kspace_style    pppm/cuda 1e-5


|----------------------------- ### Job file example

• Serial job:

  #PBS -l nodes=1:ppn=1:gpus=1
  …
  lmp_openmpi-user-cuda -suffix cuda -in infile

• Parallel job; note that ppn must still be 1 as only one LAMMPS process (core) per node can use the sole GPU.

  #PBS -l nodes=3:ppn=1:gpus=1
  …
  mpirun -machinefile $PBS_NODEFILE -np $PBS_NP lmp_openmpi-user-cuda -suffix cuda -in infile


|----------------------------- # HPC/Applications/lammps/Package OMP


|----------------------------- ## Contents

• 1 Package OMP
 • 1.1 Usage
 • 1.2 Input file example
 • 1.3 Job file example


|----------------------------- ## Package OMP

LAMMPS modules since 2012 are compiled with yes-user-omp (http://lammps.sandia.gov/doc/Section_accelerate.html#acc_2), permitting multi-threaded runs of selected pair styles, and in particular MPI/OpenMP hybrid parallel runs. To set up such runs, see HPC/Submitting and Managing Jobs/Advanced node selection (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection).

• The number of MPI tasks running on a node is determined by options to mpirun.
• The number of threads that each MPI task runs with is usually determined by the environment variable OMP_NUM_THREADS, which is 1 by default on Carbon.
• The LAMMPS package omp command has a mandatory argument Nthreads to either override OMP_NUM_THREADS, or use it when set to * - the recommended practice. It appears to be sensible to specify a concrete thread number only once, which means in the job file, and let LAMMPS inherit this value with Nthreads set to *.


|----------------------------- ### Usage

1. Use the command package omp Nthreads mode (http://lammps.sandia.gov/doc/package.html) near the beginning of your LAMMPS control script.
2. Do one of the following:
 2.1. Append /omp to the style name (e.g. pair_style lj/cut/omp)
 2.2. Use the suffix omp command (http://lammps.sandia.gov/doc/suffix.html).
 2.3. On the command line, use the -suffix omp switch (http://lammps.sandia.gov/doc/Section_start.html#start_7).
3. In the job file or qsub command line, reserve nodes and ppn (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection) suitable for OpenMP runs.
4. Call the lmp_openmpi (regular) binary.

• Append /omp to the style name (e.g. pair_style lj/cut/omp)
 • Use the suffix omp command (http://lammps.sandia.gov/doc/suffix.html).
 • On the command line, use the -suffix omp switch (http://lammps.sandia.gov/doc/Section_start.html#start_7).


|----------------------------- ### Input file example

Examples:

  # recommended - inherit OMP_NUM_THREADS
  package omp * force/neigh

  # not recommended
  package omp 4 force


|----------------------------- ### Job file example

• Single node - choose from:
 • pure OpenMP, single entire node (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection), or
 • pure OpenMP, single node, possibly shared (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection).

  lmp_openmpi -suffix omp -in infile

• Multiple nodes - use:
 • HPC/Submitting and Managing Jobs/Advanced node selection#OpenMP/MPI hybrid (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection).

  mpirun … lmp_openmpi -suffix omp -in infile


|---------------------------- ### Jobs on Carbon

For sample PBS scripts, consult these files:

  $LAMMPS_HOME/sample.job
  $LAMMPS_HOME/sample-hybrid.job

• See also HPC/Submitting and Managing Jobs/Example Job Script#GPU nodes (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Example_Job_Script)


|---------------------------- ## None

Using a sample workload from Sanket ("run9"), I tested various OpenMPI options on node types gen1 and gen2.

LAMMPS performs best on gen2 nodes without extra options, and pretty well on gen1 nodes over ethernet(!).

Job tag    Node type Interconnect Additional OpenMPI options                          Relative speed(1000 steps/3 hours)
------------------------------------------------------------------------------------------------------------------------
gen1       gen1      IB           (none)                                              36
gen1srqpin gen1      IB           -mca btl_openib_use_srq 1-mca mpi_paffinity_alone 1 39
gen1eth    gen1      Ethernet     -mca btl self,tcp                                   44
gen2eth    gen2      Ethernet     -mca btl self,tcp                                   49
gen2srq    gen2      IB           -mca btl_openib_use_srq 1                           59
gen2       gen2      IB           (none)                                              59


|---------------------------- ### Diagnostic for hybrid parallel runs

• LAMMPS echoes it parallelization scheme first thing in the output:

  LAMMPS (10 Feb 2012)
    using 4 OpenMP thread(s) per MPI task
  ...
    1 by 2 by 2 MPI processor grid
    104 atoms
  ...

and near the end:

  Loop time of 124.809 on 16 procs (4 MPI x 4 OpenMP) for 30000 steps with 104 atoms

• To see if OpenMP is really active, log into a compute node while a job is running and run top or psuser – The %CPU field should be about OMP_NUM_THREADS × 100%

  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                             
  8047 stern     25   0 4017m  33m 7540 R 401.8  0.1   1:41.60 lmp_openmpi                                                                                         
  8044 stern     25   0 4017m  33m 7540 R 399.9  0.1   1:43.50 lmp_openmpi                                                                                         
  4822 root      34  19     0    0    0 S  2.0  0.0 115:34.98 kipmi0


|---------------------------- ### References

• HPC/Submitting_Jobs/Advanced node selection#Multithreading (OpenMP) (https://wiki.anl.gov/cnm/HPC/Submitting_Jobs/Advanced_node_selection)
• LAMMPS documentation for the OMP package (http://lammps.sandia.gov/doc/Section_accelerate.html#acc_2)
• Command-line options (http://lammps.sandia.gov/doc/Section_start.html#start_7) (explanation for -sf style or -suffix style)

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Applications/lammps


|--------------------------- ## Contents

1. 1 Binaries
2. 2 Library linking
3. 3 GPU support
 3.1. 3.1 Using GPU packages
 3.2. 3.2 Jobs on Carbon
4. 4 Benchmark (pre-GPU version)
 4.1. 4.1 Diagnostic for hybrid parallel runs
 4.2. 4.2 References


|--------------------------- ## Binaries

Several LAMMPS binaries are provided by the LAMMPS module, giving you options to run with MPI and/or a couple of GPU packages.
Earlier modules only contained one MPI binary.
Binaries compiled with GPU support will not run on nodes without a GPU
(CUDA libraries are deliberately only installed on GPU nodes.)
Moreover, a binary built with the USER-CUDA package will attempt to access the GPU by default [1] (http://lammps.sandia.gov/doc/Section_start.html#start_7).

Binary name           Description
------------------------------------------------------------------------------------------------
lmp_openmpi-main      The baseline binary, containing the packages shown by  module help lammps.
lmp_openmpi           The distribution's default name; synonym for lmp_openmpi-main;
lmp_openmpi-gpu       The package "gpu" and all packages from main.
lmp_openmpi-user-cuda The package "user-cuda" and all packages from main.
lmp_openmpi-jr        A custom build for user J.R.

To use the *-gpu and *=user-cuda binaries, load the cuda (https://wiki.anl.gov/cnm/HPC/Applications) module in addition to lammps.

  module load cuda
  module load lammps

To use any one of the binaries, simply name the appropriate one in the job file; full paths are neither necessary nor recommended.


|--------------------------- ## Library linking

• Consult the LAMMPS documentation (http://lammps.sandia.gov/doc/Section_howto.html#library-interface-to-lammps)
• Carbon-specifics: To point your compiler and linker to the installed LAMMPS module, always use the environment variable $LAMMPS_HOME, never full path names. Edit the makefile of your application and add settings similar to the following:

  CPPFLAGS += -I${LAMMPS_HOME}/include
  FPPFLAGS += -I${LAMMPS_HOME}/include
  LDFLAGS += -L$(FFTW3_HOME) -L${LAMMPS_HOME}/lib -llammps -lfftw3 -limf

• The library created with the -llammps link option provides the same LAMMPS package set as the main binary, and supports MPI and OpenMP. It is actually equivalent to using:

  -llammps_mpi-main

• To use GPU nodes, link with one of the following instead:

  -llammps_mpi-gpu
  -llammps_mpi-user-cuda

Inspect a sample code that uses LAMMPS as a library at:

  cd ${LAMMPS_HOME}/src/examples/COUPLE/simple
  less README Makefile


|--------------------------- ## GPU support

LAMMPS offers two different packages for using GPUs, one official, the other user-contributed.
Only one of these packges can be used for a run.
The packages are fully documented in the following sections of the LAMMPS manual (http://lammps.sandia.gov/doc/Manual.html):

• 5. Accelerating LAMMPS performance (http://lammps.sandia.gov/doc/Section_accelerate.html)
 • 5.6 GPU package (http://lammps.sandia.gov/doc/Section_accelerate.html#acc_6)
 • 5.7 USER-CUDA package (http://lammps.sandia.gov/doc/Section_accelerate.html#acc_7)
 • 5.8 Comparison of GPU and USER-CUDA packages (http://lammps.sandia.gov/doc/Section_accelerate.html#acc_8)

To use LAMMPS with GPUs on Carbon you must read and understand these sections. A summary and Carbon-specific details are given in the next section.


|--------------------------- ### Using GPU packages

• HPC/Applications/lammps/Package GPU (https://wiki.anl.gov/cnm/HPC/Applications/lammps/Package_GPU)
• HPC/Applications/lammps/Package USER-CUDA (https://wiki.anl.gov/cnm/HPC/Applications/lammps/Package_USER-CUDA)
• HPC/Applications/lammps/Package OMP (https://wiki.anl.gov/cnm/HPC/Applications/lammps/Package_OMP) – if you really want to.


|--------------------------- ### Jobs on Carbon

For sample PBS scripts, consult these files:

  $LAMMPS_HOME/sample.job
  $LAMMPS_HOME/sample-hybrid.job

• See also HPC/Submitting and Managing Jobs/Example Job Script#GPU nodes (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Example_Job_Script)


|--------------------------- ## None

Using a sample workload from Sanket ("run9"), I tested various OpenMPI options on node types gen1 and gen2.

LAMMPS performs best on gen2 nodes without extra options, and pretty well on gen1 nodes over ethernet(!).

Job tag    Node type Interconnect Additional OpenMPI options                          Relative speed(1000 steps/3 hours)
------------------------------------------------------------------------------------------------------------------------
gen1       gen1      IB           (none)                                              36
gen1srqpin gen1      IB           -mca btl_openib_use_srq 1-mca mpi_paffinity_alone 1 39
gen1eth    gen1      Ethernet     -mca btl self,tcp                                   44
gen2eth    gen2      Ethernet     -mca btl self,tcp                                   49
gen2srq    gen2      IB           -mca btl_openib_use_srq 1                           59
gen2       gen2      IB           (none)                                              59


|--------------------------- ### Diagnostic for hybrid parallel runs

• LAMMPS echoes it parallelization scheme first thing in the output:

  LAMMPS (10 Feb 2012)
    using 4 OpenMP thread(s) per MPI task
  ...
    1 by 2 by 2 MPI processor grid
    104 atoms
  ...

and near the end:

  Loop time of 124.809 on 16 procs (4 MPI x 4 OpenMP) for 30000 steps with 104 atoms

• To see if OpenMP is really active, log into a compute node while a job is running and run top or psuser – The %CPU field should be about OMP_NUM_THREADS × 100%

  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                             
  8047 stern     25   0 4017m  33m 7540 R 401.8  0.1   1:41.60 lmp_openmpi                                                                                         
  8044 stern     25   0 4017m  33m 7540 R 399.9  0.1   1:43.50 lmp_openmpi                                                                                         
  4822 root      34  19     0    0    0 S  2.0  0.0 115:34.98 kipmi0


|--------------------------- ### References

• HPC/Submitting_Jobs/Advanced node selection#Multithreading (OpenMP) (https://wiki.anl.gov/cnm/HPC/Submitting_Jobs/Advanced_node_selection)
• LAMMPS documentation for the OMP package (http://lammps.sandia.gov/doc/Section_accelerate.html#acc_2)
• Command-line options (http://lammps.sandia.gov/doc/Section_start.html#start_7) (explanation for -sf style or -suffix style)

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Modules/lumerical

Redirect to:

• HPC/Applications/lumerical (https://wiki.anl.gov/cnm/HPC/Applications/lumerical)


|--------------------------- # HPC/Modules/meep

Redirect to:

• HPC/Applications/meep (https://wiki.anl.gov/cnm/HPC/Applications/meep)


|--------------------------- # HPC/Applications/meep


|--------------------------- ## Contents

1. 1 Installation Notes
 1.1. 1.1 Distribution
 1.2. 1.2 Supporting Packages
  1.2.1. 1.2.1 blas, lapack
  1.2.2. 1.2.2 zlib
  1.2.3. 1.2.3 FFTW2, FFTW3
  1.2.4. 1.2.4 guile
  1.2.5. 1.2.5 libctl
  1.2.6. 1.2.6 HarmInv
  1.2.7. 1.2.7 HDF5
 1.3. 1.3 MEEP


|--------------------------- # Installation Notes


|--------------------------- ## Distribution

• http://ab-initio.mit.edu/wiki/index.php/Meep
• http://ab-initio.mit.edu/wiki/index.php/Meep_Installation


|--------------------------- ## Supporting Packages


|--------------------------- ### None

• needed for harminv (not speed-critical)
 • CentOS blas and lapack collide with RHEL libgfortran:

  Transaction Check Error:   package libgfortran-4.1.2-14.el5 (which is newer than libgfortran-4.1.1-52.el5.2) is already installed

• 
 • This is RedHat's 64-bit version: libgfortran-4.1.2-14.el5.x86_64 – 32bit version is missing!

We have:

  [root@mgmt01 redhat]# locate '*libgfortran*rpm'
  /drbd/exports/opt/centos/5.0/os/x86_64/CentOS/libgfortran-4.1.1-52.el5.i386.rpm
  /drbd/exports/opt/centos/5.0/os/x86_64/CentOS/libgfortran-4.1.1-52.el5.x86_64.rpm
  /drbd/exports/opt/centos/5.0/updates/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.i386.rpm
  /drbd/exports/opt/centos/5.0/updates/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.x86_64.rpm
  /drbd/exports/opt/centos/5.0/updates-staged/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.i386.rpm
  /drbd/exports/opt/centos/5.0/updates-staged/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.x86_64.rpm
  /drbd/exports/opt/centos/5.1/os/x86_64/CentOS/libgfortran-4.1.2-14.el5.i386.rpm
  /drbd/exports/opt/centos/5.1/os/x86_64/CentOS/libgfortran-4.1.2-14.el5.x86_64.rpm
  /drbd/exports/opt/rhel/5Server/os/x86_64/Server/libgfortran-4.1.1-52.el5.i386.rpm
  /drbd/exports/opt/rhel/5Server/os/x86_64/Server/libgfortran-4.1.1-52.el5.x86_64.rpm
  /drbd/exports/opt/rhel/5Server/updates/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.i386.rpm
  /drbd/exports/opt/rhel/5Server/updates/x86_64/RPMS/libgfortran-4.1.1-52.el5.2.x86_64.rpm
  /drbd/exports/opt/rhel/5Server/updates/x86_64/RPMS/libgfortran-4.1.2-14.el5.x86_64.rpm
  /drbd/exports/opt/rhel/5Server/updates-staged/x86_64/RPMS/libgfortran-4.1.2-14.el5.x86_64.rpm

• 
 • Brute force:

  rpm -ivh /opt/centos/5.1/os/x86_64/CentOS/libgfortran-4.1.2-14.el5.i386.rpm
  yum install lapack lapack-devel blas blas-devel


|--------------------------- ### zlib

  yum install zlib-devel


|--------------------------- ### None

• http://www.fftw.org/
• download to /opt/soft/src/fftw
• build in /opt/soft/build/fftw-*

  ./BUILD.SH
  grep -i warn config*.log

TODO: install and configure "environment-modules"


|--------------------------- ### guile

• from RHEL5

  yum install guile guile-devel

  Installing:
   guile                   x86_64     5:1.8.0-8.20060831cvs  Server            1.4 M
   guile                   i386       5:1.8.0-8.20060831cvs  Server            1.4 M
   guile-devel             x86_64     5:1.8.0-8.20060831cvs  Server            120 k
   guile-devel             i386       5:1.8.0-8.20060831cvs  Server            120 k
  Installing for dependencies:
   gmp                     i386       4.1.4-10.el5     Server            665 k
   gmp-devel               x86_64     4.1.4-10.el5     Server            568 k
   libtool-ltdl            i386       1.5.22-6.1       Server             37 k
   libtool-ltdl            x86_64     1.5.22-6.1       Server             37 k


|--------------------------- ### libctl

• http://ab-initio.mit.edu/wiki/index.php/Libctl
• http://ab-initio.mit.edu/libctl/libctl-3.0.3.tar.gz
• download to /opt/soft/src/meep
• build in /opt/soft/build/libctl-*

  ./BUILD.SH


|--------------------------- ### HarmInv

• http://ab-initio.mit.edu/wiki/index.php/Harminv_installation
• fails to link with Intel MKL?
 • detection failure for sgemm
 • not critical; use reference BLAS/LAPACK
• use icpc instead of icc to handle INFINITY or 1.0/0.0 -- Darn:

  checking for C complex keyword... _Complex
  checking for C complex I constant... unsupported
  configure: error: C doesn't support complex numbers.

• Solution:

  CFLAGS=-std=c99

• final:

  ./BUILD.SH


|--------------------------- ### HDF5

1. http://www.hdfgroup.org/
2. http://www.hdfgroup.org/HDF5/index.html
3. ftp://ftp.hdfgroup.org/HDF5/current/src/
4. ftp://ftp.hdfgroup.org/HDF5/current/src/unpacked/release_docs/INSTALL – long and detailed instructions
5. download to /opt/soft/src/meep
6. build in /opt/soft/build
7. compiled serial version initially

  ./BUILD-SERIAL.SH

• TODO:
 • http://www.hdfgroup.org/HDF5/PHDF5/ – parallel version


|--------------------------- ## MEEP

• download to /opt/soft/src/meep
• build in /opt/soft/build/meep-*

  ./BUILD.SH

• added to

  /opt/teamhpc/node-skel/etc/profile.d/cnm.*sh

• build 3 is a chimera, with -llapack, and MKL dependencies, build 4 uses no MKL
• TODO: eval, benchmark

• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|--------------------------- # HPC/Applications/mkl


|--------------------------- ## Vendor Documentation

1. Intel Math Kernel Library - Full Documentation (http://software.intel.com/en-us/articles/intel-math-kernel-library-documentation/)
 1.1. Release notes, User guides etc.
2. since v10 includes the formerly separate Cluster MKL (providing ScaLapack et al.)
3. provides BLAS, Lapack, ScaLapack, FFTs (including an FFTW interface (http://www.intel.com/software/products/mkl/docs/fftw3xmkl_notes.htm))
4. Link line advisor (http://software.intel.com/en-us/articles/intel-mkl-link-line-advisor/)
 4.1. alternate (static text) (http://software.intel.com/en-us/articles/intel-math-kernel-library-intel-mkl-for-linux-linking-applications-with-intel-mkl-version-100/)


|--------------------------- ## Carbon specifics

• Avoid specifying absolute library paths in your Makefile unless you wish to select a specific version. The user environment is normally correctly set up.
• Loading the MKL module does not yet tell the linker where to find the library. The most convenient place is to modify the Makefile similar to the following:

  LDFLAGS += -L$MKLROOT/lib/em64t

or, starting with 10.3.x:

  LDFLAGS += -L$MKLROOT/lib/intel64

• Link examples:

  # Sequential:
     -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread

  # OpenMP multi-threaded:
     -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread

• The FFTW interface of the MKL can be linked by prefixing the above options with one of:

  -lfftw2xc_intel
  -lfftw2xf_intel
  -lfftw3xc_intel
  -lfftw3xf_intel

Choose the appropriate version between bindings for FFTW v2 vs. v3 and C vs. Fortran.

• see HPC/Carbon_Cluster_-_Getting_started#Example_job_file (https://wiki.anl.gov/cnm/HPC/Carbon_Cluster_-_Getting_started) for controlling OpenMP execution.


|--------------------------- # HPC/Modules/namd

Redirect to:

• HPC/Applications/namd (https://wiki.anl.gov/cnm/HPC/Applications/namd)


|--------------------------- # HPC/Applications/namd


|--------------------------- ## Contents

1. 1 MPI version
 1.1. 1.1 Modules
 1.2. 1.2 Using MPI
2. 2 Using GPUs and MPI
3. 3 Documentation
4. 4 Benchmarks


|--------------------------- ## MPI version


|--------------------------- ### Modules

• As of NAMD-2.9, the namd module requires FFTW-3 (https://wiki.anl.gov/cnm/HPC/Applications/fftw3). You can load both modules together:

  module load fftw3 namd


|--------------------------- ### Using MPI

• NAMD uses its own MPI wrapper, called Charm++ (http://charm.cs.uiuc.edu/), but the default mpirun from OpenMPI works just fine.
• Use the Generic job template (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Example_Job_Script)

  #!/bin/bash
  …
  cd $PBS_O_WORKDIR
  mpirun -machinefile $PBS_NODEFILE -np $PBS_NP \
          namd2 file.namd


|--------------------------- ## Using GPUs and MPI

As of module version namd/2.9plus-MPI-icc-3 the module provides two binaries, a regular one called namd2 (as usual) and a GPU-eneabled binary called namd2-cuda. The latter requires the cuda module as additional prerequisite:

  module load fftw3
  module load cuda
  module load namd

The relevant paragraphs from the NAMD User Guide (http://www.ks.uiuc.edu/Research/namd/2.9/ug/node88.html) are:

Energy evaluation is slower than calculating forces alone, and the loss is much greater in CUDA-accelerated builds. Therefore you should set outputEnergies to 100 or higher in the simulation config file. Some features are unavailable in CUDA builds, including alchemical free energy perturbation and the Lowe-Andersen thermostat.

As this is a new feature you are encouraged to test all simulations before beginning production runs. Forces evaluated on the GPU differ slightly from a CPU-only calculation, an effect more visible in reported scalar pressure values than in energies.
<br.>… 
Each namd2 thread can use only one GPU. Therefore you will need to run at least one thread for each GPU you want to use. Multiple threads can share a single GPU, usually with an increase in performance. NAMD will automatically distribute threads equally among the GPUs on a node.

To run on GPU nodes:

  #PBS -l nodes=N:ppn=PPN:gpus=1
  …
  mpirun -machinfile $PBS_NODEFILE -np $PBS_NP \
       namd2-cuda +idlepoll file.namd

• Test and optimize the N and PPN parameters for your situation. Start with nodes=1:ppn=4, increase up to ppn=12, and/or increase nodes > 1. Speedups from a GPU can be expected to be of order 4–5 ×.
• The gpus=… modifier refers to GPUs per node and currently must always be 1.


|--------------------------- ## Documentation

• See Documentation on the NAMD home page (http://www.ks.uiuc.edu/Research/namd/) – contains official User guide (http://www.ks.uiuc.edu/Research/namd/2.7b1/ug/)
• Local documentation:

  $ ls $NAMD_HOME/share/doc
  README.txt  announce.txt  license.txt  notes.txt  ug.pdf


|--------------------------- ## Benchmarks

• Using ApoA1 example from http://www.ks.uiuc.edu/Research/namd/performance.html

  grep Benchm *2.7*/*.o* | sort -k4,4n | _ -w
  namd-2.7b1-gen2-1/namd-gen2-1.o248034:Info: Benchmark time: 1 CPUs 1.81607 s/step 21.0193 days/ns 241.219 MB memory
  namd-2.7b1-gen2-1/namd-gen2-1.o248034:Info: Benchmark time: 1 CPUs 1.8238 s/step 21.1088 days/ns 240.773 MB memory
  namd-2.7b1-gen2-4/namd-gen2-4.o248032:Info: Benchmark time: 4 CPUs 0.428028 s/step 4.95403 days/ns 90.7305 MB memory
  namd-2.7b1-gen2-4/namd-gen2-4.o248032:Info: Benchmark time: 4 CPUs 0.430383 s/step 4.98129 days/ns 90.25 MB memory
  namd-2.7b1-gen2-8/namd-gen2-8.o248035:Info: Benchmark time: 8 CPUs 0.568039 s/step 6.57453 days/ns 65.707 MB memory
  namd-2.7b1-gen2-8/namd-gen2-8.o248035:Info: Benchmark time: 8 CPUs 0.887236 s/step 10.2689 days/ns 65.3945 MB memory
  namd-2.7b1-gen2-8/namd-gen2-8.o248036:Info: Benchmark time: 8 CPUs 0.227086 s/step 2.62831 days/ns 64.2656 MB memory
  namd-2.7b1-gen2-8/namd-gen2-8.o248036:Info: Benchmark time: 8 CPUs 0.229058 s/step 2.65113 days/ns 64.5469 MB memory
  namd-2.7b1-gen2-16/namd-gen2-16.o248033:Info: Benchmark time: 16 CPUs 0.105355 s/step 1.21938 days/ns 50.6367 MB memory
  namd-2.7b1-gen2-16/namd-gen2-16.o248033:Info: Benchmark time: 16 CPUs 0.105658 s/step 1.2229 days/ns 50.3477 MB memory

  grep Benchm *2.9*/*.o* | sort -k4,4n | _ -w
  namd-2.9-gen2-1/namd-gen2-1.o248004:Info: Benchmark time: 1 CPUs 1.58065 s/step 18.2946 days/ns 398.93 MB memory
  namd-2.9-gen2-1/namd-gen2-1.o248004:Info: Benchmark time: 1 CPUs 1.58666 s/step 18.3641 days/ns 398.695 MB memory
  namd-2.9-gen2-1/namd-gen2-1.o248011:Info: Benchmark time: 1 CPUs 1.79167 s/step 20.737 days/ns 398.926 MB memory
  namd-2.9-gen2-1/namd-gen2-1.o248011:Info: Benchmark time: 1 CPUs 1.79819 s/step 20.8124 days/ns 398.695 MB memory
  namd-2.9-gen2-4/namd-gen2-4.o248003:Info: Benchmark time: 4 CPUs 1.05068 s/step 12.1606 days/ns 254.582 MB memory
  namd-2.9-gen2-4/namd-gen2-4.o248003:Info: Benchmark time: 4 CPUs 1.17972 s/step 13.6542 days/ns 254.582 MB memory
  namd-2.9-gen2-4/namd-gen2-4.o248006:Info: Benchmark time: 4 CPUs 0.424272 s/step 4.91055 days/ns 269.023 MB memory
  namd-2.9-gen2-4/namd-gen2-4.o248006:Info: Benchmark time: 4 CPUs 0.42632 s/step 4.93426 days/ns 269.023 MB memory
  namd-2.9-gen2-8/namd-gen2-8.o247983:Info: Benchmark time: 8 CPUs 0.211136 s/step 2.4437 days/ns 242.109 MB memory
  namd-2.9-gen2-8/namd-gen2-8.o247983:Info: Benchmark time: 8 CPUs 0.219128 s/step 2.53621 days/ns 242.109 MB memory
  namd-2.9-gen2-16/namd-gen2-1.o248005:Info: Benchmark time: 16 CPUs 0.103843 s/step 1.20188 days/ns 226.25 MB memory
  namd-2.9-gen2-16/namd-gen2-1.o248005:Info: Benchmark time: 16 CPUs 0.103924 s/step 1.20282 days/ns 225.961 MB memory

• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|--------------------------- # HPC/Modules/q-chem

Redirect to:

• HPC/Applications/q-chem (https://wiki.anl.gov/cnm/HPC/Applications/q-chem)


|---------------------------- # HPC/Applications/q-chem


|---------------------------- ## Contents

1. 1 Parallel jobs
2. 2 Capabilities Matrix
 2.1. 2.1 v4.1
 2.2. 2.2 v4.0
3. 3 Using GPUs
 3.1. 3.1 Options
  3.1.1. 3.1.1 Example


|---------------------------- ## Parallel jobs

To run Q-Chem in parallel,  load the module in your shell startup (https://wiki.anl.gov/cnm/HPC/Module_Setup), then use the -pbs -np $PBS_NP command line options in the PBS job script, as shown in:

  $Q_CHEM_HOME/sample.job

All setup is done by the modulefile - you do not need to source a qcenv script.
During the run various temporary files appear in the workding directory.
These will normally be cleaned up when the program exits correctly, but some files may need to be removed manually.


|---------------------------- ## Capabilities Matrix


|---------------------------- ### v4.1

From Sec. 2.7.1 of the Q-Chem-4.1 manual (http://www.q-chem.com/download/qc4101/doc/qchem_manual_4.1.pdf); entries in bold are new for v4.1:

Method                  OpenMP MPI
----------------------------------
HF energy & gradient    yesa   yes
DFT energy & gradient   yesa   yes
MP2 energy and gradient yesb   yes
Integral transformation yes    no
CCMAN & CCMAN2 methods  yes    no
ADC methods             yes    no
CIS                     no     no
TDDFT                   no     no

a OpenMP parallelization in 4.1 is implemented for energy and gradient of HF and DFT (but GGA functional only) calculations.
b To invoke an experimental OpenMP RI-MP2 code (RHF energies only), use CORR=primp2.


|---------------------------- ### v4.0

As of v4.0.1 there is limited support for OpenMP (multithreading), though not yet for hybrid OpenMP/MPI.

Method                  OpenMP MPI
----------------------------------
HF energy & gradient    noa    yes
DFT energy & gradient   noa    yes
MP2 energy and gradient yesb   yes
Integral transformation no     no
CCMAN & CCMAN2 methods  yes    no
ADC methods             yes    no
CIS                     no     no
TDDFT                   no     no

a Experimental code in version 4.0.1.
b To invoke an experimental OpenMP RI-MP2 code (RHF energies only), use CORR=primp2.


|---------------------------- ## Using GPUs

RI-MP2 ("resolution of the identity") energies and gradients are implemented with GPU support; see Q-Chem manual, sec. 5.5.4.


|---------------------------- ### Options

• TYPE: logical; DEFAULT: FALSE.
• Q-Chem recommendation: Set to 1 to use GPU-enabled MGEMM.

• TYPE: INTEGER; DEFAULT: 250
• Q-Chem recommendation: Use the default value. Anything less can seriously hinder the GPU acceleration.

• TYPE: INTEGER; DEFAULT: 0 (MGEMM disabled)
• Carbon recommendation: leave at 0.

• TYPE: INTEGER; DEFAULT: 10000 (corresponds to 1)
• Q-Chem recommendation: For small molecules and basis sets up to triple-ζ, the default value suffices to not deviate too much from the double-precision values. Care should be taken to reduce this number for larger molecules and also larger basis-sets.


|---------------------------- #### Example

Q-Chem manual example 5.5: RI-MP2 double-precision calculation

  $comment
  RI-MP2 double-precision example
  $end
  $molecule
  0 1
  c
  h1 c 1.089665
  h2 c 1.089665 h1 109.47122063
  h3 c 1.089665 h1 109.47122063 h2 120.
  h4 c 1.089665 h1 109.47122063 h2 -120.
  $end
  $rem
  jobtype sp
  exchange hf
  correlation rimp2
  basis cc-pvdz
  aux_basis rimp2-cc-pvdz
  cuda_rimp2 1
  $end


|--------------------------- # HPC/Applications/q-chem


|--------------------------- ## Contents

1. 1 Parallel jobs
2. 2 Capabilities Matrix
 2.1. 2.1 v4.1
 2.2. 2.2 v4.0
3. 3 Using GPUs
 3.1. 3.1 Options
  3.1.1. 3.1.1 Example


|--------------------------- ## Parallel jobs

To run Q-Chem in parallel,  load the module in your shell startup (https://wiki.anl.gov/cnm/HPC/Module_Setup), then use the -pbs -np $PBS_NP command line options in the PBS job script, as shown in:

  $Q_CHEM_HOME/sample.job

All setup is done by the modulefile - you do not need to source a qcenv script.
During the run various temporary files appear in the workding directory.
These will normally be cleaned up when the program exits correctly, but some files may need to be removed manually.


|--------------------------- ## Capabilities Matrix


|--------------------------- ### v4.1

From Sec. 2.7.1 of the Q-Chem-4.1 manual (http://www.q-chem.com/download/qc4101/doc/qchem_manual_4.1.pdf); entries in bold are new for v4.1:

Method                  OpenMP MPI
----------------------------------
HF energy & gradient    yesa   yes
DFT energy & gradient   yesa   yes
MP2 energy and gradient yesb   yes
Integral transformation yes    no
CCMAN & CCMAN2 methods  yes    no
ADC methods             yes    no
CIS                     no     no
TDDFT                   no     no

a OpenMP parallelization in 4.1 is implemented for energy and gradient of HF and DFT (but GGA functional only) calculations.
b To invoke an experimental OpenMP RI-MP2 code (RHF energies only), use CORR=primp2.


|--------------------------- ### v4.0

As of v4.0.1 there is limited support for OpenMP (multithreading), though not yet for hybrid OpenMP/MPI.

Method                  OpenMP MPI
----------------------------------
HF energy & gradient    noa    yes
DFT energy & gradient   noa    yes
MP2 energy and gradient yesb   yes
Integral transformation no     no
CCMAN & CCMAN2 methods  yes    no
ADC methods             yes    no
CIS                     no     no
TDDFT                   no     no

a Experimental code in version 4.0.1.
b To invoke an experimental OpenMP RI-MP2 code (RHF energies only), use CORR=primp2.


|--------------------------- ## Using GPUs

RI-MP2 ("resolution of the identity") energies and gradients are implemented with GPU support; see Q-Chem manual, sec. 5.5.4.


|--------------------------- ### Options

• TYPE: logical; DEFAULT: FALSE.
• Q-Chem recommendation: Set to 1 to use GPU-enabled MGEMM.

• TYPE: INTEGER; DEFAULT: 250
• Q-Chem recommendation: Use the default value. Anything less can seriously hinder the GPU acceleration.

• TYPE: INTEGER; DEFAULT: 0 (MGEMM disabled)
• Carbon recommendation: leave at 0.

• TYPE: INTEGER; DEFAULT: 10000 (corresponds to 1)
• Q-Chem recommendation: For small molecules and basis sets up to triple-ζ, the default value suffices to not deviate too much from the double-precision values. Care should be taken to reduce this number for larger molecules and also larger basis-sets.


|--------------------------- #### Example

Q-Chem manual example 5.5: RI-MP2 double-precision calculation

  $comment
  RI-MP2 double-precision example
  $end
  $molecule
  0 1
  c
  h1 c 1.089665
  h2 c 1.089665 h1 109.47122063
  h3 c 1.089665 h1 109.47122063 h2 120.
  h4 c 1.089665 h1 109.47122063 h2 -120.
  $end
  $rem
  jobtype sp
  exchange hf
  correlation rimp2
  basis cc-pvdz
  aux_basis rimp2-cc-pvdz
  cuda_rimp2 1
  $end


|--------------------------- # HPC/Applications/vasp


|--------------------------- ## Contents

1. 1 Requesting Access
2. 2 Module considerations
3. 3 Binaries
 3.1. 3.1 Available binaries and their compile-time flags used
 3.2. 3.2 Explanation of flags
 3.3. 3.3 Common flags
4. 4 General patches
 4.1. 4.1 vdW-DF functional
 4.2. 4.2 Solvation Model
 4.3. 4.3 Constrained Cell Relaxation
5. 5 Usage under ASE
6. 6 Usage under ATK/VNL
 6.1. 6.1 See also


|--------------------------- ## Requesting Access

VASP versions 4, 5, and 6 are is available on Carbon, subject to confirmation for your group having a license for VASP major versions 4, 5, or 6.

To use VASP binaries on Carbon, send me (M. Sternberg), the following for the persons on your VASP license group who will be using VASP on Carbon:

• For each person:
 • Full name
 • Email address that the person registered with at vasp.at




|--------------------------- ## Module considerations

• Review the available modules for each major version:
 • vasp (https://wiki.anl.gov/cnm/HPC/Software/Modules), for VASP 4.x
 • vasp5 (https://wiki.anl.gov/cnm/HPC/Software/Modules), for VASP 5.x
 • vasp6 (https://wiki.anl.gov/cnm/HPC/Software/Modules), for VASP 6.x
• Choose and add one of the following lines to your ~/.bashrc (https://wiki.anl.gov/cnm/HPC/Software/Module_Setup) file:

  module load --auto vasp                # sets $VASP_HOME
  module load --auto vasp5               # sets $VASP5_HOME
  module load --auto vasp6               # sets $VASP6_HOME

• Each module provides several binaries (see next section).
• You do not need to specify a path for vasp for the mpirun statement in the PBS job script.
• The modules are mutually exclusive.
• Potentials are available in /opt/soft/vasp-pot.

To access Graeme Henkelman's script suite, load the vasp-vtstscripts module (https://wiki.anl.gov/cnm/HPC/Software/Modules). It works with both the vasp and vasp5 modules above. In either case, choose one of the VTST-patched binaries from the table below. The unpatched vasp binaries will not interoperate with the script suite.

  module load vasp-vtstscripts


|--------------------------- ## Binaries

Some options for VASP cannot be configured at runtime (by input data) but must be chosen when compiling.
Since no single set of compile-time choices is appropriate for all uses, a number of binaries are provided, distinguished by their name.

The modules from versions vasp/4.6.35-mkl-13 and vasp5/5.2.12a-mkl-4 onwards, respectively,
contain several binaries built using different sets of preprocessor flags in the Makefile.
Earlier modules only contain two binaries, vasp and vasp-gamma.
Additional binaries are provided for useful preprocessor flag combinations
after applying patches from the group of Graeme Henkelman (UT Austin) to the source code:

• Transition state tools for VASP (http://theory.cm.utexas.edu/vtsttools/), and
• DOS Projection in Bader Volumes (http://theory.cm.utexas.edu/vtsttools/bader/).

To verify the binaries available for a module, run the appropriate command, once the module has been loaded:

  ls $VASP_HOME/bin   # for VASP-4 (previous major version)
  ls $VASP5_HOME/bin

Choose a binary appropriate for your task and pass its name to mpirun in the job script.
There is no need for full path names.
Copy a sample job script from:

  $VASP_HOME/vasp.job   # for VASP-4 (previous major version)
  $VASP5_HOME/vasp.job


|--------------------------- ### Available binaries and their compile-time flags used

This table lists the names of the binaries compiled from

• combinations of preprocessor flags, and
• variants of the source code, primarily enhancing capabilities of ionic updates.

Versions and capabilities
-------------------------------------------
Official

Conventional,Versions 4.x–5.3
-DNGZhalf
-DwNGZhalf
-DwNGZhalf -DNGZhalf
AdvancedMD techniques,4Versions 5.2 and 5.3
-Dtbdyn -DNGZhalf
-Dtbdyn -DwNGZhalf
-Dtbdyn -DwNGZhalf -DNGZhalf

Version 5.44,5
-Dtbdyn -DNGZhalf
-Dtbdyn -DwNGZhalf -DNGZhalf
(GPU6)
(GPU6) -DNGZhalf

Version 6 (prelim.)

1) Stress tensor selectively zeroed in subroutine CONSTR_CELL_RELAX
2) http://theory.cm.utexas.edu/vtsttools/ . The dimer method was broken for vasp5/5.3.3 prior to 5.3.3p3-mkl-2.
3) http://theory.cm.utexas.edu/vtsttools/dos/ (now defunct)
4) http://cms.mpi.univie.ac.at/vasp/vasp/Advanced_MD_techniques.html 
5) Axis-selective constrained cell relaxation, controlled via an optional input file CELL_RELAX, is compiled into all binaries.
6) http://cms.mpi.univie.ac.at/wiki/index.php/GPU_port_of_VASP


|--------------------------- ### Explanation of flags

• File vasp.5.2/makefile.linux_pg in the souce code explains:

  #-----------------------------------------------------------------------
  # possible options for CPP:
  # NGXhalf             charge density   reduced in X direction
  # wNGXhalf            gamma point only reduced in X direction
  # avoidalloc          avoid ALLOCATE if possible
  # IFC                 work around some IFC bugs
  # CACHE_SIZE          1000 for PII,PIII, 5000 for Athlon, 8000 P4
  # RPROMU_DGEMV        use DGEMV instead of DGEMM in RPRO (usually  faster)
  # RACCMU_DGEMV        use DGEMV instead of DGEMM in RACC (faster on P4)
  #  **** definitely use -DRACCMU_DGEMV if you use the mkl library
  #-----------------------------------------------------------------------
  …
  #-----------------------------------------------------------------------
  # additional options for CPP in parallel version (see also above):
  # NGZhalf               charge density   reduced in Z direction
  # wNGZhalf              gamma point only reduced in Z direction
  # scaLAPACK             use scaLAPACK (usually slower on 100 Mbit Net)
  #-----------------------------------------------------------------------

• In the new build system (since version 5.4) the direct use of the -D*NG*half options has been replaced by predefined make(1) arguments VERSION={std,gam,ncl}.


|--------------------------- ### Common flags

  -DIFC -DRPROMU_DGEMV  -DRACCMU_DGEMV -DCACHE_SIZE=16000  -DMPI -DMPI_BLOCK=8000


|--------------------------- ## General patches

The following modifications have been applied and are active in all binaries:


|--------------------------- ### vdW-DF functional

The vdW-DF functional of Langreth and Lundqvist et al. (http://cms.mpi.univie.ac.at/vasp/vasp/vdW_DF_functional_Langreth_Lundqvist_et_al.html)
is implemented in all the *-chargehalf binaries of the vasp5 module, and all versions above 5.4.

No specific preparations are needed other than setting the INCAR flags as documented. The binaries will find the required precalculated kernel file vdw_kernel.bindat by means of the environment variable $VASP5_HOME which is set by the module.

This is a Carbon-specific extension.


|--------------------------- ### Solvation Model

All binaries above build 5.4.1.3-8-* contain the VASPsol (http://vaspsol.mse.ufl.edu) solvation model of the Hennig group at Univ. of Florida..


|--------------------------- ### Constrained Cell Relaxation

Likewise, in all binaries above build 5.4.1.3-8-* the relaxation of the unit cell may be constrained
along one or more axes by creating a supplementary input file CELL_RELAX.
The subroutine CONSTR_CELL_RELAX,
having been a placeholder in the original source files,
was extended to read (and re-read) this file in each call and apply the containts
to the force components of each basis vector.
The performance impact from the multiple reads is expected to be minimal.

This is a Carbon-specific extension.

  cell relaxation     - fixed string, for validation only, leading spaces ignored.
    ix iy iz            - 3 integer flags, indicating which cartesian components of the
                          basis vectors are allowed to be changed; 0 means no (fixed),
                          non-zero means yes (can change).

• To relax the entire cell (identical to default behavior):

  cell relaxation
    1 1 1

• To relax along z only:

  cell relaxation
    0 0 1

To indicate if your chosen VASP binary (a) looked for and (b) did or did not find the CELL_RELAX file, the subroutine CONSTR_CELL_RELAX will output one of the following each time it has been called:

  CELL_RELAX not present: performing unconstrained unit cell relaxation

  CELL_RELAX: performing constrained unit cell relaxation in cartesian directions  1  0  1
  Unit cell forces:
        1.1111111111111112       0.0000000000000000       2.2222222222222223
        0.0000000000000000       0.0000000000000000       0.0000000000000000
        2.2222222222222223       0.0000000000000000       3.3333333333333330


|--------------------------- ## Usage under ASE

VASP calculations can be set up, run, and analyzed using the calculator interface (https://wiki.fysik.dtu.dk/ase/ase/calculators/vasp.html) of the ASE (https://wiki.fysik.dtu.dk/ase/overview.html) package, available on Carbon under both the  ase3 (https://wiki.anl.gov/cnm/HPC/Applications) and  atk (https://wiki.anl.gov/cnm/HPC/Applications) modules.
ASE is told how to use VASP by means of environment variables which the modules define for you with sensible defaults:

  VASP_PP_PATH
  VASP_COMMAND

1. The calculator will create and possibly overwrite VASP input files in the current directory, and then run VASP therein. To minimize clutter, consider setting up and changing into a run-specific directory before initializing the calculator.
2. VASP_COMMAND normally uses the vasp binary (see above), and will run in parallel when called under a PBS job. That decision is based on the PBS_NODEFILE environment variable being present.
3. You can supply another executable name or path in the variable VASP_BINARY.
4. The ASE calculator supports an alternative calling interface, a python script named in VASP_SCRIPT. This variable is not set by default on Carbon. If you wish to define a personal VASP_SCRIPT, unset VASP_COMMAND in tandem.
 4.1. VASP_COMMAND takes precendence over VASP_SCRIPT.
 4.2. The stdout stream is redirected to a file under VASP_COMMAND, but will appear on ASE's stdout under VASP_SCRIPT.
 4.3. Inspect the calculator source code (https://trac.fysik.dtu.dk/projects/ase/browser/trunk/ase/calculators/vasp.py#L519) for details; see function run(self).


|--------------------------- ## None

The ATK (http://quantumwise.com/documents/manuals/latest/ReferenceManual) package (module atk (https://wiki.anl.gov/cnm/HPC/Applications)) supports two different ways to interface with VASP.

1. The ase calculator interface (http://quantumwise.com/documents/manuals/latest/ReferenceManual/index.html/chap.python.html#sect1.appendix.nlpackages) – see previous section.
2. The VASPScripter (http://quantumwise.com/documents/tutorials/latest/VASPScripter) AddOn.
 2.1. The scripter "merely" helps you to set up the VASP input files in VNL, the ATK GUI. It does not start or analyze a VASP run.
 2.2. The directory for pseudopotentials is preconfigured to be the same as $VASP_PP_PATH for the ASE calculator.


|--------------------------- ### See also

• Advanced node selection (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection)


|--------------------------- # HPC/Applications/vasp


|--------------------------- ## Contents

1. 1 Requesting Access
2. 2 Module considerations
3. 3 Binaries
 3.1. 3.1 Available binaries and their compile-time flags used
 3.2. 3.2 Explanation of flags
 3.3. 3.3 Common flags
4. 4 General patches
 4.1. 4.1 vdW-DF functional
 4.2. 4.2 Solvation Model
 4.3. 4.3 Constrained Cell Relaxation
5. 5 Usage under ASE
6. 6 Usage under ATK/VNL
 6.1. 6.1 See also


|--------------------------- ## Requesting Access

VASP versions 4, 5, and 6 are is available on Carbon, subject to confirmation for your group having a license for VASP major versions 4, 5, or 6.

To use VASP binaries on Carbon, send me (M. Sternberg), the following for the persons on your VASP license group who will be using VASP on Carbon:

• For each person:
 • Full name
 • Email address that the person registered with at vasp.at




|--------------------------- ## Module considerations

• Review the available modules for each major version:
 • vasp (https://wiki.anl.gov/cnm/HPC/Software/Modules), for VASP 4.x
 • vasp5 (https://wiki.anl.gov/cnm/HPC/Software/Modules), for VASP 5.x
 • vasp6 (https://wiki.anl.gov/cnm/HPC/Software/Modules), for VASP 6.x
• Choose and add one of the following lines to your ~/.bashrc (https://wiki.anl.gov/cnm/HPC/Software/Module_Setup) file:

  module load --auto vasp                # sets $VASP_HOME
  module load --auto vasp5               # sets $VASP5_HOME
  module load --auto vasp6               # sets $VASP6_HOME

• Each module provides several binaries (see next section).
• You do not need to specify a path for vasp for the mpirun statement in the PBS job script.
• The modules are mutually exclusive.
• Potentials are available in /opt/soft/vasp-pot.

To access Graeme Henkelman's script suite, load the vasp-vtstscripts module (https://wiki.anl.gov/cnm/HPC/Software/Modules). It works with both the vasp and vasp5 modules above. In either case, choose one of the VTST-patched binaries from the table below. The unpatched vasp binaries will not interoperate with the script suite.

  module load vasp-vtstscripts


|--------------------------- ## Binaries

Some options for VASP cannot be configured at runtime (by input data) but must be chosen when compiling.
Since no single set of compile-time choices is appropriate for all uses, a number of binaries are provided, distinguished by their name.

The modules from versions vasp/4.6.35-mkl-13 and vasp5/5.2.12a-mkl-4 onwards, respectively,
contain several binaries built using different sets of preprocessor flags in the Makefile.
Earlier modules only contain two binaries, vasp and vasp-gamma.
Additional binaries are provided for useful preprocessor flag combinations
after applying patches from the group of Graeme Henkelman (UT Austin) to the source code:

• Transition state tools for VASP (http://theory.cm.utexas.edu/vtsttools/), and
• DOS Projection in Bader Volumes (http://theory.cm.utexas.edu/vtsttools/bader/).

To verify the binaries available for a module, run the appropriate command, once the module has been loaded:

  ls $VASP_HOME/bin   # for VASP-4 (previous major version)
  ls $VASP5_HOME/bin

Choose a binary appropriate for your task and pass its name to mpirun in the job script.
There is no need for full path names.
Copy a sample job script from:

  $VASP_HOME/vasp.job   # for VASP-4 (previous major version)
  $VASP5_HOME/vasp.job


|--------------------------- ### Available binaries and their compile-time flags used

This table lists the names of the binaries compiled from

• combinations of preprocessor flags, and
• variants of the source code, primarily enhancing capabilities of ionic updates.

Versions and capabilities
-------------------------------------------
Official

Conventional,Versions 4.x–5.3
-DNGZhalf
-DwNGZhalf
-DwNGZhalf -DNGZhalf
AdvancedMD techniques,4Versions 5.2 and 5.3
-Dtbdyn -DNGZhalf
-Dtbdyn -DwNGZhalf
-Dtbdyn -DwNGZhalf -DNGZhalf

Version 5.44,5
-Dtbdyn -DNGZhalf
-Dtbdyn -DwNGZhalf -DNGZhalf
(GPU6)
(GPU6) -DNGZhalf

Version 6 (prelim.)

1) Stress tensor selectively zeroed in subroutine CONSTR_CELL_RELAX
2) http://theory.cm.utexas.edu/vtsttools/ . The dimer method was broken for vasp5/5.3.3 prior to 5.3.3p3-mkl-2.
3) http://theory.cm.utexas.edu/vtsttools/dos/ (now defunct)
4) http://cms.mpi.univie.ac.at/vasp/vasp/Advanced_MD_techniques.html 
5) Axis-selective constrained cell relaxation, controlled via an optional input file CELL_RELAX, is compiled into all binaries.
6) http://cms.mpi.univie.ac.at/wiki/index.php/GPU_port_of_VASP


|--------------------------- ### Explanation of flags

• File vasp.5.2/makefile.linux_pg in the souce code explains:

  #-----------------------------------------------------------------------
  # possible options for CPP:
  # NGXhalf             charge density   reduced in X direction
  # wNGXhalf            gamma point only reduced in X direction
  # avoidalloc          avoid ALLOCATE if possible
  # IFC                 work around some IFC bugs
  # CACHE_SIZE          1000 for PII,PIII, 5000 for Athlon, 8000 P4
  # RPROMU_DGEMV        use DGEMV instead of DGEMM in RPRO (usually  faster)
  # RACCMU_DGEMV        use DGEMV instead of DGEMM in RACC (faster on P4)
  #  **** definitely use -DRACCMU_DGEMV if you use the mkl library
  #-----------------------------------------------------------------------
  …
  #-----------------------------------------------------------------------
  # additional options for CPP in parallel version (see also above):
  # NGZhalf               charge density   reduced in Z direction
  # wNGZhalf              gamma point only reduced in Z direction
  # scaLAPACK             use scaLAPACK (usually slower on 100 Mbit Net)
  #-----------------------------------------------------------------------

• In the new build system (since version 5.4) the direct use of the -D*NG*half options has been replaced by predefined make(1) arguments VERSION={std,gam,ncl}.


|--------------------------- ### Common flags

  -DIFC -DRPROMU_DGEMV  -DRACCMU_DGEMV -DCACHE_SIZE=16000  -DMPI -DMPI_BLOCK=8000


|--------------------------- ## General patches

The following modifications have been applied and are active in all binaries:


|--------------------------- ### vdW-DF functional

The vdW-DF functional of Langreth and Lundqvist et al. (http://cms.mpi.univie.ac.at/vasp/vasp/vdW_DF_functional_Langreth_Lundqvist_et_al.html)
is implemented in all the *-chargehalf binaries of the vasp5 module, and all versions above 5.4.

No specific preparations are needed other than setting the INCAR flags as documented. The binaries will find the required precalculated kernel file vdw_kernel.bindat by means of the environment variable $VASP5_HOME which is set by the module.

This is a Carbon-specific extension.


|--------------------------- ### Solvation Model

All binaries above build 5.4.1.3-8-* contain the VASPsol (http://vaspsol.mse.ufl.edu) solvation model of the Hennig group at Univ. of Florida..


|--------------------------- ### Constrained Cell Relaxation

Likewise, in all binaries above build 5.4.1.3-8-* the relaxation of the unit cell may be constrained
along one or more axes by creating a supplementary input file CELL_RELAX.
The subroutine CONSTR_CELL_RELAX,
having been a placeholder in the original source files,
was extended to read (and re-read) this file in each call and apply the containts
to the force components of each basis vector.
The performance impact from the multiple reads is expected to be minimal.

This is a Carbon-specific extension.

  cell relaxation     - fixed string, for validation only, leading spaces ignored.
    ix iy iz            - 3 integer flags, indicating which cartesian components of the
                          basis vectors are allowed to be changed; 0 means no (fixed),
                          non-zero means yes (can change).

• To relax the entire cell (identical to default behavior):

  cell relaxation
    1 1 1

• To relax along z only:

  cell relaxation
    0 0 1

To indicate if your chosen VASP binary (a) looked for and (b) did or did not find the CELL_RELAX file, the subroutine CONSTR_CELL_RELAX will output one of the following each time it has been called:

  CELL_RELAX not present: performing unconstrained unit cell relaxation

  CELL_RELAX: performing constrained unit cell relaxation in cartesian directions  1  0  1
  Unit cell forces:
        1.1111111111111112       0.0000000000000000       2.2222222222222223
        0.0000000000000000       0.0000000000000000       0.0000000000000000
        2.2222222222222223       0.0000000000000000       3.3333333333333330


|--------------------------- ## Usage under ASE

VASP calculations can be set up, run, and analyzed using the calculator interface (https://wiki.fysik.dtu.dk/ase/ase/calculators/vasp.html) of the ASE (https://wiki.fysik.dtu.dk/ase/overview.html) package, available on Carbon under both the  ase3 (https://wiki.anl.gov/cnm/HPC/Applications) and  atk (https://wiki.anl.gov/cnm/HPC/Applications) modules.
ASE is told how to use VASP by means of environment variables which the modules define for you with sensible defaults:

  VASP_PP_PATH
  VASP_COMMAND

1. The calculator will create and possibly overwrite VASP input files in the current directory, and then run VASP therein. To minimize clutter, consider setting up and changing into a run-specific directory before initializing the calculator.
2. VASP_COMMAND normally uses the vasp binary (see above), and will run in parallel when called under a PBS job. That decision is based on the PBS_NODEFILE environment variable being present.
3. You can supply another executable name or path in the variable VASP_BINARY.
4. The ASE calculator supports an alternative calling interface, a python script named in VASP_SCRIPT. This variable is not set by default on Carbon. If you wish to define a personal VASP_SCRIPT, unset VASP_COMMAND in tandem.
 4.1. VASP_COMMAND takes precendence over VASP_SCRIPT.
 4.2. The stdout stream is redirected to a file under VASP_COMMAND, but will appear on ASE's stdout under VASP_SCRIPT.
 4.3. Inspect the calculator source code (https://trac.fysik.dtu.dk/projects/ase/browser/trunk/ase/calculators/vasp.py#L519) for details; see function run(self).


|--------------------------- ## None

The ATK (http://quantumwise.com/documents/manuals/latest/ReferenceManual) package (module atk (https://wiki.anl.gov/cnm/HPC/Applications)) supports two different ways to interface with VASP.

1. The ase calculator interface (http://quantumwise.com/documents/manuals/latest/ReferenceManual/index.html/chap.python.html#sect1.appendix.nlpackages) – see previous section.
2. The VASPScripter (http://quantumwise.com/documents/tutorials/latest/VASPScripter) AddOn.
 2.1. The scripter "merely" helps you to set up the VASP input files in VNL, the ATK GUI. It does not start or analyze a VASP run.
 2.2. The directory for pseudopotentials is preconfigured to be the same as $VASP_PP_PATH for the ASE calculator.


|--------------------------- ### See also

• Advanced node selection (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection)


|--------------------------- # HPC/Modules/vasp5

Redirect to:

• HPC/Applications/vasp5 (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Applications/vasp5

Redirect to:

• HPC/Applications/vasp (https://wiki.anl.gov/cnm/HPC/Applications/vasp)


|-------------------------- # Sandbox/Test 4 – Other pages


|-------------------------- ### Other pages

• Can remain:
 • HPC/Software/Module Setup (https://wiki.anl.gov/cnm/HPC/Software/Module_Setup) already redirects to HPC/Module Setup (https://wiki.anl.gov/cnm/HPC/Module_Setup)

1. Original attempt:
 1.1. HPC/Software/Catalog (https://wiki.anl.gov/cnm/HPC/Software/Catalog) || double to HPC/Modules (https://wiki.anl.gov/cnm/HPC/Modules)
 1.2. HPC/Software/Catalog/vasp (https://wiki.anl.gov/cnm/HPC/Software/Catalog/vasp) || double to HPC/Modules/vasp (https://wiki.anl.gov/cnm/HPC/Modules/vasp)
 1.3. HPC/Software/Catalog/vasp5 (https://wiki.anl.gov/cnm/HPC/Software/Catalog/vasp5) || double to HPC/Modules/vasp (https://wiki.anl.gov/cnm/HPC/Modules/vasp)
 1.4. HPC/Software/Catalog/jmol (https://wiki.anl.gov/wiki_cnm/index.php) || double to HPC/Modules/jmol (https://wiki.anl.gov/cnm/HPC/Modules/jmol)
 1.5. HPC/Software/jmol (https://wiki.anl.gov/cnm/HPC/Software/jmol) || deleted existing redirect to -> HPC/Software/Modules/jmol (https://wiki.anl.gov/cnm/HPC/Software/Modules/jmol)
 1.6. HPC/Software/Environment (https://wiki.anl.gov/cnm/HPC/Software/Environment) || double to HPC/Module Setup (https://wiki.anl.gov/cnm/HPC/Module_Setup)


|--------------------------- # HPC/Software/Modules

Redirect to:

• HPC/Modules (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Software/Catalog/vasp

Redirect to:

• HPC/Software/Modules/vasp (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Software/jmol

Redirect to:

• HPC/Software/Catalog/jmol (https://wiki.anl.gov/wiki_cnm/index.php)


|--------------------------- # HPC/Software/Module Setup

Redirect to:

• HPC/Module Setup (https://wiki.anl.gov/cnm/HPC/Module_Setup)

• 
 • HPC/Software/RPM (https://wiki.anl.gov/cnm/HPC/Software/RPM) || manually moved to HPC/RPM (https://wiki.anl.gov/cnm/HPC/RPM)


|--------------------------- # HPC/RPM


|--------------------------- ## Introduction

The Carbon login nodes have the following software items available setup-free for all users.

Most items are available on compute nodes as well, except for these categories:

• Remote access
• Development
• Graphics (multimedia, X11)
• Data analysis.




|--------------------------- # Index

cpio
dump
pax
rmt
tar
unzip
zip

mgetty

mysql
postgresql-libs
sqlite

emacs
emacs-common
nano
nedit
vim-common
vim-enhanced
vim-minimal

bc
gnuplot
grace
libxc
netcdf
octave
pymol
R
R-core
R-devel

bzip2
file
findutils
gzip
openbabel
pbzip2
pigz
tree
xz

curl
finger
firefox
ftp
ganglia
ganglia-gmond
htmlview
jwhois
lftp
lynx
mailx
mtr
mutt
nc
openldap-clients
openssh
openssh-clients
rsync
stunnel
talk
tcpdump
telnet
traceroute
wget
xulrunner

ImageMagick
netpbm-progs
transfig
xfig

lcms

a2ps
evince
ghostscript
ghostscript-fonts
groff
gv
latex2html
neon
paps
psutils
t1lib
tetex
tetex-dvips
tetex-fonts
tetex-latex
texinfo
texinfo-tex
xpdf

ksh

bind-libs
bind-utils
bluez-gnome
bluez-utils
bonnie++
collectl
conman
cryptsetup-luks
dialog
dosfstools
ethtool
fbset
gnome-mount
gnupg
hdparm
hwloc
iproute
irda-utils
kudzu
lm_sensors
logwatch
mlocate
mtools
OpenIPMI-tools
parted
pciutils
procps
psacct
psmisc
python-libs
rdate
rdist
rsnapshot
screen
setserial
setuptool
stress
sudo
symlinks
syslinux
system-config-network-tui
system-switch-mail
time
torque
torque-client
torque-devel
ttmkfdir
usbutils
usermode
which

aspell
aspell-en
diffutils
docbook-dtds
dos2unix
ed
gawk
grep
less
m4
openjade
opensp
poppler-utils
sed
sgml-common
unix2dos
xml-common

crash
gdb
lsof
strace
valgrind

lustre-client-modules
lustre-source

cpp
expect
gcc
gcc-c++
gcc-gfortran
guile
numpy
perl
perl-suidperl
pexpect
pycairo
pygobject2
pygobject2-devel
pygobject2-doc
pygtk2
pygtk2-codegen
pygtk2-devel
pygtk2-libglade
python
python-dateutil
python-decoratortools
python-docutils
python-imaging
python-nose
python-numeric
python-setuptools
pytz
tcl
tcl-devel
tclx
tclx-devel
tix
tk
tk-devel
tkinter
unifdef

atk-devel
audit-libs
audit-libs-python
avahi-compat-libdns_sd
blas
blas-devel
bzip2-devel
cairo-devel
curl-devel
dbus-libs
e2fsprogs-devel
e2fsprogs-libs
fftw2-devel
fftw3-devel
fontconfig-devel
freetype-devel
gamin
gamin-python
gd-devel
glew-devel
glib2-devel
glibc-devel
glibc-headers
glx-utils
gmp-devel
grace-devel
gsl-devel
gtk2-devel
guile-devel
hdf5-devel
hwloc-devel
itcl
itk
iwidgets
krb5-devel
lapack
lapack-devel
libgnomecups
libICE-devel
libidn-devel
libjpeg-devel
libnl
libpcap
libpng-devel
libRmath
libRmath-devel
libselinux-devel
libselinux-python
libselinux-utils
libsepol-devel
libSM-devel
libstdc++-devel
libsysfs-devel
libtermcap-devel
libtiff-devel
libX11-devel
libXau-devel
libXcursor-devel
libXdmcp-devel
libXext-devel
libXfixes-devel
libXft-devel
libXi-devel
libXinerama-devel
libxml2
libxml2-devel
libxml2-python
libXpm-devel
libXrandr-devel
libXrender-devel
libxslt
libXt-devel
libyaml
mesa-libGL-devel
mesa-libGLU-devel
nautilus-extensions
ncurses-devel
net-snmp-libs
netcdf-devel
NetworkManager-glib
octave-devel
OpenIPMI-libs
openmpi
openmpi-devel
openmpi-libs
openssl-devel
pam-devel
pango-devel
pcre-devel
perl-Compress-Zlib
perl-Convert-ASN1
perl-Crypt-SSLeay
perl-DBI
perl-Error
perl-Git
perl-HTML-Parser
perl-HTML-Tagset
perl-IO-Interface
perl-IO-Socket-SSL
perl-IO-Tty
perl-LDAP
perl-libwww-perl
perl-Net-SSLeay
perl-String-CRC32
perl-TermReadKey
perl-Time-Piece
perl-URI
perl-XML-NamespaceSupport
perl-XML-SAX
poppler
popt
pycairo-devel
pyOpenSSL
python-ctypes
python-devel
python-elementtree
python-hashlib
python-iniparse
python-lxml
python-matplotlib
python-matplotlib-tk
python-pmw
python-sqlite
python-urlgrabber
PyYAML
qhull-devel
readline-devel
rpm-libs
rpm-python
sos
sqlite-devel
yum-metadata-parser
zlib-devel

checkpolicy
kernel-headers
opensm-devel
redhat-rpm-config
xorg-x11-proto-devel

autoconf
automake
binutils
cmake
ctags
cvs
desktop-file-utils
doxygen
elfutils
elfutils-libelf
elfutils-libs
flex
gettext
git
git-gui
gitk
jdk
jre
libtool
make
mock
patch
pkgconfig
python-tools
rcs
rpm-build
subversion
sysfsutils
yum-utils

Deployment_Guide-en-US
kernel-doc
man-pages
specspo

gpg-pubkey

acl
amtu
anacron
attr
authconfig
avahi
avahi-glib
basesystem
centos-release
centos-release-notes
chkconfig
chkfontpath
coreutils
cpuspeed
createrepo
crontabs
device-mapper
device-mapper-event
device-mapper-multipath
dhclient
dhcpv6-client
dmidecode
dmraid
dmraid-events
e2fsprogs
eject
environment-modules
filesystem
firstboot-tui
GConf2
glibc-common
grub
hmaccalc
hwdata
ifd-egate
info
initscripts
ipsec-tools
iptables
iptables-ipv6
iptstate
irqbalance
kbd
keyutils-libs
keyutils-libs-devel
kpartx
krb5-workstation
libgnomeprint22
libuser
logrotate
lvm2
mailcap
MAKEDEV
man
mcelog
mdadm
microcode_ctl
mingetty
mkbootdisk
mkinitrd
mktemp
mpi-selector
nash
net-tools
NetworkManager
nss-tools
nss_ldap
ntsysv
numactl
openib
OpenIPMI
pam
pam_ccreds
pam_krb5
pam_passwdqc
pam_pkcs11
pam_smb
passwd
pcmciautils
pinfo
pm-utils
policycoreutils
prelink
quota
readahead
redhat-logos
redhat-lsb
rhel-instnum
rng-utils
rootfiles
rpm
scrollkeeper
selinux-policy
selinux-policy-targeted
setools
setup
sgpio
shadow-utils
smartmontools
system-config-securitylevel-tui
SysVinit
termcap
tmpwatch
tzdata
tzdata-java
udev
util-linux
vconfig
vixie-cron
wireless-tools
wpa_supplicant
xdg-utils
xorg-x11-filesystem
yp-tools
yum
yum-downloadonly
yum-fastestmirror
yum-priorities
yum-updatesd

acpid
at
audit
autofs
cups
dhcdbd
dnsmasq
esound
gpm
iputils
iscsi-initiator-utils
mcstrans
nfs-utils
nscd
ntp
openldap
openssh-server
ORBit2
pcsc-lite
portmap
postfix
ppp
rp-pppoe
rsh-server
sysklogd
tcp_wrappers
xinetd
xorg-x11-xfs
ypbind

kernel
kernel-devel
module-init-tools
setarch

agg
alsa-lib
apr
apr-util
atk
atlas
audiofile
beecrypt
bluez-libs
boost
boost-devel
bzip2-libs
cairo
ccid
CodeMeter64
compat-dapl
compat-dapl-devel
compat-db
compat-libf2c-34
compat-libstdc++-33
coolkey
cracklib
cracklib-dicts
cups-libs
cyrus-sasl
cyrus-sasl-lib
cyrus-sasl-plain
dapl
dapl-devel
db4
dbus
dbus-glib
dbus-python
expat
fftw2
fftw3
fipscheck
fipscheck-lib
fontconfig
freeglut
freetype
gd
gdbm
giflib
glew
glib2
glibc
glpk
gmp
gnome-keyring
gnome-mime-data
gnome-vfs2
gnutls
gsl
gtk2
hal
hdf5
hesiod
inchi
infiniband-diags
krb5-libs
libacl
libaio
libart_lgpl
libattr
libbonobo
libbonoboui
libcap
libcroco
libdaemon
libdmx
libdrm
libevent
libfontenc
libFS
libgcc
libgcrypt
libgfortran
libglade2
libgnome
libgnomecanvas
libgnomeprintui22
libgnomeui
libgomp
libgpg-error
libgsf
libgssapi
libhugetlbfs
libibcm
libibmad
libibumad
libibverbs
libibverbs-devel
libICE
libicu
libIDL
libidn
libjpeg
libmng
libmthca
libnotify
libpaper
libpng
librdmacm
librsvg2
libselinux
libsemanage
libsepol
libSM
libstdc++
libsysfs
libtermcap
libtiff
libtool-ltdl
libusb
libutempter
libvolume_id
libwmf
libwnck
libX11
libXau
libXaw
libXcursor
libXdmcp
libXext
libXfixes
libXfont
libXfontcache
libXft
libXi
libXinerama
libxkbfile
libXmu
libXp
libXpm
libXrandr
libXrender
libXres
libXScrnSaver
libXt
libXTrap
libXtst
libXv
libXxf86dga
libXxf86misc
libXxf86vm
m2crypto
mesa-libGL
mesa-libGLU
ncurses
netpbm
newt
nfs-utils-lib
notification-daemon
nspr
nss
nss_db
numactl-devel
openmotif
opensm-libs
openssl
pango
pcre
pcsc-lite-libs
pkinit-nss
python-ldap
qhull
readline
rhpl
SDL
shared-mime-info
slang
startup-notification
suitesparse
words
Xaw3d
xbae
xmlrpc-c
xmlrpc-c-client
xz-libs
zlib

bash
tcsh

hicolor-icon-theme
redhat-menus
vnc

bitstream-vera-fonts
imake
liberation-fonts
urw-fonts
vnc-server
xorg-x11-apps
xorg-x11-font-utils
xorg-x11-fonts-100dpi
xorg-x11-fonts-base
xorg-x11-fonts-ISO8859-1-100dpi
xorg-x11-fonts-ISO8859-1-75dpi
xorg-x11-server-utils
xorg-x11-utils
xorg-x11-xauth
xterm

clusterit
jpackage-utils

lustre-client



• See also:  Application packages (modules) (https://wiki.anl.gov/cnm/HPC/Modules)




|--------------------------- # Summaries

Query date: 2014-03-24, 09:48.

Name                            Date       Summary                                                                                             Versions
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
cpio                            2014-01-07 A GNU archiving program.                                                                            2.6-26.el5
dump                            2012-09-10 Programs for backing up and restoring ext2/ext3 filesystems                                         0.4b41-6.el5
pax                             2010-12-29 POSIX File System Archiver                                                                          3.4-2.el5_4
rmt                             2012-09-10 Provides certain programs with access to remote tape devices                                        0.4b41-6.el5
tar                             2012-09-10 A GNU file archiving program                                                                        1.15.1-32.el5_8
unzip                           2009-04-22 A utility for unpacking zip files.                                                                  5.52-3.el5
zip                             2009-04-22 A file compression and packaging utility compatible with PKZIP.                                     2.31-2.el5
mgetty                          2007-09-24 A getty replacement for use with data and fax modems.                                               1.1.33-9.fc6
mysql                           2013-05-15 MySQL client programs and shared libraries                                                          5.0.95-5.el5_9
postgresql-libs                 2013-01-03 The shared libraries required for any PostgreSQL clients.                                           8.1.23-6.el5_8
sqlite                          2013-09-06 Library that implements an embeddable SQL database engine                                           3.3.6-7
emacs                           2012-09-10 GNU Emacs text editor                                                                               21.4-24.el5
emacs-common                    2012-09-10 Emacs common files                                                                                  21.4-24.el5
nano                            2007-09-24 A small text editor                                                                                 1.3.12-1.1
nedit                           2009-04-27 A GUI text editor for systems with X                                                                5.5-16.el55.5-21.el5
vim-common                      2013-05-15 The common files needed by any version of the VIM editor.                                           7.0.109-7.2.el5
vim-enhanced                    2013-05-15 A version of the VIM editor which includes recent enhancements.                                     7.0.109-7.2.el5
vim-minimal                     2013-05-15 A minimal version of the VIM editor.                                                                7.0.109-7.2.el5
bc                              2007-09-24 GNU's bc (a numeric processing language) and dc (a calculator).                                     1.06-21
gnuplot                         2009-02-05 A program for plotting mathematical expressions and data.                                           4.0.0-14.el5
grace                           2009-02-19 Numerical Data Processing and Visualization Tool                                                    5.1.22-2.el5
libxc                           2013-03-04 Library of exchange and correlation functionals to be used in DFT codes                             2.0.1-1.el5
netcdf                          2014-01-07 Libraries for the Unidata network Common Data Form (NetCDF v3)                                      3.6.3-1.el5
octave                          2009-08-28 A high-level language for numerical computations                                                    3.0.5-1.el5
pymol                           2010-02-15 PyMOL Molecular Graphics System                                                                     1.1-14.20081015svn3468.el5
R                               2013-01-03 A language for data analysis and graphics                                                           2.15.2-1.el5
R-core                          2013-01-03 The minimal R components necessary for a functional runtime                                         2.15.2-1.el5
R-devel                         2013-01-03 Files for development of R packages                                                                 2.15.2-1.el5
bzip2                           2010-12-29 A file compression utility.                                                                         1.0.3-6.el5_5
file                            2013-05-15 A utility for determining file types.                                                               4.17-28
findutils                       2010-01-02 The GNU versions of find utilities (find and xargs).                                                4.2.27-6.el5
gzip                            2012-09-10 The GNU data compression program.                                                                   1.3.5-13.el5.centos
openbabel                       2008-04-16 Chemistry software file format converter                                                            2.1.1-1.fc8
pbzip2                          2011-08-30 Parallel implementation of bzip2                                                                    1.1.1-1.el5
pigz                            2012-09-10 Parallel implementation of gzip                                                                     2.2.5-1.el5
tree                            2007-09-24 A utility which displays a tree view of the contents of directories.                                1.5.0-4
xz                              2012-09-10 LZMA compression utilities                                                                          4.999.9-0.3.beta.20091007git.el5
curl                            2013-09-06 A utility for getting files from remote servers (FTP, HTTP, and others).                            7.15.5-17.el5_9
finger                          2012-09-10 The finger client.                                                                                  0.17-33
firefox                         2014-01-07 Mozilla Firefox Web browser                                                                         24.2.0-1.0.1.el5.centos
ftp                             2013-05-15 The standard UNIX FTP (File Transfer Protocol) client.                                              0.17-38.el5
ganglia                         2010-07-13 Ganglia Distributed Monitoring System                                                               3.0.7-2
ganglia-gmond                   2010-07-13 Ganglia Monitoring daemon                                                                           3.0.7-2
htmlview                        2008-09-03 Launcher of Preferred Web Browser                                                                   4.0.0-2.el5
jwhois                          2011-08-30 Internet whois/nicname client.                                                                      3.2.3-12.el5
lftp                            2013-05-15 A sophisticated file transfer program                                                               3.7.11-8.el5
lynx                            2013-08-19 A text-based Web browser.                                                                           2.8.5-28.1.el5_2.1
mailx                           2007-09-24 The /bin/mail program for sending e-mail messages.                                                  8.1.1-44.2.2
mtr                             2007-09-24 A network diagnostic tool.                                                                          0.71-3.1
mutt                            2013-05-15 A text mode mail user agent.                                                                        1.4.2.2-6.el5
nc                              2007-09-24 Reads and writes data across network connections using TCP or UDP.                                  1.84-10.fc6
openldap-clients                2012-09-10 Client programs for OpenLDAP.                                                                       2.3.43-25.el5_8.1
openssh                         2012-09-10 The OpenSSH implementation of SSH protocol versions 1 and 2                                         4.3p2-82.el5
openssh-clients                 2012-09-10 The OpenSSH client applications                                                                     4.3p2-82.el5
rsync                           2012-09-10 A program for synchronizing files over a network                                                    3.0.6-4.el5_7.1
stunnel                         2009-04-22 An SSL-encrypting socket wrapper.                                                                   4.15-2.el5.1
talk                            2012-09-10 Talk client for one-on-one Internet chatting.                                                       0.17-31.el5
tcpdump                         2010-07-13 A network traffic monitoring tool.                                                                  3.9.4-15.el5
telnet                          2013-05-15 The client program for the telnet remote login protocol.                                            0.17-41.el5
traceroute                      2012-09-10 Traces the route taken by packets over an IPv4/IPv6 network                                         2.0.1-6.el5
wget                            2012-09-10 A utility for retrieving files using the HTTP or FTP protocols.                                     1.11.4-3.el5_8.2
xulrunner                       2014-01-07 XUL Runtime for Gecko Applications                                                                  17.0.10-1.el5_10
ImageMagick                     2012-09-10 An X application for displaying and manipulating images.                                            6.2.8.0-15.el5_8
netpbm-progs                    2012-09-10 Tools for manipulating graphics files in netpbm supported formats                                   10.35.58-10.el5
transfig                        2008-04-09 A utility for converting FIG files (made by xfig) to other formats.                                 3.2.4-16
xfig                            2009-04-22 An X Window System tool for drawing basic vector graphics.                                          3.2.4-21.3.el5
lcms                            2009-04-22 Color Management System                                                                             1.18-0.1.beta1.el5_3.2
a2ps                            2008-11-11 Converts text and other types of files to PostScript(TM).                                           4.13b-57.2.el5
evince                          2012-09-10 Document viewer                                                                                     0.6.0-17.el5
ghostscript                     2014-01-07 A PostScript(TM) interpreter and renderer.                                                          8.70-15.el5_9.3
ghostscript-fonts               2008-04-09 Fonts for the Ghostscript PostScript(TM) interpreter.                                               5.50-13.1.1
groff                           2012-09-10 A document formatting system.                                                                       1.18.1.1-13.el5
gv                              2010-07-13 A X front-end for the Ghostscript PostScript(TM) interpreter                                        3.7.1-1.el5
latex2html                      2008-05-23 Converts LaTeX documents to HTML                                                                    2002.2.1-6
neon                            2010-01-02 An HTTP and WebDAV client library                                                                   0.25.5-10.el5_4.1
paps                            2011-08-30 Plain Text to PostScript converter                                                                  0.6.6-20.el5
psutils                         2008-05-23 PostScript Utilities                                                                                1.17-26.1
t1lib                           2012-09-10 PostScript Type 1 font rasterizer                                                                   5.1.1-9.el5
tetex                           2012-09-10 The TeX text formatting system.                                                                     3.0-33.15.el5_8.1
tetex-dvips                     2012-09-10 A DVI to PostScript converter for the TeX text formatting system.                                   3.0-33.15.el5_8.1
tetex-fonts                     2012-09-10 The font files for the TeX text formatting system.                                                  3.0-33.15.el5_8.1
tetex-latex                     2012-09-10 The LaTeX front end for the TeX text formatting system.                                             3.0-33.15.el5_8.1
texinfo                         2008-05-23 Tools needed to create Texinfo format documentation files.                                          4.8-14.el5
texinfo-tex                     2008-05-23 Tools for fromating Texinfo documentation files using TeX                                           4.8-14.el5
xpdf                            2013-10-25 A PDF file viewer for the X Window System                                                           3.03-8.el5.1
ksh                             2014-01-07 The Original ATT Korn Shell                                                                         20100621-18.el5
bind-libs                       2013-05-15 Libraries used by the BIND DNS packages                                                             9.3.6-20.P1.el5_8.6
bind-utils                      2013-05-15 Utilities for querying DNS name servers.                                                            9.3.6-20.P1.el5_8.6
bluez-gnome                     2007-09-24 Bluetooth pairing and control applet                                                                0.5-5.fc6
bluez-utils                     2010-12-29 Bluetooth utilities                                                                                 3.7-2.2.el5.centos
bonnie++                        2008-09-03 Filesystem and disk benchmark & burn-in suite                                                       1.03a-6.el5
collectl                        2014-01-07 A utility to collect various Linux performance data                                                 3.6.9-1.el5
conman                          2008-02-05 ConMan - The Console Manager                                                                        0.1.9.2-8.el5
cryptsetup-luks                 2012-09-10 A utility for setting up encrypted filesystems                                                      1.0.3-8.el5
dialog                          2008-05-23 A utility for creating TTY dialog boxes.                                                            1.0.20051107-1.2.2
dosfstools                      2010-07-13 Utilities for making and checking MS-DOS FAT filesystems on Linux                                   2.11-9.el5
ethtool                         2010-07-13 Ethernet settings tool for PCI ethernet cards                                                       6-4.el5
fbset                           2007-09-24 Tools for managing a frame buffer's video mode properties.                                          2.1-22
gnome-mount                     2007-12-12 Mount replacement which uses HAL to do the mounting                                                 0.5-3.el5
gnupg                           2014-01-07 A GNU utility for secure communication and data storage.                                            1.4.5-18.el5_10
hdparm                          2007-09-24 A utility for displaying and/or setting hard disk parameters.                                       6.6-2
hwloc                           2013-01-04 Portable Hardware Locality - portable abstraction of hierarchical architectures                     1.1-0.el5
iproute                         2013-05-15 Advanced IP routing and network device configuration tools.                                         2.6.18-15.el5
irda-utils                      2007-09-24 Utilities for infrared communication between devices.                                               0.9.17-2.fc6
kudzu                           2013-05-15 The CentOS Linux hardware probing tool.                                                             1.2.57.1.26-7.el5.centos
lm_sensors                      2010-07-13 Hardware monitoring tools.                                                                          2.10.7-9.el5
logwatch                        2013-05-15 A log file analysis program                                                                         7.3-10.el5
mlocate                         2010-01-02 An utility for finding files by name                                                                0.15-1.el5.2
mtools                          2007-09-24 Programs for accessing MS-DOS disks without mounting the disks.                                     3.9.10-2.fc6
OpenIPMI-tools                  2013-05-15 OpenIPMI utilities and scripts from ipmitool                                                        2.0.16-16.el5
parted                          2013-05-15 The GNU disk partition manipulation program                                                         1.8.1-30.el5
pciutils                        2012-09-10 PCI bus related utilities                                                                           3.1.7-5.el5
procps                          2014-01-07 System and process monitoring utilities.                                                            3.2.7-26.el5
psacct                          2009-04-22 Utilities for monitoring process activities.                                                        6.3.2-44.el5
psmisc                          2013-05-15 Utilities for managing processes on your system.                                                    22.2-11
python-libs                     2013-05-15 The libraries for python runtime                                                                    2.4.3-56.el5
rdate                           2009-04-22 Tool for getting the date/time from a remote machine.                                               1.4-8.el5
rdist                           2007-09-24 Maintains identical copies of files on multiple machines.                                           6.1.5-44
rsnapshot                       2014-01-07 Local and remote filesystem snapshot utility                                                        1.3.1-12.el5
screen                          2011-08-30 A screen manager that supports multiple logins on one terminal                                      4.0.3-4.el5
setserial                       2007-09-24 A utility for configuring serial ports.                                                             2.17-19.2.2
setuptool                       2010-12-29 A text mode system configuration tool.                                                              1.19.2-1.el5.centos
stress                          2013-03-13 Tool to impose stress on a POSIX-compliant operating system                                         1.0.2-1
sudo                            2014-01-07 Allows restricted root access for specified users.                                                  1.7.2p1-28.el5
symlinks                        2013-05-15 A utility which maintains a system's symbolic links.                                                1.2-26.el5
syslinux                        2013-05-15 Simple kernel loader which boots from a FAT filesystem                                              4.02-7.2.el5
system-config-network-tui       2012-09-10 The NEtwork Adminstration Tool                                                                      1.3.99.21-1.el5
system-switch-mail              2012-09-10 The Mail Transport Agent Switcher                                                                   0.5.25-13.el5
time                            2007-09-24 A GNU utility for monitoring a program's use of system resources.                                   1.7-27.2.2
torque                          2014-01-07 Tera-scale Open-source Resource and QUEue manager                                                   4.1.7-2carbon
torque-client                   2014-01-07 TORQUE Client                                                                                       4.1.7-2carbon
torque-devel                    2014-01-07 TORQUE Development Files                                                                            4.1.7-2carbon
ttmkfdir                        2007-12-12 Utility to create fonts.scale files for truetype fonts                                              3.0.9-23.el5
usbutils                        2007-09-24 Linux USB utilities.                                                                                0.71-2.1
usermode                        2009-04-22 Tools for certain user account management tasks.                                                    1.88-3.el5.2
which                           2007-09-24 Displays where a particular program in your path is located.                                        2.16-7
aspell                          2014-01-07 A spelling checker.                                                                                 0.60.3-13
aspell-en                       2013-05-15 English dictionaries for Aspell.                                                                    6.0-3
diffutils                       2013-05-15 A GNU collection of diff utilities.                                                                 2.8.1-16.el5
docbook-dtds                    2008-04-09 SGML and XML document type definitions for DocBook.                                                 1.0-30.1
dos2unix                        2010-01-02 Text file format converter                                                                          3.1-27.2.el5
ed                              2008-12-30 The GNU line editor.                                                                                0.2-39.el5_2
gawk                            2013-05-15 The GNU version of the awk text processing utility.                                                 3.1.5-16.el5
grep                            2010-01-02 The GNU versions of grep pattern matching utilities.                                                2.5.1-55.el5
less                            2012-09-10 A text file browser similar to more, but better.                                                    436-9.el5
m4                              2007-09-24 The GNU macro processor.                                                                            1.4.5-3.el5.1
openjade                        2008-04-09 A DSSSL implementation.                                                                             1.3.2-27
opensp                          2008-04-09 SGML and XML parser                                                                                 1.5.2-4
poppler-utils                   2013-09-06 Command line utilities for converting PDF files.                                                    0.5.4-19.el5_9.2
sed                             2011-08-30 A GNU stream text editor.                                                                           4.1.5-8.el5
sgml-common                     2008-04-09 Common SGML catalog and DTD files.                                                                  0.6.3-18
unix2dos                        2010-01-02 unix2dos - UNIX to DOS text file format converter                                                   2.2-26.2.3.el5
xml-common                      2008-04-09 Common XML catalog and DTD files.                                                                   0.6.3-18
crash                           2013-05-15 Kernel crash and live system analysis utility                                                       5.1.8-2.el5.centos
gdb                             2013-05-15 A GNU source-level debugger for C, C++, Java and other languages                                    7.0.1-45.el5.centos
lsof                            2012-09-10 A utility which lists open files on a Linux/UNIX system.                                            4.78-6
strace                          2013-05-15 Tracks and displays system calls associated with a running process                                  4.5.18-18.el5
valgrind                        2013-10-02 Tool for finding memory management bugs in programs                                                 3.5.0-5.el5
lustre-client-modules           2013-05-15 Kernel Lustre modules for Linux 2.6.18-348.1.1.el5                                                  1.8.9-wc1_2.6.18_348.1.1.el5
lustre-source                   2010-08-01 Object-Based Disk storage driver source                                                             1.8.3-2.6.18_164.11.1.el5_lustre.1.8.3
cpp                             2013-05-15 The C Preprocessor.                                                                                 4.1.2-54.el5
expect                          2012-09-10 A program-script interaction and testing utility                                                    5.43.0-8.el5
gcc                             2013-05-15 Various compilers (C, C++, Objective-C, Java, ...)                                                  4.1.2-54.el5
gcc-c++                         2013-05-15 C++ support for GCC                                                                                 4.1.2-54.el5
gcc-gfortran                    2013-05-15 Fortran 95 support                                                                                  4.1.2-54.el5
guile                           2008-05-21 A GNU implementation of Scheme for application extensibility.                                       1.8.0-8.20060831cvs
numpy                           2009-08-28 A fast multidimensional array facility for Python                                                   1.2.1-2.el5
perl                            2014-01-07 The Perl programming language                                                                       5.8.8-41.el5
perl-suidperl                   2014-01-07 suidperl, for use with setuid perl scripts                                                          5.8.8-41.el5
pexpect                         2010-07-13 Pure Python Expect-like module                                                                      2.3-3.el5
pycairo                         2008-12-03 Python bindings for the cairo library                                                               1.2.0-1.1
pygobject2                      2007-09-24 Python bindings for GObject                                                                         2.12.1-5.el5
pygobject2-devel                2009-02-12 Development files for building add-on libraries                                                     2.12.1-5.el5
pygobject2-doc                  2009-02-12 Documentation files for pygobject2                                                                  2.12.1-5.el5
pygtk2                          2008-12-03 Python bindings for the GTK+ widget set.                                                            2.10.1-12.el5
pygtk2-codegen                  2009-02-12 The code generation program for PyGTK                                                               2.10.1-12.el5
pygtk2-devel                    2009-02-12 files needed to build wrappers for GTK+ addon libraries                                             2.10.1-12.el5
pygtk2-libglade                 2013-05-21 A wrapper for the libglade library for use with PyGTK                                               2.10.1-12.el5
python                          2013-05-15 An interpreted, interactive, object-oriented programming language.                                  2.4.3-56.el5
python-dateutil                 2014-01-07 Powerful extensions to the standard datetime module                                                 1.2-3.el5
python-decoratortools           2010-07-28 Use class and function decorators -- even in Python 2.3                                             1.7-1.el5
python-docutils                 2010-03-08 A system for processing plaintext documentation                                                     0.5-3.el5
python-imaging                  2012-09-10 Python's own image processing library                                                               1.1.5-7.el5
python-nose                     2010-12-29 A discovery-based unittest extension for Python                                                     0.11.3-2.el5
python-numeric                  2011-08-30 Numerical Extension to Python                                                                       23.7-2.2.2.el5_6.1
python-setuptools               2009-02-12 Download, build, install, upgrade, and uninstall Python packages                                    0.6c7-1.el5
pytz                            2010-07-13 World Timezone Definitions for Python                                                               2010h-1.el5
tcl                             2013-05-15 Tcl scripting language development environment                                                      8.4.13-6.el5
tcl-devel                       2013-05-15 Tcl scripting language development environment                                                      8.4.13-6.el5
tclx                            2010-05-23 Extensions for Tcl and Tk                                                                           8.4.0-5.fc6
tclx-devel                      2010-05-23 Extended Tcl development files                                                                      8.4.0-5.fc6
tix                             2008-06-19 A set of extension widgets for Tk                                                                   8.4.0-11.fc6
tk                              2008-02-29 Tk graphical toolkit for the Tcl scripting language                                                 8.4.13-5.el5_1.1
tk-devel                        2008-02-29 Tk graphical toolkit development files                                                              8.4.13-5.el5_1.1
tkinter                         2013-05-15 A graphical user interface for the Python scripting language.                                       2.4.3-56.el5
unifdef                         2010-07-27 Unifdef tool for removing ifdef'd lines                                                             1.171-5.fc6
atk-devel                       2009-02-12 System for layout and rendering of internationalized text.                                          1.12.2-1.fc6
audit-libs                      2012-09-10 Dynamic library for libaudit                                                                        1.8-2.el5
audit-libs-python               2012-09-10 Python bindings for libaudit                                                                        1.8-2.el5
avahi-compat-libdns_sd          2011-08-30 Libraries for Apple Bonjour mDNSResponder compatibility.                                            0.6.16-10.el5_6
blas                            2012-03-02 The BLAS (Basic Linear Algebra Subprograms) library.                                                3.0-38.el5
blas-devel                      2012-09-10 LAPACK development libraries                                                                        3.0-38.el5
bzip2-devel                     2011-08-08 Header files and libraries for developing apps which will use bzip2.                                1.0.3-6.el5_5
cairo-devel                     2009-02-12 Cairo developmental libraries and header files                                                      1.2.4-5.el5
curl-devel                      2013-10-25 Files needed for building applications with libcurl.                                                7.15.5-17.el5_9
dbus-libs                       2014-01-07 Libraries for accessing D-BUS                                                                       1.1.2-21.el5
e2fsprogs-devel                 2013-05-15 Ext2/3 filesystem-specific static libraries and headers                                             1.39-36.el5_9
e2fsprogs-libs                  2013-05-15 Ext2/3 filesystem-specific static libraries and headers                                             1.39-36.el5_9
fftw2-devel                     2009-01-19 Headers, libraries and docs for the FFTW library                                                    2.1.5-15.el5
fftw3-devel                     2010-03-08 Headers, libraries and docs for the FFTW library                                                    3.2.2-3.el5
fontconfig-devel                2009-02-12 Font configuration and customization library                                                        2.4.1-7.el5
freetype-devel                  2013-05-15 FreeType development libraries and header files                                                     2.2.1-32.el5_9.1
gamin                           2012-09-10 Library providing the FAM File Alteration Monitor API                                               0.1.7-10.el5
gamin-python                    2012-09-10 Python bindings for the gamin library                                                               0.1.7-10.el5
gd-devel                        2010-03-08 The development libraries and header files for gd                                                   2.0.33-9.4.el5_4.2
glew-devel                      2013-10-25 Development files for glew                                                                          1.5.1-3.el5
glib2-devel                     2009-04-22 The GIMP ToolKit (GTK+) and GIMP Drawing Kit (GDK) support library                                  2.12.3-4.el5_3.1
glibc-devel                     2014-01-07 Object files for development using standard C libraries.                                            2.5-118.el5_10.2
glibc-headers                   2014-01-07 Header files for development using standard C libraries.                                            2.5-118.el5_10.2
glx-utils                       2013-09-06 GLX utilities                                                                                       6.5.1-7.11.el5_9
gmp-devel                       2008-05-21 Development tools for the GNU MP arbitrary precision library.                                       4.1.4-10.el5
grace-devel                     2009-02-19 Files needed for grace development                                                                  5.1.22-2.el5
gsl-devel                       2010-07-13 Libraries and the header files for GSL development                                                  1.13-3.el5
gtk2-devel                      2014-01-07 Development tools for GTK+ applications                                                             2.10.4-30.el5
guile-devel                     2008-05-21 Libraries and header files for the GUILE extensibility library.                                     1.8.0-8.20060831cvs
hdf5-devel                      2010-01-02 HDF5 development files                                                                              1.6.10-1.el5
hwloc-devel                     2013-03-04 Headers and shared development libraries for hwloc                                                  1.1-0.el5
itcl                            2011-02-23 Object oriented extensions to Tcl and Tk                                                            3.3-0.7.RC1.el5
itk                             2011-02-23 Object oriented extensions to Tk                                                                    3.3-0.4.RC1.el5
iwidgets                        2011-02-23 A set of useful widgets based on itcl and itk                                                       4.0.1-4.el5
krb5-devel                      2013-09-06 Development files needed to compile Kerberos 5 programs.                                            1.6.1-70.el5_9.2
lapack                          2012-09-10 The LAPACK libraries for numerical linear algebra                                                   3.0-38.el5
lapack-devel                    2012-09-10 LAPACK development libraries                                                                        3.0-38.el5
libgnomecups                    2010-07-13 GNOME library for CUPS integration                                                                  0.2.2-9
libICE-devel                    2008-06-18 X.Org X11 libICE development package                                                                1.0.1-2.1
libidn-devel                    2013-10-25 Development files for the libidn library                                                            0.6.5-1.1
libjpeg-devel                   2014-01-07 Development tools for programs which will use the libjpeg library.                                  6b-38
libnl                           2008-09-03 Convenience library for kernel netlink sockets                                                      1.0-0.10.pre5.5
libpcap                         2010-07-13 A system-independent interface for user-level packet capture.                                       0.9.4-15.el5
libpng-devel                    2012-09-10 Development tools for programs to manipulate PNG image format files                                 1.2.10-17.el5_8
libRmath                        2013-01-03 Standalone math library from the R project                                                          2.15.2-1.el5
libRmath-devel                  2013-01-03 Headers from the R Standalone math library                                                          2.15.2-1.el5
libselinux-devel                2011-08-30 Header files and libraries used to build SELinux                                                    1.33.4-5.7.el5
libselinux-python               2011-08-30 python bindings for libselinux                                                                      1.33.4-5.7.el5
libselinux-utils                2011-08-30 SELinux libselinux utilies                                                                          1.33.4-5.7.el5
libsepol-devel                  2010-07-13 Header files and libraries used to build policy manipulation tools                                  1.15.2-3.el5
libSM-devel                     2008-06-18 X.Org X11 libSM development package                                                                 1.0.1-3.1
libstdc++-devel                 2013-05-15 Header files and libraries for C++ development                                                      4.1.2-54.el5
libsysfs-devel                  2012-09-10 Static library and headers for libsysfs                                                             2.1.0-1.el5
libtermcap-devel                2008-02-22 Development tools for programs which will access the termcap database.                              2.0.8-46.1
libtiff-devel                   2013-01-03 Development tools for programs which will use the libtiff library                                   3.8.2-18.el5_8
libX11-devel                    2012-09-10 X.Org X11 libX11 development package                                                                1.0.3-11.el5_7.1
libXau-devel                    2007-12-12 X.Org X11 libXau development package                                                                1.0.1-3.1
libXcursor-devel                2012-09-10 X.Org X11 libXcursor development package                                                            1.1.7-1.2
libXdmcp-devel                  2007-12-12 X.Org X11 libXdmcp development package                                                              1.0.1-2.1
libXext-devel                   2009-02-12 X.Org X11 libXext development package                                                               1.0.1-2.1
libXfixes-devel                 2009-02-12 X.Org X11 libXfixes development package                                                             4.0.1-2.1
libXft-devel                    2009-02-12 X.Org X11 libXft development package                                                                2.1.10-1.1
libXi-devel                     2010-03-08 X.Org X11 libXi development package                                                                 1.0.1-4.el5_4
libXinerama-devel               2009-02-12 X.Org X11 libXinerama development package                                                           1.0.1-2.1
libxml2                         2013-09-06 Library providing XML and HTML support                                                              2.6.26-2.1.21.el5_9.3
libxml2-devel                   2013-09-06 Libraries, includes, etc. to develop XML and HTML applications                                      2.6.26-2.1.21.el5_9.3
libxml2-python                  2013-09-06 Python bindings for the libxml2 library                                                             2.6.26-2.1.21.el5_9.3
libXpm-devel                    2009-02-20 X.Org X11 libXpm development package                                                                3.5.5-3
libXrandr-devel                 2010-07-13 X.Org X11 libXrandr development package                                                             1.1.1-3.3
libXrender-devel                2009-02-12 X.Org X11 libXrender development package                                                            0.9.1-3.1
libxslt                         2013-01-03 Library providing the Gnome XSLT engine                                                             1.1.17-4.el5_8.3
libXt-devel                     2010-07-13 X.Org X11 libXt development package                                                                 1.0.2-3.2.el5
libyaml                         2012-03-02 YAML 1.1 parser and emitter written in C                                                            0.1.2-3.el5
mesa-libGL-devel                2013-09-06 Mesa libGL development package                                                                      6.5.1-7.11.el5_9
mesa-libGLU-devel               2013-10-25 Mesa libGLU development package                                                                     6.5.1-7.11.el5_9
nautilus-extensions             2012-09-10 Nautilus extensions library                                                                         2.16.2-10.el5
ncurses-devel                   2009-01-19 Development files for the ncurses library                                                           5.5-24.20060715
net-snmp-libs                   2013-05-15 The NET-SNMP runtime libraries.                                                                     5.3.2.2-20.el5
netcdf-devel                    2014-01-07 Development files for netcdf-3                                                                      3.6.3-1.el5
NetworkManager-glib             2012-09-10 Libraries for adding NetworkManager support to applications that use glib.                          0.7.0-13.el5
octave-devel                    2009-08-28 Development headers and files for Octave                                                            3.0.5-1.el5
OpenIPMI-libs                   2013-05-15 The OpenIPMI runtime libraries                                                                      2.0.16-16.el5
openmpi                         2013-05-15 Open Message Passing Interface                                                                      1.4-7.el5
openmpi-devel                   2013-05-15 Development files for openmpi                                                                       1.4-7.el5
openmpi-libs                    2013-05-15 Libraries used by openmpi programs                                                                  1.4-7.el5
openssl-devel                   2013-05-15 Files for development of applications which will use OpenSSL                                        0.9.8e-26.el5_9.1
pam-devel                       2013-05-15 Files needed for developing PAM-aware applications and modules for PAM                              0.99.6.2-12.el5
pango-devel                     2012-09-10 System for layout and rendering of internationalized text                                           1.14.9-8.el5.centos.3
pcre-devel                      2014-01-07 Development files for pcre                                                                          6.6-9.el5
perl-Compress-Zlib              2009-05-20 A module providing Perl interfaces to the zlib compression library.                                 1.42-1.fc6
perl-Convert-ASN1               2010-09-15 Convert-ASN1 Perl module                                                                            0.20-1.1
perl-Crypt-SSLeay               2010-06-10 Crypt::SSLeay - OpenSSL glue that provides LWP https support                                        0.51-11.el5
perl-DBI                        2009-04-22 A database access API for perl                                                                      1.52-2.el5
perl-Error                      2013-10-25 Error Perl module                                                                                   0.17010-1.el5
perl-Git                        2013-10-25 Perl interface to Git                                                                               1.8.2.1-1.el5
perl-HTML-Parser                2007-12-12 Perl module for parsing HTML                                                                        3.55-1.fc6
perl-HTML-Tagset                2007-12-12 HTML::Tagset - data tables useful in parsing HTML                                                   3.10-2.1.1
perl-IO-Interface               2010-01-13 Perl extension for accessing network card configuration information                                 1.03-1.el5.2
perl-IO-Socket-SSL              2013-05-15 Perl library for transparent SSL                                                                    1.01-2.el5
perl-IO-Tty                     2011-01-05 Perl interface to pseudo tty's                                                                      1.07-2.el5.1
perl-LDAP                       2013-01-03 LDAP Perl module                                                                                    0.33-4.el5_8
perl-libwww-perl                2010-06-09 A Perl interface to the World-Wide Web                                                              5.805-1.1.1
perl-Net-SSLeay                 2010-09-15 Perl extension for using OpenSSL                                                                    1.30-4.fc6
perl-String-CRC32               2007-09-24 Perl interface for cyclic redundency check generation                                               1.4-2.fc6
perl-TermReadKey                2013-10-25 A perl module for simple terminal control                                                           2.30-4.el5
perl-Time-Piece                 2014-01-30 Time objects from localtime and gmtime                                                              1.09-2.el5
perl-URI                        2008-11-14 A Perl module implementing URI parsing and manipulation                                             1.35-3
perl-XML-NamespaceSupport       2010-09-15 XML-NamespaceSupport Perl module                                                                    1.09-1.2.1
perl-XML-SAX                    2013-05-15 XML-SAX Perl module                                                                                 0.14-13.el5
poppler                         2013-09-06 PDF rendering library                                                                               0.5.4-19.el5_9.2
popt                            2014-01-07 A C library for parsing command line parameters.                                                    1.10.2.3-34.el5
pycairo-devel                   2009-02-12 Libraries and headers for pycairo                                                                   1.2.0-1.1
pyOpenSSL                       2009-08-28 Python wrapper module around the OpenSSL library                                                    0.7-6.el5
python-ctypes                   2012-09-10 Create and manipulate C data types from Python                                                      1.0.2-3.el5
python-devel                    2013-05-15 The libraries and header files needed for Python development.                                       2.4.3-56.el5
python-elementtree              2007-09-24 Fast XML parser and writer                                                                          1.2.6-5
python-hashlib                  2010-07-28 Secure hash and message digest algorithm library                                                    20081119-4.el5
python-iniparse                 2009-04-22 Python Module for Accessing and Modifying Configuration Data in INI files                           0.2.4-1.el5
python-lxml                     2014-01-07 ElementTree-like Python bindings for libxml2 and libxslt                                            2.0.11-2.el5
python-matplotlib               2010-07-13 Python plotting library                                                                             0.99.1.2-1.el5
python-matplotlib-tk            2012-03-02 Tk backend for python-matplotlib                                                                    0.99.1.2-1.el5
python-pmw                      2010-02-15 Python powerwidgets                                                                                 1.3.2-5.el5
python-sqlite                   2007-09-24 Python bindings for sqlite.                                                                         1.1.7-1.2.1
python-urlgrabber               2011-08-30 A high-level cross-protocol url-grabber                                                             3.1.0-6.el5
PyYAML                          2012-03-02 YAML parser and emitter for Python                                                                  3.08-4.el5
qhull-devel                     2013-10-25 Development files for qhull                                                                         2003.1-8.el5
readline-devel                  2010-01-02 Files needed to develop programs which use the readline library.                                    5.1-3.el5
rpm-libs                        2014-01-07 Libraries for manipulating RPM packages                                                             4.4.2.3-34.el5
rpm-python                      2014-01-07 Python bindings for apps which will manipulate RPM packages                                         4.4.2.3-34.el5
sos                             2014-01-07 A set of tools to gather troubleshooting information from a system                                  1.7-9.66.el5.centos
sqlite-devel                    2013-09-06 Development tools for the sqlite3 embeddable SQL database engine.                                   3.3.6-7
yum-metadata-parser             2013-05-15 A fast metadata parser for yum                                                                      1.1.2-4.el5
zlib-devel                      2013-05-15 Header files and libraries for Zlib development.                                                    1.2.3-7.el5
checkpolicy                     2010-07-13 SELinux policy compiler                                                                             1.33.1-6.el5
kernel-headers                  2014-01-07 Header files for the Linux kernel for use by glibc                                                  2.6.18-371.3.1.el5
opensm-devel                    2013-05-15 Development files for the opensm-libs libraries                                                     3.3.13-1.el5
redhat-rpm-config               2010-12-29 Red Hat specific rpm configuration files.                                                           8.0.45-32.el5.centos
xorg-x11-proto-devel            2010-01-02 X.Org X11 Protocol headers                                                                          7.1-13.el5
autoconf                        2008-09-18 A GNU tool for automatically configuring source code.                                               2.59-12
automake                        2010-07-13 A GNU tool for automatically creating Makefiles.                                                    1.9.6-2.3.el5
binutils                        2014-01-07 A GNU collection of binary utilities.                                                               2.17.50.0.6-26.el5
cmake                           2012-09-10 Cross-platform make system                                                                          2.6.4-5.el5.4
ctags                           2013-03-04 A C programming language indexing and/or cross-reference tool.                                      5.6-1.1
cvs                             2013-05-15 A version control system.                                                                           1.11.22-11.el5_8.1
desktop-file-utils              2007-09-24 Utilities for manipulating .desktop files                                                           0.10-7
doxygen                         2013-05-15 A documentation system for C/C++.                                                                   1.4.7-2
elfutils                        2009-04-22 A collection of utilities and DSOs to handle compiled objects                                       0.137-3.el5
elfutils-libelf                 2009-04-22 Library to read and write ELF files                                                                 0.137-3.el5
elfutils-libs                   2009-04-22 Libraries to handle compiled objects                                                                0.137-3.el5
flex                            2009-09-10 A tool for creating scanners (text pattern recognizers).                                            2.5.4a-41.fc6
gettext                         2011-08-30 GNU libraries and utilities for producing multi-lingual messages                                    0.17-1.el5
git                             2013-10-25 Fast Version Control System                                                                         1.8.2.1-1.el5
git-gui                         2013-10-25 Git GUI tool                                                                                        1.8.2.1-1.el5
gitk                            2013-10-25 Git revision tree visualiser                                                                        1.8.2.1-1.el5
jdk                             2011-09-20 Java(TM) Platform Standard Edition Development Kit                                                  1.6.0_27-fcs
jre                             2011-09-20 Java(TM) Platform Standard Edition Runtime Environment                                              1.6.0_27-fcs
libtool                         2010-01-02 The GNU Portable Library Tool                                                                       1.5.22-7.el5_4
make                            2008-09-03 A GNU tool which simplifies the build process for users.                                            3.81-3.el5
mock                            2013-05-15 Builds packages inside chroots                                                                      1.0.37-1.el5
patch                           2011-08-30 The GNU patch command, for modifying/upgrading files.                                               2.5.4-31.el5
pkgconfig                       2008-09-03 A tool for determining compilation options.                                                         0.21-2.el5
python-tools                    2013-05-15 A collection of development tools included with Python.                                             2.4.3-56.el5
rcs                             2007-12-21 Revision Control System (RCS) file version management tools.                                        5.7-30.1
rpm-build                       2014-01-07 Scripts and executable programs used to build packages                                              4.4.2.3-34.el5
subversion                      2013-05-15 Modern Version Control System designed to replace CVS                                               1.6.11-11.el5_9
sysfsutils                      2012-09-10 sysfsutils, library interface to sysfs.                                                             2.1.0-1.el5
yum-utils                       2012-09-10 Utilities based around the yum package manager                                                      1.1.16-21.el5.centos
Deployment_Guide-en-US          2012-09-10 Deployment Guide                                                                                    5.8-1.el5.centos
kernel-doc                      2014-01-07 Various documentation bits found in the kernel source.                                              2.6.18-371.3.1.el5
man-pages                       2012-09-10 Man (manual) pages from the Linux Documentation Project.                                            2.39-20.el5
specspo                         2013-05-15 Package descriptions, summaries, and groups.                                                        13-4.el5.centos
gpg-pubkey                      2010-12-30 gpg(CentOS-5 Key (CentOS 5 Official Signing Key) <[email protected]>)                               217521f6-45e8a53237017186-45761324e8562897-459f07a4
acl                             2012-09-10 Access control list utilities.                                                                      2.2.39-8.el5
amtu                            2011-08-30 Abstract Machine Test Utility (AMTU)                                                                1.0.6-2.el5
anacron                         2010-12-29 A cron-like program that can run jobs lost during downtime.                                         2.3-45.el5.centos
attr                            2007-09-24 Utilities for managing filesystem extended attributes.                                              2.4.32-1.1
authconfig                      2012-09-10 Command line tool for setting up authentication from network services                               5.3.21-7.el5
avahi                           2011-08-30 Local network service discovery                                                                     0.6.16-10.el5_6
avahi-glib                      2011-08-30 Glib libraries for avahi                                                                            0.6.16-10.el5_6
basesystem                      2010-12-29 The skeleton package which defines a simple CentOS system.                                          8.0-5.1.1.el5.centos
centos-release                  2014-01-07 CentOS release file                                                                                 5-10.el5.centos
centos-release-notes            2014-01-07 CentOS release notes files                                                                          5.10-0
chkconfig                       2010-07-13 A system tool for maintaining the /etc/rc*.d hierarchy.                                             1.3.30.2-2.el5
chkfontpath                     2007-12-12 Simple interface for editing the font path for the X font server.                                   1.10.1-1.1
coreutils                       2012-09-10 The GNU core utilities: a set of tools commonly used in shell scripts                               5.97-34.el5_8.1
cpuspeed                        2012-09-10 CPU frequency adjusting daemon                                                                      1.2.1-10.el5
createrepo                      2011-08-30 Creates a common metadata repository                                                                0.4.11-3.el5
crontabs                        2013-05-15 Root crontab files used to schedule the execution of programs.                                      1.10-11.el5
device-mapper                   2012-09-10 device mapper library                                                                               1.02.67-2.el5
device-mapper-event             2012-09-10 Device-mapper event daemon                                                                          1.02.67-2.el5
device-mapper-multipath         2014-01-07 Tools to manage multipath devices using device-mapper.                                              0.4.7-59.el5
dhclient                        2013-05-15 Provides the dhclient ISC DHCP client daemon and dhclient-script.                                   3.0.5-33.el5_9
dhcpv6-client                   2011-08-30 DHCPv6 client                                                                                       1.0.10-20.el5
dmidecode                       2012-09-10 Tool to analyse BIOS DMI data.                                                                      2.11-1.el5
dmraid                          2012-09-10 dmraid (Device-mapper RAID tool and library)                                                        1.0.0.rc13-65.el5
dmraid-events                   2012-09-10 dmevent_tool (Device-mapper event tool) and DSO                                                     1.0.0.rc13-65.el5
e2fsprogs                       2013-05-15 Utilities for managing the second and third extended (ext2/ext3) filesystems                        1.39-36.el5_9
eject                           2007-09-24 A program that ejects removable media using software control.                                       2.1.5-4.2.el5
environment-modules             2011-01-15 Provides dynamic modification of a user's environment                                               3.2.6-4.el5
filesystem                      2011-08-30 The basic directory layout for a Linux system.                                                      2.4.0-3.el5.centos
firstboot-tui                   2012-09-10 A text interface for firstboot                                                                      1.4.27.9-1.el5.centos
GConf2                          2007-09-24 A process-transparent configuration system                                                          2.14.0-9.el5
glibc-common                    2014-01-07 Common binaries and locale data for glibc                                                           2.5-118.el5_10.2
grub                            2014-01-07 GRUB - the Grand Unified Boot Loader.                                                               0.97-13.11.el5_10.1
hmaccalc                        2012-09-10 Tools for computing and checking HMAC values for files                                              0.9.6-4.el5
hwdata                          2014-01-07 Hardware identification and configuration data                                                      0.213.28-3.el5
ifd-egate                       2012-09-10 Axalto Egate SmartCard device driver for PCSC-lite                                                  0.05-17.el5
info                            2007-09-24 A stand-alone TTY-based reader for GNU texinfo documentation.                                       4.8-14.el5
initscripts                     2014-01-07 The inittab file and the /etc/init.d scripts.                                                       8.45.44-3.el5.centos
ipsec-tools                     2013-01-03 Tools for configuring and using IPSEC                                                               0.6.5-14.el5_8.5
iptables                        2013-01-03 Tools for managing Linux kernel packet filtering capabilities.                                      1.3.5-9.2.el5_8
iptables-ipv6                   2013-01-03 IPv6 support for iptables.                                                                          1.3.5-9.2.el5_8
iptstate                        2010-07-13 A top-like display of IP Tables state table entries                                                 1.4-2.el5
irqbalance                      2010-01-02 IRQ balancing daemon.                                                                               0.55-15.el5
kbd                             2013-05-15 Tools for configuring the console (keyboard, virtual terminals, etc.)                               1.12-22.el5
keyutils-libs                   2008-02-05 Key utilities library                                                                               1.2-1.el5
keyutils-libs-devel             2010-06-10 Development package for building linux key management utilities                                     1.2-1.el5
kpartx                          2014-01-07 Partition device manager for device-mapper devices.                                                 0.4.7-59.el5
krb5-workstation                2013-09-06 Kerberos 5 programs for use on workstations.                                                        1.6.1-70.el5_9.2
libgnomeprint22                 2008-09-03 Printing library for GNOME.                                                                         2.12.1-10.el5
libuser                         2013-05-15 A user and group account administration library.                                                    0.54.7-3.el5
logrotate                       2013-05-15 Rotates, compresses, removes and mails system log files.                                            3.7.4-14
lvm2                            2014-01-07 Userland logical volume management tools                                                            2.02.88-12.el5
mailcap                         2007-09-24 Associates helper applications with particular file types.                                          2.1.23-1.fc6
MAKEDEV                         2007-09-24 A program used for creating device files in /dev.                                                   3.23-1.2
man                             2013-05-15 A set of documentation tools: man, apropos and whatis.                                              1.6d-3.el5
mcelog                          2011-08-30 Tool to translate x86-64 CPU Machine Check Exception data.                                          0.9pre-1.32.el5
mdadm                           2013-05-15 mdadm controls Linux md devices (software RAID arrays)                                              2.6.9-5.el5
microcode_ctl                   2014-01-07 Tool to update x86/x86-64 CPU microcode.                                                            1.17-5.el5
mingetty                        2007-09-24 A compact getty program for virtual consoles only.                                                  1.07-5.2.2
mkbootdisk                      2007-09-24 Creates a boot floppy disk for booting a system.                                                    1.5.3-2.1
mkinitrd                        2014-01-07 Creates an initial ramdisk image for preloading modules.                                            5.1.19.6-81.el5_10
mktemp                          2012-09-10 A small utility for safely making /tmp files.                                                       1.5-24.el5
mpi-selector                    2010-01-02 Provides site-wide and per-user MPI implementation selection                                        1.0.2-1.el5
nash                            2014-01-07 nash shell                                                                                          5.1.19.6-81.el5_10
net-tools                       2014-01-07 Basic networking tools.                                                                             1.60-83.el5_10
NetworkManager                  2012-09-10 Network connection manager and user applications                                                    0.7.0-13.el5
nss-tools                       2014-01-07 Tools for the Network Security Services                                                             3.15.3-4.el5_10
nss_ldap                        2013-05-15 NSS library and PAM module for LDAP.                                                                253-51.el5_9.1
ntsysv                          2010-07-13 A tool to set the stop/start of system services in a runlevel.                                      1.3.30.2-2.el5
numactl                         2011-08-30 library for tuning for Non Uniform Memory Access machines                                           0.9.8-12.el5_6
openib                          2013-05-15 OpenIB Infiniband Driver Stack                                                                      1.5.4.1-4.el5
OpenIPMI                        2013-05-15 OpenIPMI (Intelligent Platform Management Interface) library and tools                              2.0.16-16.el5
pam                             2013-05-15 A security tool which provides authentication for applications                                      0.99.6.2-12.el5
pam_ccreds                      2007-09-24 Pam module to cache login credentials                                                               3-5
pam_krb5                        2012-09-10 A Pluggable Authentication Module for Kerberos 5.                                                   2.2.14-22.el5
pam_passwdqc                    2007-09-24 Pluggable password quality-control module.                                                          1.0.2-1.2.2
pam_pkcs11                      2012-09-10 PKCS #11/NSS PAM login module                                                                       0.5.3-26.el5
pam_smb                         2007-09-24 A Pluggable Authentication Module (PAM) for use with SMB servers.                                   1.1.7-7.2.1
passwd                          2011-08-30 The passwd utility for setting/changing passwords using PAM                                         0.73-2
pcmciautils                     2007-09-24 PCMCIA utilities and initialization programs                                                        014-5
pinfo                           2007-09-24 An info file viewer.                                                                                0.6.9-1.fc6
pm-utils                        2013-05-15 Power management utilities and scripts                                                              0.99.3-14.el5
policycoreutils                 2014-01-07 SELinux policy core utilities.                                                                      1.33.12-14.13.el5
prelink                         2009-04-22 An ELF prelinking utility                                                                           0.4.0-2.el5
quota                           2013-05-15 System administration tools for monitoring users' disk usage.                                       3.13-8.el5
readahead                       2010-07-13 Read a preset list of files into memory.                                                            1.3-8.el5
redhat-logos                    2010-12-29 CentOS-related icons and pictures.                                                                  4.9.99-11.el5.centos
redhat-lsb                      2011-08-30 LSB base libraries support for CentOS Enterprise Linux                                              4.0-2.1.4.el5
rhel-instnum                    2009-04-22 A library for decoding RHEL installation numbers                                                    1.0.9-1.el5
rng-utils                       2012-09-10 Random number generator related utilities                                                           2.0-5.el5
rootfiles                       2007-09-24 The basic required files for the root user's directory.                                             8.1-1.1.1
rpm                             2014-01-07 The RPM package management system                                                                   4.4.2.3-34.el5
scrollkeeper                    2008-04-09 ScrollKeeper is a cataloging system for documentation on open systems.                              0.3.14-9.el5
selinux-policy                  2014-01-07 SELinux policy configuration                                                                        2.4.6-346.el5
selinux-policy-targeted         2014-01-07 SELinux targeted base policy                                                                        2.4.6-346.el5
setools                         2007-09-24 SELinux tools for managing policy                                                                   3.0-3.el5
setup                           2012-09-10 A set of system configuration and setup files.                                                      2.5.58-9.el5
sgpio                           2010-01-02 SGPIO captive backplane tool                                                                        1.2.0_10-2.el5
shadow-utils                    2013-05-15 Utilities for managing accounts and shadow password files.                                          4.0.17-21.el5
smartmontools                   2013-05-15 Tools for monitoring SMART capable hard disks                                                       5.42-2.el5
system-config-securitylevel-tui 2011-08-30 A text interface for modifying the system security level                                            1.6.29.1-6.el5
SysVinit                        2012-09-10 Programs which control basic system processes.                                                      2.86-17.el5
termcap                         2007-09-24 The terminal feature database used by certain applications.                                         5.5-1.20060701.1
tmpwatch                        2011-08-30 A utility for removing files based on when they were last accessed.                                 2.9.7-1.1.el5.5
tzdata                          2014-01-07 Timezone data                                                                                       2013i-1.el5
tzdata-java                     2014-01-07 Timezone data for Java                                                                              2013i-1.el5
udev                            2013-05-15 A userspace implementation of devfs                                                                 095-14.29.el5
util-linux                      2013-01-03 A collection of basic system utilities.                                                             2.13-0.59.el5_8
vconfig                         2010-07-13 Linux 802.1q VLAN configuration utility                                                             1.9-3
vixie-cron                      2012-09-10 The Vixie cron daemon for executing specified programs at set times.                                4.1-81.el5
wireless-tools                  2007-09-24 Wireless ethernet configuration tools                                                               28-2.el5
wpa_supplicant                  2014-01-07 WPA/WPA2/IEEE 802.1X Supplicant                                                                     0.5.10-10.el5
xdg-utils                       2009-01-19 Basic desktop integration functions                                                                 1.0.2-4.el5
xorg-x11-filesystem             2007-09-24 X.Org X11 filesystem layout                                                                         7.1-2.fc6
yp-tools                        2012-09-10 NIS (or YP) client programs.                                                                        2.9-2.el5
yum                             2013-05-15 RPM installer/updater                                                                               3.2.22-40.el5.centos
yum-downloadonly                2012-09-10 Yum plugin to add downloadonly command option                                                       1.1.16-21.el5.centos
yum-fastestmirror               2012-09-10 Yum plugin which chooses fastest repository from a mirrorlist                                       1.1.16-21.el5.centos
yum-priorities                  2012-09-10 plugin to give priorities to packages from different repos                                          1.1.16-21.el5.centos
yum-updatesd                    2013-05-15 Update notification daemon                                                                          0.9-5.el5
acpid                           2012-09-10 ACPI Event Daemon                                                                                   1.0.4-12.el5
at                              2010-07-13 Job spooling tools.                                                                                 3.1.8-84.el5
audit                           2012-09-10 User space tools for 2.6 kernel auditing                                                            1.8-2.el5
autofs                          2014-01-07 A tool for automatically mounting and unmounting filesystems.                                       5.0.1-0.rc2.183.el5
cups                            2013-05-15 Common Unix Printing System                                                                         1.3.7-30.el5_9.3
dhcdbd                          2009-04-22 DHCP D-BUS daemon (dhcdbd) controls dhclient sessions with D-BUS, stores and presents DHCP options. 2.2-2.el5
dnsmasq                         2010-01-02 A lightweight DHCP/caching DNS server                                                               2.45-1.1.el5_3
esound                          2012-09-10 Allows several audio streams to play on a single audio device.                                      0.2.36-4
gpm                             2007-09-24 A mouse server for the Linux console.                                                               1.20.1-74.1
iputils                         2010-01-02 Network monitoring tools including ping.                                                            20020927-46.el5
iscsi-initiator-utils           2013-05-15 iSCSI daemon and utility programs                                                                   6.2.0.872-16.el5
mcstrans                        2009-04-22 SELinux Translation Daemon                                                                          0.2.11-3.el5
nfs-utils                       2014-01-07 NFS utilities and supporting clients and daemons for the kernel NFS server.                         1.0.9-70.el5
nscd                            2014-01-07 A Name Service Caching Daemon (nscd).                                                               2.5-118.el5_10.2
ntp                             2014-01-07 Synchronizes system time using the Network Time Protocol (NTP).                                     4.2.2p1-17.el5.centos
openldap                        2012-09-10 The configuration files, libraries, and documentation for OpenLDAP.                                 2.3.43-25.el5_8.1
openssh-server                  2012-09-10 The OpenSSH server daemon                                                                           4.3p2-82.el5
ORBit2                          2009-04-22 A high-performance CORBA Object Request Broker                                                      2.14.3-5.el5
pcsc-lite                       2010-12-29 PC/SC Lite smart card framework and applications                                                    1.4.4-4.el5_5
portmap                         2007-09-24 A program which manages RPC connections.                                                            4.0-65.2.2.1
postfix                         2013-05-15 Postfix Mail Transport Agent                                                                        2.3.3-6.el5
ppp                             2009-04-22 The PPP (Point-to-Point Protocol) daemon.                                                           2.4.4-2.el5
rp-pppoe                        2013-05-15 A PPP over Ethernet client (for xDSL support).                                                      3.5-33.el5
rsh-server                      2012-09-10 Servers for remote access commands (rsh, rlogin, rcp).                                              0.17-40.el5_7.1
sysklogd                        2010-07-13 System logging and kernel message trapping daemons.                                                 1.4.1-46.el5
tcp_wrappers                    2010-01-02 A security tool which acts as a wrapper for TCP daemons.                                            7.6-40.7.el5
xinetd                          2014-01-07 A secure replacement for inetd.                                                                     2.3.14-20.el5_10
xorg-x11-xfs                    2011-08-30 X.Org X11 xfs font server                                                                           1.0.2-5.el5_6.1
ypbind                          2011-08-30 The NIS daemon which binds NIS clients to an NIS domain.                                            1.19-12.el5_6.1
kernel                          2014-01-07 The Linux kernel (the core of the Linux operating system)                                           2.6.18-348.1.1.el52.6.18-371.3.1.el5
kernel-devel                    2014-01-07 Development package for building kernel modules to match the kernel.                                2.6.18-371.3.1.el5
module-init-tools               2014-01-07 Kernel module management utilities.                                                                 3.3-0.pre3.1.63.el5
setarch                         2007-09-24 Personality setter                                                                                  2.0-1.1
agg                             2009-02-12 Anti-Grain Geometry                                                                                 2.4-2.1
alsa-lib                        2009-04-22 The Advanced Linux Sound Architecture (ALSA) library.                                               1.0.17-1.el5
apr                             2011-08-30 Apache Portable Runtime library                                                                     1.2.7-11.el5_6.5
apr-util                        2010-12-29 Apache Portable Runtime Utility library                                                             1.2.7-11.el5_5.2
atk                             2007-09-24 Interfaces for accessibility support                                                                1.12.2-1.fc6
atlas                           2009-08-28 Automatically Tuned Linear Algebra Software                                                         3.8.3-1.el5
audiofile                       2007-12-12 A library for accessing various audio file formats.                                                 0.2.6-5
beecrypt                        2007-09-24 An open source cryptography library.                                                                4.1.2-10.1.1
bluez-libs                      2008-09-03 Bluetooth libraries                                                                                 3.7-1.1
boost                           2013-05-15 The Boost C++ Libraries                                                                             1.33.1-16.el5_9
boost-devel                     2013-05-15 The Boost C++ headers and development libraries                                                     1.33.1-16.el5_9
bzip2-libs                      2010-12-29 Libraries for applications using bzip2                                                              1.0.3-6.el5_5
cairo                           2008-09-03 A vector graphics library                                                                           1.2.4-5.el5
ccid                            2014-01-07 Generic USB CCID smart card reader driver                                                           1.3.8-2.el5
CodeMeter64                     2009-03-13 CodeMeter RunTimeKit for 64-bit (EM64T) Applications                                                4.0-500
compat-dapl                     2013-05-15 dapl-1.2 compat libraries                                                                           2.0.34-1.el5
compat-dapl-devel               2013-05-15 Development files for the dapl-1.2 compat libdat and libdapl libraries                              2.0.34-1.el5
compat-db                       2009-04-21 The Berkeley DB database library for Red Hat Linux 7.x compatibility.                               4.2.52-5.1
compat-libf2c-34                2011-08-30 Fortran 77 compatibility runtime                                                                    3.4.6-4.1
compat-libstdc++-33             2007-09-24 Compatibility standard C++ libraries                                                                3.2.3-61
coolkey                         2014-01-07 CoolKey PKCS #11 module                                                                             1.1.0-16.1.el5
cracklib                        2008-02-05 A password-checking library.                                                                        2.8.9-3.3
cracklib-dicts                  2008-02-05 The standard CrackLib dictionaries.                                                                 2.8.9-3.3
cups-libs                       2013-05-15 Common Unix Printing System - libraries                                                             1.3.7-30.el5_9.3
cyrus-sasl                      2012-09-10 The Cyrus SASL library.                                                                             2.1.22-7.el5_8.1
cyrus-sasl-lib                  2012-09-10 Shared libraries needed by applications which use Cyrus SASL.                                       2.1.22-7.el5_8.1
cyrus-sasl-plain                2012-09-10 PLAIN and LOGIN support for Cyrus SASL.                                                             2.1.22-7.el5_8.1
dapl                            2013-05-15 Library providing access to the DAT 1.2 and 2.0 APIs                                                2.0.34-1.el5
dapl-devel                      2013-05-15 Development files for the libdat and libdapl libraries                                              2.0.34-1.el5
db4                             2010-07-13 The Berkeley DB database library (version 4) for C.                                                 4.3.29-10.el5_5.2
dbus                            2014-01-07 D-BUS message bus                                                                                   1.1.2-21.el5
dbus-glib                       2013-05-15 GLib bindings for D-Bus                                                                             0.73-11.el5_9
dbus-python                     2010-01-02 D-Bus Python Bindings                                                                               0.70-9.el5_4
expat                           2012-09-10 A library for parsing XML.                                                                          1.95.8-11.el5_8
fftw2                           2009-01-19 Fast Fourier Transform library                                                                      2.1.5-15.el5
fftw3                           2010-03-08 Fast Fourier Transform library                                                                      3.2.2-3.el5
fipscheck                       2010-01-02 A library for integrity verification of FIPS validated modules                                      1.2.0-1.el5
fipscheck-lib                   2010-01-02 Library files for fipscheck                                                                         1.2.0-1.el5
fontconfig                      2008-02-05 Font configuration and customization library                                                        2.4.1-7.el5
freeglut                        2010-02-15 A freely licensed alternative to the GLUT library                                                   2.4.0-7.1.el5
freetype                        2013-05-15 A free and portable font rendering engine                                                           2.2.1-32.el5_9.1
gd                              2010-03-08 A graphics library for quick creation of PNG or JPEG images                                         2.0.33-9.4.el5_4.2
gdbm                            2013-05-15 A GNU set of database routines which use extensible hashing.                                        1.8.0-28.el5
giflib                          2011-08-30 Library for manipulating GIF format image files                                                     4.1.3-7.3.3.el5
glew                            2013-10-25 The OpenGL Extension Wrangler Library                                                               1.5.1-3.el5
glib2                           2009-04-22 A library of handy utility functions                                                                2.12.3-4.el5_3.1
glibc                           2014-01-07 The GNU libc libraries.                                                                             2.5-118.el5_10.2
glpk                            2009-01-19 GNU Linear Programming Kit                                                                          4.20-2.el5
gmp                             2007-09-24 A GNU arbitrary precision library.                                                                  4.1.4-10.el5
gnome-keyring                   2007-12-12 A framework for managing user passwords and other secrets                                           0.6.0-1.fc6
gnome-mime-data                 2007-12-12 MIME type data files for GNOME desktop                                                              2.4.2-3.1
gnome-vfs2                      2013-09-06 The GNOME virtual file-system libraries                                                             2.16.2-12.el5_9
gnutls                          2013-09-06 A TLS protocol implementation.                                                                      1.4.1-10.el5_9.2
gsl                             2010-07-13 The GNU Scientific Library for numerical analysis                                                   1.13-3.el5
gtk2                            2014-01-07 The GIMP ToolKit (GTK+), a library for creating GUIs for X                                          2.10.4-30.el5
hal                             2013-05-15 Hardware Abstraction Layer                                                                          0.5.8.1-64.el5
hdf5                            2010-01-02 A general purpose library and file format for storing scientific data                               1.6.10-1.el5
hesiod                          2007-09-24 Hesiod libraries.                                                                                   3.1.0-8
inchi                           2008-04-16 The IUPAC International Chemical Identifier (InChI) library                                         1.0.1-8.fc8
infiniband-diags                2013-05-15 OpenFabrics Alliance InfiniBand Diagnostic Tools                                                    1.5.12-2.el5
krb5-libs                       2013-09-06 The shared libraries used by Kerberos 5.                                                            1.6.1-70.el5_9.2
libacl                          2012-09-10 Dynamic library for access control list support.                                                    2.2.39-8.el5
libaio                          2010-07-13 Linux-native asynchronous I/O access library                                                        0.3.106-5
libart_lgpl                     2007-12-12 Library of graphics routines used by libgnomecanvas                                                 2.3.17-4
libattr                         2007-12-12 Dynamic library for extended attribute support.                                                     2.4.32-1.1
libbonobo                       2010-12-29 Bonobo component system                                                                             2.16.0-1.1.el5_5.1
libbonoboui                     2007-12-12 Bonobo user interface components                                                                    2.16.0-1.fc6
libcap                          2007-09-24 Library for getting and setting POSIX.1e capabilities                                               1.10-26
libcroco                        2008-09-18 A CSS2 parsing library                                                                              0.6.1-2.1
libdaemon                       2007-12-12 library for writing UNIX daemons                                                                    0.10-5.el5
libdmx                          2008-02-18 X.Org X11 libdmx runtime library                                                                    1.0.2-3.1
libdrm                          2007-09-24 libdrm Direct Rendering Manager runtime library                                                     2.0.2-1.1
libevent                        2010-07-13 Abstract asynchronous event notification library                                                    1.4.13-1
libfontenc                      2007-12-12 X.Org X11 libfontenc runtime library                                                                1.0.2-2.2.el5
libFS                           2007-12-12 X.Org X11 libFS runtime library                                                                     1.0.0-3.1
libgcc                          2013-05-15 GCC version 4.1 shared support library                                                              4.1.2-54.el5
libgcrypt                       2014-01-07 A general-purpose cryptography library                                                              1.4.4-7.el5_10
libgfortran                     2013-05-15 Fortran 95 runtime                                                                                  4.1.2-54.el5
libglade2                       2007-12-12 The libglade library for loading user interfaces.                                                   2.6.0-2
libgnome                        2007-12-12 GNOME base library                                                                                  2.16.0-6.el5
libgnomecanvas                  2007-12-12 GnomeCanvas widget                                                                                  2.14.0-4.1
libgnomeprintui22               2008-04-09 GUI support for libgnomeprint                                                                       2.12.1-6
libgnomeui                      2007-12-12 GNOME base GUI library                                                                              2.16.0-5.el5
libgomp                         2013-05-15 GCC OpenMP v3.0 shared support library                                                              4.4.7-1.el5
libgpg-error                    2007-09-24 libgpg-error                                                                                        1.4-2
libgsf                          2008-04-09 GNOME Structured File library                                                                       1.14.1-6.1
libgssapi                       2007-09-24 Generic Security Services Application Programming Interface Library                                 0.10-2
libhugetlbfs                    2011-08-30 Library to access the Huge TLB Filesystem                                                           1.3-8.2.el5
libibcm                         2013-05-15 Userspace InfiniBand Connection Manager                                                             1.0.5-2.el5
libibmad                        2013-05-15 OpenFabrics Alliance InfiniBand MAD library                                                         1.3.8-1.el5
libibumad                       2013-05-15 OpenFabrics Alliance InfiniBand umad (user MAD) library                                             1.3.7-1.el5
libibverbs                      2013-05-15 A library for direct userspace use of RDMA (InfiniBand/iWARP) hardware                              1.1.6-3.el5
libibverbs-devel                2013-05-15 Development files for the libibverbs library                                                        1.1.6-3.el5
libICE                          2007-09-24 X.Org X11 libICE runtime library                                                                    1.0.1-2.1
libicu                          2012-09-10 International Components for Unicode - libraries                                                    3.6-5.16.1
libIDL                          2007-12-12 Library for parsing IDL (Interface Definition Language)                                             0.8.7-1.fc6
libidn                          2007-09-24 Internationalized Domain Name support library                                                       0.6.5-1.1
libjpeg                         2014-01-07 A library for manipulating JPEG image format files.                                                 6b-38
libmng                          2013-03-04 Library for Multiple-image Network Graphics support                                                 1.0.9-5.1
libmthca                        2013-05-15 Mellanox InfiniBand HCA Userspace Driver                                                            1.0.6-1.el5
libnotify                       2007-09-24 libnotify notification library                                                                      0.4.2-6.el5
libpaper                        2010-01-15 Library and tools for handling papersize                                                            1.1.21-1.el5.1
libpng                          2012-09-10 A library of functions for manipulating PNG image format files                                      1.2.10-17.el5_8
librdmacm                       2013-05-15 Userspace RDMA Connection Manager                                                                   1.0.15-2.el5
librsvg2                        2008-04-09 An SVG library based on cairo                                                                       2.16.1-1.el5
libselinux                      2011-08-30 SELinux library and simple utilities                                                                1.33.4-5.7.el5
libsemanage                     2010-01-02 SELinux binary policy manipulation library                                                          1.9.1-4.4.el5
libsepol                        2010-07-13 SELinux binary policy manipulation library                                                          1.15.2-3.el5
libSM                           2007-09-24 X.Org X11 libSM runtime library                                                                     1.0.1-3.1
libstdc++                       2013-05-15 GNU Standard C++ Library                                                                            4.1.2-54.el5
libsysfs                        2012-09-10 Shared library for interfacing with sysfs                                                           2.1.0-1.el5
libtermcap                      2007-09-24 A basic system library for accessing the termcap database.                                          2.0.8-46.1
libtiff                         2013-01-03 Library of functions for manipulating TIFF format image files                                       3.8.2-18.el5_8
libtool-ltdl                    2010-01-02 Runtime libraries for GNU Libtool Dynamic Module Loader                                             1.5.22-7.el5_4
libusb                          2012-09-10 A library which allows userspace access to USB devices.                                             0.1.12-6.el5
libutempter                     2009-04-22 A privileged helper for utmp/wtmp updates                                                           1.1.4-4.el5
libvolume_id                    2013-05-15 Dynamic libraries to get volume ids                                                                 095-14.29.el5
libwmf                          2009-08-28 Windows Metafile Library                                                                            0.2.8.4-10.2
libwnck                         2007-09-24 Window Navigator Construction Kit                                                                   2.16.0-4.fc6
libX11                          2012-09-10 X.Org X11 libX11 runtime library                                                                    1.0.3-11.el5_7.1
libXau                          2007-09-24 X.Org X11 libXau runtime library                                                                    1.0.1-3.1
libXaw                          2009-01-19 X.Org X11 libXaw runtime library                                                                    1.0.2-8.1
libXcursor                      2012-09-10 X.Org X11 libXcursor runtime library                                                                1.1.7-1.2
libXdmcp                        2007-09-24 X.Org X11 libXdmcp runtime library                                                                  1.0.1-2.1
libXext                         2007-09-24 X.Org X11 libXext runtime library                                                                   1.0.1-2.1
libXfixes                       2007-12-12 X.Org X11 libXfixes runtime library                                                                 4.0.1-2.1
libXfont                        2012-09-10 X.Org X11 libXfont runtime library                                                                  1.2.2-1.0.4.el5_7
libXfontcache                   2009-03-12 X.Org X11 libXfontcache runtime library                                                             1.0.2-3.1
libXft                          2007-12-12 X.Org X11 libXft runtime library                                                                    2.1.10-1.1
libXi                           2010-03-08 X.Org X11 libXi runtime library                                                                     1.0.1-4.el5_4
libXinerama                     2007-09-24 X.Org X11 libXinerama runtime library                                                               1.0.1-2.1
libxkbfile                      2008-05-07 X.Org X11 libxkbfile runtime library                                                                1.0.3-3.1
libXmu                          2007-09-24 X.Org X11 libXmu/libXmuu runtime libraries                                                          1.0.2-5
libXp                           2009-01-19 X.Org X11 libXp runtime library                                                                     1.0.0-8.1.el5
libXpm                          2007-12-12 X.Org X11 libXpm runtime library                                                                    3.5.5-3
libXrandr                       2010-07-13 X.Org X11 libXrandr runtime library                                                                 1.1.1-3.3
libXrender                      2007-09-24 X.Org X11 libXrender runtime library                                                                0.9.1-3.1
libXres                         2007-09-24 X.Org X11 libXres runtime library                                                                   1.0.1-3.1
libXScrnSaver                   2011-02-24 X.Org X11 libXss runtime library                                                                    1.1.0-3.1
libXt                           2010-07-13 X.Org X11 libXt runtime library                                                                     1.0.2-3.2.el5
libXTrap                        2009-03-12 X.Org X11 libXTrap runtime library                                                                  1.0.0-3.1
libXtst                         2008-02-18 X.Org X11 libXtst runtime library                                                                   1.0.1-3.1
libXv                           2008-02-18 X.Org X11 libXv runtime library                                                                     1.0.1-4.1
libXxf86dga                     2008-02-18 X.Org X11 libXxf86dga runtime library                                                               1.0.1-3.1
libXxf86misc                    2008-02-18 X.Org X11 libXxf86misc runtime library                                                              1.0.1-3.1
libXxf86vm                      2007-09-24 X.Org X11 libXxf86vm runtime library                                                                1.0.1-3.1
m2crypto                        2013-05-15 Support for using OpenSSL in python scripts                                                         0.16-9.el5
mesa-libGL                      2013-09-06 Mesa libGL runtime libraries and DRI drivers                                                        6.5.1-7.11.el5_9
mesa-libGLU                     2013-09-06 Mesa libGLU runtime library                                                                         6.5.1-7.11.el5_9
ncurses                         2007-09-24 A terminal handling library                                                                         5.5-24.20060715
netpbm                          2012-09-10 A library for handling different graphics file formats                                              10.35.58-10.el5
newt                            2010-07-13 A development library for text mode user interfaces.                                                0.52.2-15.el5
nfs-utils-lib                   2012-09-10 Network File System Support Library                                                                 1.0.8-7.9.el5
notification-daemon             2008-09-03 Notification Daemon                                                                                 0.3.5-9.el5
nspr                            2014-01-07 Netscape Portable Runtime                                                                           4.10.2-2.el5_10
nss                             2014-01-07 Network Security Services                                                                           3.15.3-4.el5_10
nss_db                          2010-07-13 An NSS library for the Berkeley DB.                                                                 2.2-35.4.el5_5
numactl-devel                   2011-08-30 Development package for building Applications that use numa                                         0.9.8-12.el5_6
openmotif                       2014-01-07 Open Motif runtime libraries and executables.                                                       2.3.1-7.2.el5
opensm-libs                     2013-05-15 Libraries used by opensm and included utilities                                                     3.3.13-1.el5
openssl                         2013-05-15 The OpenSSL toolkit                                                                                 0.9.8e-26.el5_9.1
pango                           2012-03-02 System for layout and rendering of internationalized text                                           1.14.9-8.el5.centos.3
pcre                            2014-01-07 Perl-compatible regular expression library                                                          6.6-9.el5
pcsc-lite-libs                  2010-12-29 PC/SC Lite libraries                                                                                1.4.4-4.el5_5
pkinit-nss                      2009-04-22 PKINIT for MIT Kerberos                                                                             0.7.6-1.el5
python-ldap                     2008-11-13 An object-oriented API to access LDAP directory servers.                                            2.2.0-2.1
qhull                           2010-03-08 General dimension convex hull programs                                                              2003.1-8.el5
readline                        2010-01-02 A library for editing typed command lines.                                                          5.1-3.el5
rhpl                            2012-09-10 Library of python code used by programs in Red Hat Linux                                            0.194.1-2
SDL                             2012-09-10 A cross-platform multimedia library.                                                                1.2.10-9.el5
shared-mime-info                2008-09-03 Shared MIME information database                                                                    0.19-5.el5
slang                           2007-09-24 The shared library for the S-Lang extension language.                                               2.0.6-4.el5
startup-notification            2007-09-24 Library for tracking application startup                                                            0.8-4.1
suitesparse                     2008-06-11 A collection of sparse matrix libraries                                                             3.1.0-1.el5
words                           2009-04-22 A dictionary of English words for the /usr/share/dict directory.                                    3.0-9.1
Xaw3d                           2007-12-12 A version of the MIT Athena widget set for X.                                                       1.5E-10.1
xbae                            2009-01-19 Motif matrix, caption and text input widgets                                                        4.60.4-8.el5
xmlrpc-c                        2012-09-10 A lightweight RPC library based on XML and HTTP                                                     1.16.24-1206.1840.4.el5
xmlrpc-c-client                 2012-09-10 C client libraries for xmlrpc-c                                                                     1.16.24-1206.1840.4.el5
xz-libs                         2012-09-10 Libraries for decoding LZMA compression                                                             4.999.9-0.3.beta.20091007git.el5
zlib                            2013-05-15 The zlib compression and decompression library.                                                     1.2.3-7.el5
bash                            2013-09-06 The GNU Bourne Again shell (bash) version 3.2                                                       3.2-32.el5_9.1
tcsh                            2010-12-29 An enhanced version of csh, the C shell.                                                            6.14-17.el5_5.2
hicolor-icon-theme              2008-02-05 Basic requirement for icon themes                                                                   0.9-2.1
redhat-menus                    2009-04-22 Configuration and data files for the desktop menus                                                  6.7.8-3.el5
vnc                             2011-08-30 A remote display system.                                                                            4.1.2-14.el5_6.6
bitstream-vera-fonts            2010-01-02 Bitstream Vera Fonts                                                                                1.10-7
imake                           2008-09-18 imake source code configuration and build system                                                    1.0.2-3
liberation-fonts                2012-09-10 Fonts to replace commonly used Microsoft Windows Fonts                                              1.0-1.el5
urw-fonts                       2008-04-09 Free versions of the 35 standard PostScript fonts.                                                  2.3-6.1.1
vnc-server                      2011-08-30 A VNC server.                                                                                       4.1.2-14.el5_6.6
xorg-x11-apps                   2008-05-07 X.Org X11 applications                                                                              7.1-4.0.1.el5
xorg-x11-font-utils             2011-08-30 X.Org X11 font utilities                                                                            7.1-3
xorg-x11-fonts-100dpi           2009-02-12 A set of 100dpi resolution fonts for the X Window System.                                           7.1-2.1.el5
xorg-x11-fonts-base             2009-03-12 Base fonts required by the X Window System.                                                         7.1-2.1.el5
xorg-x11-fonts-ISO8859-1-100dpi 2010-01-15 A set of 100dpi ISO-8859-1 fonts for X.                                                             7.1-2.1.el5
xorg-x11-fonts-ISO8859-1-75dpi  2007-12-12 A set of 75dpi ISO-8859-1 fonts for X.                                                              7.1-2.1.el5
xorg-x11-server-utils           2011-08-30 X.Org X11 X server utilities                                                                        7.1-5.el5_6.2
xorg-x11-utils                  2008-02-18 X.Org X11 X client utilities                                                                        7.1-2.fc6
xorg-x11-xauth                  2007-09-24 X.Org X11 X authority utilities                                                                     1.0.1-2.1
xterm                           2010-01-02 xterm terminal emulator for the X Window System                                                     215-8.el5_4.1
clusterit                       2009-08-28 clusterit is a collection of tools for distributed computing.                                       2.5-1
jpackage-utils                  2013-05-15 JPackage utilities                                                                                  1.7.3-1jpp.3.el5
lustre-client                   2013-05-15 Lustre File System                                                                                  1.8.9-wc1_2.6.18_348.1.1.el5

Key to columns

• Name: Leads to the package descriptions below.
• Date: Install date
• Summary: A one-line description.
• Versions: The version shown in bold is the default.






|--------------------------- # Descriptions


|--------------------------- ## None


|--------------------------- ### cpio

• 2.6-26.el5


|--------------------------- ### dump

• 0.4b41-6.el5


|--------------------------- ### pax

• 3.4-2.el5_4


|--------------------------- ### rmt

• 0.4b41-6.el5


|--------------------------- ### tar

• 1.15.1-32.el5_8


|--------------------------- ### unzip

• 5.52-3.el5


|--------------------------- ### zip

• 2.31-2.el5


|--------------------------- ## None


|--------------------------- ### mgetty

• 1.1.33-9.fc6


|--------------------------- ## None


|--------------------------- ### mysql

• 5.0.95-5.el5_9


|--------------------------- ### postgresql-libs

• 8.1.23-6.el5_8


|--------------------------- ### sqlite

• 3.3.6-7


|--------------------------- ## None


|--------------------------- ### emacs

• 21.4-24.el5


|--------------------------- ### emacs-common

• 21.4-24.el5


|--------------------------- ### nano

• 1.3.12-1.1


|--------------------------- ### nedit

• 5.5-16.el5, 5.5-21.el5


|--------------------------- ### vim-common

• 7.0.109-7.2.el5


|--------------------------- ### vim-enhanced

• 7.0.109-7.2.el5


|--------------------------- ### vim-minimal

• 7.0.109-7.2.el5


|--------------------------- ## None


|--------------------------- ### bc

• 1.06-21


|--------------------------- ### gnuplot

• 4.0.0-14.el5


|--------------------------- ### grace

• 5.1.22-2.el5


|--------------------------- ### libxc

• 2.0.1-1.el5


|--------------------------- ### netcdf

• 3.6.3-1.el5

• Self-Describing: A NetCDF file includes information about the data it contains.
• Network-transparent: A NetCDF file is represented in a form that can be accessed by computers with different ways of storing integers, characters, and floating-point numbers.
• Direct-access: A small subset of a large dataset may be accessed efficiently, without first reading through all the preceding data.
• Appendable: Data can be appended to a NetCDF dataset along one dimension without copying the dataset or redefining its structure. The structure of a NetCDF dataset can be changed, though this sometimes causes the dataset to be copied.
• Sharable: One writer and multiple readers may simultaneously access the same NetCDF file.


|--------------------------- ### octave

• 3.0.5-1.el5


|--------------------------- ### pymol

• 1.1-14.20081015svn3468.el5


|--------------------------- ### R

• 2.15.2-1.el5


|--------------------------- ### R-core

• 2.15.2-1.el5


|--------------------------- ### R-devel

• 2.15.2-1.el5


|--------------------------- ## None


|--------------------------- ### bzip2

• 1.0.3-6.el5_5


|--------------------------- ### file

• 4.17-28


|--------------------------- ### findutils

• 4.2.27-6.el5


|--------------------------- ### gzip

• 1.3.5-13.el5.centos


|--------------------------- ### openbabel

• 2.1.1-1.fc8


|--------------------------- ### pbzip2

• 1.1.1-1.el5


|--------------------------- ### pigz

• 2.2.5-1.el5


|--------------------------- ### tree

• 1.5.0-4


|--------------------------- ### xz

• 4.999.9-0.3.beta.20091007git.el5


|--------------------------- ## None


|--------------------------- ### curl

• 7.15.5-17.el5_9


|--------------------------- ### finger

• 0.17-33


|--------------------------- ### firefox

• 24.2.0-1.0.1.el5.centos


|--------------------------- ### ftp

• 0.17-38.el5


|--------------------------- ### ganglia

• 3.0.7-2


|--------------------------- ### ganglia-gmond

• 3.0.7-2


|--------------------------- ### htmlview

• 4.0.0-2.el5


|--------------------------- ### jwhois

• 3.2.3-12.el5


|--------------------------- ### lftp

• 3.7.11-8.el5


|--------------------------- ### lynx

• 2.8.5-28.1.el5_2.1


|--------------------------- ### mailx

• 8.1.1-44.2.2


|--------------------------- ### mtr

• 0.71-3.1


|--------------------------- ### mutt

• 1.4.2.2-6.el5


|--------------------------- ### nc

• 1.84-10.fc6


|--------------------------- ### openldap-clients

• 2.3.43-25.el5_8.1


|--------------------------- ### openssh

• 4.3p2-82.el5


|--------------------------- ### openssh-clients

• 4.3p2-82.el5


|--------------------------- ### rsync

• 3.0.6-4.el5_7.1


|--------------------------- ### stunnel

• 4.15-2.el5.1


|--------------------------- ### talk

• 0.17-31.el5


|--------------------------- ### tcpdump

• 3.9.4-15.el5


|--------------------------- ### telnet

• 0.17-41.el5


|--------------------------- ### traceroute

• 2.0.1-6.el5


|--------------------------- ### wget

• 1.11.4-3.el5_8.2


|--------------------------- ### xulrunner

• 17.0.10-1.el5_10


|--------------------------- ## None


|--------------------------- ### ImageMagick

• 6.2.8.0-15.el5_8


|--------------------------- ### netpbm-progs

• 10.35.58-10.el5


|--------------------------- ### transfig

• 3.2.4-16


|--------------------------- ### xfig

• 3.2.4-21.3.el5


|--------------------------- ## None


|--------------------------- ### lcms

• 1.18-0.1.beta1.el5_3.2


|--------------------------- ## None


|--------------------------- ### a2ps

• 4.13b-57.2.el5


|--------------------------- ### evince

• 0.6.0-17.el5


|--------------------------- ### ghostscript

• 8.70-15.el5_9.3


|--------------------------- ### ghostscript-fonts

• 5.50-13.1.1


|--------------------------- ### groff

• 1.18.1.1-13.el5


|--------------------------- ### gv

• 3.7.1-1.el5


|--------------------------- ### latex2html

• 2002.2.1-6


|--------------------------- ### neon

• 0.25.5-10.el5_4.1


|--------------------------- ### paps

• 0.6.6-20.el5


|--------------------------- ### psutils

• 1.17-26.1


|--------------------------- ### t1lib

• 5.1.1-9.el5


|--------------------------- ### tetex

• 3.0-33.15.el5_8.1


|--------------------------- ### tetex-dvips

• 3.0-33.15.el5_8.1


|--------------------------- ### tetex-fonts

• 3.0-33.15.el5_8.1


|--------------------------- ### tetex-latex

• 3.0-33.15.el5_8.1


|--------------------------- ### texinfo

• 4.8-14.el5


|--------------------------- ### texinfo-tex

• 4.8-14.el5


|--------------------------- ### xpdf

• 3.03-8.el5.1


|--------------------------- ## None


|--------------------------- ### ksh

• 20100621-18.el5


|--------------------------- ## None


|--------------------------- ### bind-libs

• 9.3.6-20.P1.el5_8.6


|--------------------------- ### bind-utils

• 9.3.6-20.P1.el5_8.6


|--------------------------- ### bluez-gnome

• 0.5-5.fc6


|--------------------------- ### bluez-utils

• 3.7-2.2.el5.centos

1. hcitool
2. hciattach
3. hciconfig
4. hcid
5. l2ping
6. start scripts (CentOS)
7. pcmcia configuration files


|--------------------------- ### None

• 1.03a-6.el5


|--------------------------- ### collectl

• 3.6.9-1.el5


|--------------------------- ### conman

• 0.1.9.2-8.el5

• mapping symbolic names to console devices
• logging all output from a console device to file
• supporting monitor (R/O), interactive (R/W), and broadcast (W/O) modes of console access
• allowing clients to join or steal console "write" privileges
• executing Expect scripts across multiple consoles in parallel


|--------------------------- ### cryptsetup-luks

• 1.0.3-8.el5


|--------------------------- ### dialog

• 1.0.20051107-1.2.2


|--------------------------- ### dosfstools

• 2.11-9.el5


|--------------------------- ### ethtool

• 6-4.el5


|--------------------------- ### fbset

• 2.1-22


|--------------------------- ### gnome-mount

• 0.5-3.el5


|--------------------------- ### gnupg

• 1.4.5-18.el5_10


|--------------------------- ### hdparm

• 6.6-2


|--------------------------- ### hwloc

• 1.1-0.el5


|--------------------------- ### iproute

• 2.6.18-15.el5


|--------------------------- ### irda-utils

• 0.9.17-2.fc6


|--------------------------- ### kudzu

• 1.2.57.1.26-7.el5.centos


|--------------------------- ### lm_sensors

• 2.10.7-9.el5


|--------------------------- ### logwatch

• 7.3-10.el5


|--------------------------- ### mlocate

• 0.15-1.el5.2


|--------------------------- ### mtools

• 3.9.10-2.fc6


|--------------------------- ### OpenIPMI-tools

• 2.0.16-16.el5


|--------------------------- ### parted

• 1.8.1-30.el5


|--------------------------- ### pciutils

• 3.1.7-5.el5


|--------------------------- ### procps

• 3.2.7-26.el5


|--------------------------- ### psacct

• 6.3.2-44.el5


|--------------------------- ### psmisc

• 22.2-11


|--------------------------- ### python-libs

• 2.4.3-56.el5


|--------------------------- ### rdate

• 1.4-8.el5


|--------------------------- ### rdist

• 6.1.5-44


|--------------------------- ### rsnapshot

• 1.3.1-12.el5


|--------------------------- ### screen

• 4.0.3-4.el5


|--------------------------- ### setserial

• 2.17-19.2.2


|--------------------------- ### setuptool

• 1.19.2-1.el5.centos


|--------------------------- ### stress

• 1.0.2-1


|--------------------------- ### sudo

• 1.7.2p1-28.el5


|--------------------------- ### symlinks

• 1.2-26.el5


|--------------------------- ### syslinux

• 4.02-7.2.el5


|--------------------------- ### system-config-network-tui

• 1.3.99.21-1.el5


|--------------------------- ### system-switch-mail

• 0.5.25-13.el5


|--------------------------- ### time

• 1.7-27.2.2


|--------------------------- ### torque

• 4.1.7-2carbon


|--------------------------- ### torque-client

• 4.1.7-2carbon


|--------------------------- ### torque-devel

• 4.1.7-2carbon


|--------------------------- ### ttmkfdir

• 3.0.9-23.el5


|--------------------------- ### usbutils

• 0.71-2.1


|--------------------------- ### usermode

• 1.88-3.el5.2


|--------------------------- ### which

• 2.16-7


|--------------------------- ## None


|--------------------------- ### aspell

• 0.60.3-13


|--------------------------- ### aspell-en

• 6.0-3


|--------------------------- ### diffutils

• 2.8.1-16.el5


|--------------------------- ### docbook-dtds

• 1.0-30.1


|--------------------------- ### dos2unix

• 3.1-27.2.el5


|--------------------------- ### ed

• 0.2-39.el5_2


|--------------------------- ### gawk

• 3.1.5-16.el5


|--------------------------- ### grep

• 2.5.1-55.el5


|--------------------------- ### less

• 436-9.el5


|--------------------------- ### m4

• 1.4.5-3.el5.1


|--------------------------- ### openjade

• 1.3.2-27


|--------------------------- ### opensp

• 1.5.2-4


|--------------------------- ### poppler-utils

• 0.5.4-19.el5_9.2


|--------------------------- ### sed

• 4.1.5-8.el5


|--------------------------- ### sgml-common

• 0.6.3-18


|--------------------------- ### unix2dos

• 2.2-26.2.3.el5


|--------------------------- ### xml-common

• 0.6.3-18


|--------------------------- ## None


|--------------------------- ### crash

• 5.1.8-2.el5.centos


|--------------------------- ### gdb

• 7.0.1-45.el5.centos


|--------------------------- ### lsof

• 4.78-6


|--------------------------- ### strace

• 4.5.18-18.el5


|--------------------------- ### valgrind

• 3.5.0-5.el5


|--------------------------- ## None


|--------------------------- ### lustre-client-modules

• 1.8.9-wc1_2.6.18_348.1.1.el5


|--------------------------- ### lustre-source

• 1.8.3-2.6.18_164.11.1.el5_lustre.1.8.3


|--------------------------- ## None


|--------------------------- ### cpp

• 4.1.2-54.el5


|--------------------------- ### expect

• 5.43.0-8.el5


|--------------------------- ### gcc

• 4.1.2-54.el5


|--------------------------- ### None

• 4.1.2-54.el5


|--------------------------- ### gcc-gfortran

• 4.1.2-54.el5


|--------------------------- ### guile

• 1.8.0-8.20060831cvs


|--------------------------- ### numpy

• 1.2.1-2.el5


|--------------------------- ### perl

• 5.8.8-41.el5


|--------------------------- ### perl-suidperl

• 5.8.8-41.el5


|--------------------------- ### pexpect

• 2.3-3.el5


|--------------------------- ### pycairo

• 1.2.0-1.1


|--------------------------- ### pygobject2

• 2.12.1-5.el5


|--------------------------- ### pygobject2-devel

• 2.12.1-5.el5


|--------------------------- ### pygobject2-doc

• 2.12.1-5.el5


|--------------------------- ### pygtk2

• 2.10.1-12.el5


|--------------------------- ### pygtk2-codegen

• 2.10.1-12.el5


|--------------------------- ### pygtk2-devel

• 2.10.1-12.el5


|--------------------------- ### pygtk2-libglade

• 2.10.1-12.el5


|--------------------------- ### python

• 2.4.3-56.el5


|--------------------------- ### python-dateutil

• 1.2-3.el5


|--------------------------- ### python-decoratortools

• 1.7-1.el5


|--------------------------- ### python-docutils

• 0.5-3.el5


|--------------------------- ### python-imaging

• 1.1.5-7.el5


|--------------------------- ### python-nose

• 0.11.3-2.el5


|--------------------------- ### python-numeric

• 23.7-2.2.2.el5_6.1


|--------------------------- ### python-setuptools

• 0.6c7-1.el5


|--------------------------- ### pytz

• 2010h-1.el5


|--------------------------- ### tcl

• 8.4.13-6.el5


|--------------------------- ### tcl-devel

• 8.4.13-6.el5


|--------------------------- ### tclx

• 8.4.0-5.fc6


|--------------------------- ### tclx-devel

• 8.4.0-5.fc6


|--------------------------- ### tix

• 8.4.0-11.fc6


|--------------------------- ### tk

• 8.4.13-5.el5_1.1


|--------------------------- ### tk-devel

• 8.4.13-5.el5_1.1


|--------------------------- ### tkinter

• 2.4.3-56.el5


|--------------------------- ### unifdef

• 1.171-5.fc6


|--------------------------- ## None


|--------------------------- ### atk-devel

• 1.12.2-1.fc6


|--------------------------- ### audit-libs

• 1.8-2.el5


|--------------------------- ### audit-libs-python

• 1.8-2.el5


|--------------------------- ### avahi-compat-libdns_sd

• 0.6.16-10.el5_6


|--------------------------- ### blas

• 3.0-38.el5


|--------------------------- ### blas-devel

• 3.0-38.el5


|--------------------------- ### bzip2-devel

• 1.0.3-6.el5_5


|--------------------------- ### cairo-devel

• 1.2.4-5.el5


|--------------------------- ### curl-devel

• 7.15.5-17.el5_9


|--------------------------- ### dbus-libs

• 1.1.2-21.el5


|--------------------------- ### e2fsprogs-devel

• 1.39-36.el5_9


|--------------------------- ### e2fsprogs-libs

• 1.39-36.el5_9


|--------------------------- ### fftw2-devel

• 2.1.5-15.el5


|--------------------------- ### fftw3-devel

• 3.2.2-3.el5


|--------------------------- ### fontconfig-devel

• 2.4.1-7.el5


|--------------------------- ### freetype-devel

• 2.2.1-32.el5_9.1


|--------------------------- ### gamin

• 0.1.7-10.el5


|--------------------------- ### gamin-python

• 0.1.7-10.el5


|--------------------------- ### gd-devel

• 2.0.33-9.4.el5_4.2


|--------------------------- ### glew-devel

• 1.5.1-3.el5


|--------------------------- ### glib2-devel

• 2.12.3-4.el5_3.1


|--------------------------- ### glibc-devel

• 2.5-118.el5_10.2


|--------------------------- ### glibc-headers

• 2.5-118.el5_10.2


|--------------------------- ### glx-utils

• 6.5.1-7.11.el5_9


|--------------------------- ### gmp-devel

• 4.1.4-10.el5


|--------------------------- ### grace-devel

• 5.1.22-2.el5


|--------------------------- ### gsl-devel

• 1.13-3.el5


|--------------------------- ### gtk2-devel

• 2.10.4-30.el5


|--------------------------- ### guile-devel

• 1.8.0-8.20060831cvs


|--------------------------- ### hdf5-devel

• 1.6.10-1.el5


|--------------------------- ### hwloc-devel

• 1.1-0.el5


|--------------------------- ### itcl

• 3.3-0.7.RC1.el5


|--------------------------- ### itk

• 3.3-0.4.RC1.el5


|--------------------------- ### iwidgets

• 4.0.1-4.el5


|--------------------------- ### krb5-devel

• 1.6.1-70.el5_9.2


|--------------------------- ### lapack

• 3.0-38.el5


|--------------------------- ### lapack-devel

• 3.0-38.el5


|--------------------------- ### libgnomecups

• 0.2.2-9


|--------------------------- ### libICE-devel

• 1.0.1-2.1


|--------------------------- ### libidn-devel

• 0.6.5-1.1


|--------------------------- ### libjpeg-devel

• 6b-38


|--------------------------- ### libnl

• 1.0-0.10.pre5.5


|--------------------------- ### libpcap

• 0.9.4-15.el5


|--------------------------- ### libpng-devel

• 1.2.10-17.el5_8


|--------------------------- ### libRmath

• 2.15.2-1.el5


|--------------------------- ### libRmath-devel

• 2.15.2-1.el5


|--------------------------- ### libselinux-devel

• 1.33.4-5.7.el5


|--------------------------- ### libselinux-python

• 1.33.4-5.7.el5


|--------------------------- ### libselinux-utils

• 1.33.4-5.7.el5


|--------------------------- ### libsepol-devel

• 1.15.2-3.el5


|--------------------------- ### libSM-devel

• 1.0.1-3.1


|--------------------------- ### None

• 4.1.2-54.el5


|--------------------------- ### libsysfs-devel

• 2.1.0-1.el5


|--------------------------- ### libtermcap-devel

• 2.0.8-46.1


|--------------------------- ### libtiff-devel

• 3.8.2-18.el5_8


|--------------------------- ### libX11-devel

• 1.0.3-11.el5_7.1


|--------------------------- ### libXau-devel

• 1.0.1-3.1


|--------------------------- ### libXcursor-devel

• 1.1.7-1.2


|--------------------------- ### libXdmcp-devel

• 1.0.1-2.1


|--------------------------- ### libXext-devel

• 1.0.1-2.1


|--------------------------- ### libXfixes-devel

• 4.0.1-2.1


|--------------------------- ### libXft-devel

• 2.1.10-1.1


|--------------------------- ### libXi-devel

• 1.0.1-4.el5_4


|--------------------------- ### libXinerama-devel

• 1.0.1-2.1


|--------------------------- ### libxml2

• 2.6.26-2.1.21.el5_9.3


|--------------------------- ### libxml2-devel

• 2.6.26-2.1.21.el5_9.3


|--------------------------- ### libxml2-python

• 2.6.26-2.1.21.el5_9.3


|--------------------------- ### libXpm-devel

• 3.5.5-3


|--------------------------- ### libXrandr-devel

• 1.1.1-3.3


|--------------------------- ### libXrender-devel

• 0.9.1-3.1


|--------------------------- ### libxslt

• 1.1.17-4.el5_8.3


|--------------------------- ### libXt-devel

• 1.0.2-3.2.el5


|--------------------------- ### libyaml

• 0.1.2-3.el5


|--------------------------- ### mesa-libGL-devel

• 6.5.1-7.11.el5_9


|--------------------------- ### mesa-libGLU-devel

• 6.5.1-7.11.el5_9


|--------------------------- ### nautilus-extensions

• 2.16.2-10.el5


|--------------------------- ### ncurses-devel

• 5.5-24.20060715

• /usr/include/ncursesw -lncursesw (compile and link against the wide-character, UTF-8, library)


|--------------------------- ### net-snmp-libs

• 5.3.2.2-20.el5


|--------------------------- ### netcdf-devel

• 3.6.3-1.el5


|--------------------------- ### NetworkManager-glib

• 0.7.0-13.el5


|--------------------------- ### octave-devel

• 3.0.5-1.el5


|--------------------------- ### OpenIPMI-libs

• 2.0.16-16.el5


|--------------------------- ### openmpi

• 1.4-7.el5


|--------------------------- ### openmpi-devel

• 1.4-7.el5


|--------------------------- ### openmpi-libs

• 1.4-7.el5


|--------------------------- ### openssl-devel

• 0.9.8e-26.el5_9.1


|--------------------------- ### pam-devel

• 0.99.6.2-12.el5


|--------------------------- ### pango-devel

• 1.14.9-8.el5.centos.3


|--------------------------- ### pcre-devel

• 6.6-9.el5


|--------------------------- ### perl-Compress-Zlib

• 1.42-1.fc6


|--------------------------- ### perl-Convert-ASN1

• 0.20-1.1


|--------------------------- ### perl-Crypt-SSLeay

• 0.51-11.el5


|--------------------------- ### perl-DBI

• 1.52-2.el5


|--------------------------- ### perl-Error

• 0.17010-1.el5


|--------------------------- ### perl-Git

• 1.8.2.1-1.el5


|--------------------------- ### perl-HTML-Parser

• 3.55-1.fc6


|--------------------------- ### perl-HTML-Tagset

• 3.10-2.1.1


|--------------------------- ### perl-IO-Interface

• 1.03-1.el5.2


|--------------------------- ### perl-IO-Socket-SSL

• 1.01-2.el5


|--------------------------- ### perl-IO-Tty

• 1.07-2.el5.1


|--------------------------- ### perl-LDAP

• 0.33-4.el5_8


|--------------------------- ### perl-libwww-perl

• 5.805-1.1.1


|--------------------------- ### perl-Net-SSLeay

• 1.30-4.fc6


|--------------------------- ### perl-String-CRC32

• 1.4-2.fc6


|--------------------------- ### perl-TermReadKey

• 2.30-4.el5


|--------------------------- ### perl-Time-Piece

• 1.09-2.el5


|--------------------------- ### perl-URI

• 1.35-3


|--------------------------- ### perl-XML-NamespaceSupport

• 1.09-1.2.1


|--------------------------- ### perl-XML-SAX

• 0.14-13.el5


|--------------------------- ### poppler

• 0.5.4-19.el5_9.2


|--------------------------- ### popt

• 1.10.2.3-34.el5


|--------------------------- ### pycairo-devel

• 1.2.0-1.1


|--------------------------- ### pyOpenSSL

• 0.7-6.el5

• SSL.Connection objects, wrapping the methods of Python's portable sockets
• Callbacks written in Python
• Extensive error-handling mechanism, mirroring OpenSSL's error codes ... and much more ;)


|--------------------------- ### python-ctypes

• 1.0.2-3.el5


|--------------------------- ### python-devel

• 2.4.3-56.el5


|--------------------------- ### python-elementtree

• 1.2.6-5


|--------------------------- ### python-hashlib

• 20081119-4.el5


|--------------------------- ### python-iniparse

• 0.2.4-1.el5


|--------------------------- ### python-lxml

• 2.0.11-2.el5


|--------------------------- ### python-matplotlib

• 0.99.1.2-1.el5


|--------------------------- ### python-matplotlib-tk

• 0.99.1.2-1.el5


|--------------------------- ### python-pmw

• 1.3.2-5.el5


|--------------------------- ### python-sqlite

• 1.1.7-1.2.1


|--------------------------- ### python-urlgrabber

• 3.1.0-6.el5


|--------------------------- ### PyYAML

• 3.08-4.el5


|--------------------------- ### qhull-devel

• 2003.1-8.el5


|--------------------------- ### readline-devel

• 5.1-3.el5


|--------------------------- ### rpm-libs

• 4.4.2.3-34.el5


|--------------------------- ### rpm-python

• 4.4.2.3-34.el5


|--------------------------- ### sos

• 1.7-9.66.el5.centos


|--------------------------- ### sqlite-devel

• 3.3.6-7


|--------------------------- ### yum-metadata-parser

• 1.1.2-4.el5


|--------------------------- ### zlib-devel

• 1.2.3-7.el5


|--------------------------- ## None


|--------------------------- ### checkpolicy

• 1.33.1-6.el5


|--------------------------- ### kernel-headers

• 2.6.18-371.3.1.el5


|--------------------------- ### opensm-devel

• 3.3.13-1.el5


|--------------------------- ### redhat-rpm-config

• 8.0.45-32.el5.centos


|--------------------------- ### xorg-x11-proto-devel

• 7.1-13.el5


|--------------------------- ## None


|--------------------------- ### autoconf

• 2.59-12


|--------------------------- ### automake

• 1.9.6-2.3.el5


|--------------------------- ### binutils

• 2.17.50.0.6-26.el5


|--------------------------- ### cmake

• 2.6.4-5.el5.4


|--------------------------- ### ctags

• 5.6-1.1


|--------------------------- ### cvs

• 1.11.22-11.el5_8.1


|--------------------------- ### desktop-file-utils

• 0.10-7


|--------------------------- ### doxygen

• 1.4.7-2


|--------------------------- ### elfutils

• 0.137-3.el5


|--------------------------- ### elfutils-libelf

• 0.137-3.el5


|--------------------------- ### elfutils-libs

• 0.137-3.el5


|--------------------------- ### flex

• 2.5.4a-41.fc6


|--------------------------- ### gettext

• 0.17-1.el5


|--------------------------- ### git

• 1.8.2.1-1.el5


|--------------------------- ### git-gui

• 1.8.2.1-1.el5


|--------------------------- ### gitk

• 1.8.2.1-1.el5


|--------------------------- ### jdk

• 1.6.0_27-fcs


|--------------------------- ### jre

• 1.6.0_27-fcs


|--------------------------- ### libtool

• 1.5.22-7.el5_4


|--------------------------- ### make

• 3.81-3.el5


|--------------------------- ### mock

• 1.0.37-1.el5


|--------------------------- ### patch

• 2.5.4-31.el5


|--------------------------- ### pkgconfig

• 0.21-2.el5


|--------------------------- ### python-tools

• 2.4.3-56.el5


|--------------------------- ### rcs

• 5.7-30.1


|--------------------------- ### rpm-build

• 4.4.2.3-34.el5


|--------------------------- ### subversion

• 1.6.11-11.el5_9


|--------------------------- ### sysfsutils

• 2.1.0-1.el5


|--------------------------- ### yum-utils

• 1.1.16-21.el5.centos


|--------------------------- ## Documentation


|--------------------------- ### Deployment_Guide-en-US

• 5.8-1.el5.centos


|--------------------------- ### kernel-doc

• 2.6.18-371.3.1.el5


|--------------------------- ### man-pages

• 2.39-20.el5


|--------------------------- ### specspo

• 13-4.el5.centos


|--------------------------- ## Public Keys


|--------------------------- ### gpg-pubkey

• e8562897-459f07a4

• 217521f6-45e8a532

• 37017186-45761324


|--------------------------- ## None


|--------------------------- ### acl

• 2.2.39-8.el5


|--------------------------- ### amtu

• 1.0.6-2.el5


|--------------------------- ### anacron

• 2.3-45.el5.centos


|--------------------------- ### attr

• 2.4.32-1.1


|--------------------------- ### authconfig

• 5.3.21-7.el5


|--------------------------- ### avahi

• 0.6.16-10.el5_6


|--------------------------- ### avahi-glib

• 0.6.16-10.el5_6


|--------------------------- ### basesystem

• 8.0-5.1.1.el5.centos


|--------------------------- ### centos-release

• 5-10.el5.centos


|--------------------------- ### centos-release-notes

• 5.10-0


|--------------------------- ### chkconfig

• 1.3.30.2-2.el5


|--------------------------- ### chkfontpath

• 1.10.1-1.1


|--------------------------- ### coreutils

• 5.97-34.el5_8.1


|--------------------------- ### cpuspeed

• 1.2.1-10.el5


|--------------------------- ### createrepo

• 0.4.11-3.el5


|--------------------------- ### crontabs

• 1.10-11.el5


|--------------------------- ### device-mapper

• 1.02.67-2.el5


|--------------------------- ### device-mapper-event

• 1.02.67-2.el5


|--------------------------- ### device-mapper-multipath

• 0.4.7-59.el5

• multipath : Scan the system for multipath devices and assemble them.
• multipathd : Detects when paths fail and execs multipath to update things.


|--------------------------- ### dhclient

• 3.0.5-33.el5_9


|--------------------------- ### dhcpv6-client

• 1.0.10-20.el5


|--------------------------- ### dmidecode

• 2.11-1.el5


|--------------------------- ### dmraid

• 1.0.0.rc13-65.el5


|--------------------------- ### dmraid-events

• 1.0.0.rc13-65.el5


|--------------------------- ### e2fsprogs

• 1.39-36.el5_9


|--------------------------- ### eject

• 2.1.5-4.2.el5


|--------------------------- ### environment-modules

• 3.2.6-4.el5


|--------------------------- ### filesystem

• 2.4.0-3.el5.centos


|--------------------------- ### firstboot-tui

• 1.4.27.9-1.el5.centos


|--------------------------- ### GConf2

• 2.14.0-9.el5


|--------------------------- ### glibc-common

• 2.5-118.el5_10.2


|--------------------------- ### grub

• 0.97-13.11.el5_10.1


|--------------------------- ### hmaccalc

• 0.9.6-4.el5


|--------------------------- ### hwdata

• 0.213.28-3.el5


|--------------------------- ### ifd-egate

• 0.05-17.el5


|--------------------------- ### info

• 4.8-14.el5


|--------------------------- ### initscripts

• 8.45.44-3.el5.centos


|--------------------------- ### ipsec-tools

• 0.6.5-14.el5_8.5

• setkey, a program to directly manipulate policies and SAs
• racoon, an IKEv1 keying daemon


|--------------------------- ### iptables

• 1.3.5-9.2.el5_8


|--------------------------- ### iptables-ipv6

• 1.3.5-9.2.el5_8


|--------------------------- ### iptstate

• 1.4-2.el5

1. Top-like realtime state table information
2. Sorting by any field
3. Reversible sorting
4. Single display of state table
5. Customizable refresh rate
6. Open Source (specifically I'm using the zlib license)


|--------------------------- ### irqbalance

• 0.55-15.el5


|--------------------------- ### kbd

• 1.12-22.el5


|--------------------------- ### keyutils-libs

• 1.2-1.el5


|--------------------------- ### keyutils-libs-devel

• 1.2-1.el5


|--------------------------- ### kpartx

• 0.4.7-59.el5


|--------------------------- ### krb5-workstation

• 1.6.1-70.el5_9.2


|--------------------------- ### libgnomeprint22

• 2.12.1-10.el5


|--------------------------- ### libuser

• 0.54.7-3.el5


|--------------------------- ### logrotate

• 3.7.4-14


|--------------------------- ### lvm2

• 2.02.88-12.el5


|--------------------------- ### mailcap

• 2.1.23-1.fc6


|--------------------------- ### MAKEDEV

• 3.23-1.2


|--------------------------- ### man

• 1.6d-3.el5


|--------------------------- ### mcelog

• 0.9pre-1.32.el5


|--------------------------- ### mdadm

• 2.6.9-5.el5


|--------------------------- ### microcode_ctl

• 1.17-5.el5


|--------------------------- ### mingetty

• 1.07-5.2.2


|--------------------------- ### mkbootdisk

• 1.5.3-2.1


|--------------------------- ### mkinitrd

• 5.1.19.6-81.el5_10


|--------------------------- ### mktemp

• 1.5-24.el5


|--------------------------- ### mpi-selector

• 1.0.2-1.el5


|--------------------------- ### nash

• 5.1.19.6-81.el5_10


|--------------------------- ### net-tools

• 1.60-83.el5_10


|--------------------------- ### NetworkManager

• 0.7.0-13.el5


|--------------------------- ### nss-tools

• 3.15.3-4.el5_10


|--------------------------- ### nss_ldap

• 253-51.el5_9.1


|--------------------------- ### ntsysv

• 1.3.30.2-2.el5


|--------------------------- ### numactl

• 0.9.8-12.el5_6


|--------------------------- ### openib

• 1.5.4.1-4.el5


|--------------------------- ### OpenIPMI

• 2.0.16-16.el5


|--------------------------- ### pam

• 0.99.6.2-12.el5


|--------------------------- ### pam_ccreds

• 3-5


|--------------------------- ### pam_krb5

• 2.2.14-22.el5


|--------------------------- ### pam_passwdqc

• 1.0.2-1.2.2


|--------------------------- ### pam_pkcs11

• 0.5.3-26.el5

• pkcs11_eventmgr: Generate actions on card insert/removal/timeout events
• pklogin_finder: Get the loginname that maps to a certificate
• pkcs11_inspect: Inspect the contents of a certificate


|--------------------------- ### pam_smb

• 1.1.7-7.2.1


|--------------------------- ### passwd

• 0.73-2


|--------------------------- ### pcmciautils

• 014-5


|--------------------------- ### pinfo

• 0.6.9-1.fc6


|--------------------------- ### pm-utils

• 0.99.3-14.el5


|--------------------------- ### policycoreutils

• 1.33.12-14.13.el5


|--------------------------- ### prelink

• 0.4.0-2.el5


|--------------------------- ### quota

• 3.13-8.el5


|--------------------------- ### readahead

• 1.3-8.el5


|--------------------------- ### redhat-logos

• 4.9.99-11.el5.centos


|--------------------------- ### redhat-lsb

• 4.0-2.1.4.el5


|--------------------------- ### rhel-instnum

• 1.0.9-1.el5


|--------------------------- ### rng-utils

• 2.0-5.el5


|--------------------------- ### rootfiles

• 8.1-1.1.1


|--------------------------- ### rpm

• 4.4.2.3-34.el5


|--------------------------- ### scrollkeeper

• 0.3.14-9.el5


|--------------------------- ### selinux-policy

• 2.4.6-346.el5


|--------------------------- ### selinux-policy-targeted

• 2.4.6-346.el5


|--------------------------- ### setools

• 3.0-3.el5


|--------------------------- ### setup

• 2.5.58-9.el5


|--------------------------- ### sgpio

• 1.2.0_10-2.el5


|--------------------------- ### shadow-utils

• 4.0.17-21.el5


|--------------------------- ### smartmontools

• 5.42-2.el5


|--------------------------- ### system-config-securitylevel-tui

• 1.6.29.1-6.el5


|--------------------------- ### SysVinit

• 2.86-17.el5


|--------------------------- ### termcap

• 5.5-1.20060701.1


|--------------------------- ### tmpwatch

• 2.9.7-1.1.el5.5


|--------------------------- ### tzdata

• 2013i-1.el5


|--------------------------- ### tzdata-java

• 2013i-1.el5


|--------------------------- ### udev

• 095-14.29.el5


|--------------------------- ### util-linux

• 2.13-0.59.el5_8


|--------------------------- ### vconfig

• 1.9-3


|--------------------------- ### vixie-cron

• 4.1-81.el5


|--------------------------- ### wireless-tools

• 28-2.el5


|--------------------------- ### wpa_supplicant

• 0.5.10-10.el5


|--------------------------- ### xdg-utils

• 1.0.2-4.el5

• Third party software developers can rely on these xdg-utils for all of their simple integration needs.
• Developers of desktop environments can make sure that their environments are well supported
• Distribution vendors can provide custom versions of these utilities

1. xdg-desktop-menu Install desktop menu items
2. xdg-desktop-icon Install icons to the desktop
3. xdg-icon-resource Install icon resources
4. xdg-mime Query information about file type handling and install descriptions for new file types
5. xdg-open Open a file or URL in the user's preferred application
6. xdg-email Send mail using the user's preferred e-mail composer
7. xdg-screensaver Control the screensaver


|--------------------------- ### xorg-x11-filesystem

• 7.1-2.fc6


|--------------------------- ### yp-tools

• 2.9-2.el5


|--------------------------- ### yum

• 3.2.22-40.el5.centos


|--------------------------- ### yum-downloadonly

• 1.1.16-21.el5.centos


|--------------------------- ### yum-fastestmirror

• 1.1.16-21.el5.centos


|--------------------------- ### yum-priorities

• 1.1.16-21.el5.centos


|--------------------------- ### yum-updatesd

• 0.9-5.el5


|--------------------------- ## None


|--------------------------- ### acpid

• 1.0.4-12.el5


|--------------------------- ### at

• 3.1.8-84.el5


|--------------------------- ### audit

• 1.8-2.el5


|--------------------------- ### autofs

• 5.0.1-0.rc2.183.el5


|--------------------------- ### cups

• 1.3.7-30.el5_9.3


|--------------------------- ### dhcdbd

• 2.2-2.el5


|--------------------------- ### dnsmasq

• 2.45-1.1.el5_3


|--------------------------- ### esound

• 0.2.36-4


|--------------------------- ### gpm

• 1.20.1-74.1


|--------------------------- ### iputils

• 20020927-46.el5


|--------------------------- ### iscsi-initiator-utils

• 6.2.0.872-16.el5


|--------------------------- ### mcstrans

• 0.2.11-3.el5


|--------------------------- ### nfs-utils

• 1.0.9-70.el5


|--------------------------- ### nscd

• 2.5-118.el5_10.2


|--------------------------- ### ntp

• 4.2.2p1-17.el5.centos


|--------------------------- ### openldap

• 2.3.43-25.el5_8.1


|--------------------------- ### openssh-server

• 4.3p2-82.el5


|--------------------------- ### ORBit2

• 2.14.3-5.el5


|--------------------------- ### pcsc-lite

• 1.4.4-4.el5_5


|--------------------------- ### portmap

• 4.0-65.2.2.1


|--------------------------- ### postfix

• 2.3.3-6.el5


|--------------------------- ### ppp

• 2.4.4-2.el5


|--------------------------- ### rp-pppoe

• 3.5-33.el5


|--------------------------- ### rsh-server

• 0.17-40.el5_7.1


|--------------------------- ### sysklogd

• 1.4.1-46.el5


|--------------------------- ### tcp_wrappers

• 7.6-40.7.el5


|--------------------------- ### xinetd

• 2.3.14-20.el5_10


|--------------------------- ### xorg-x11-xfs

• 1.0.2-5.el5_6.1


|--------------------------- ### ypbind

• 1.19-12.el5_6.1


|--------------------------- ## None


|--------------------------- ### kernel

• 2.6.18-348.1.1.el5, 2.6.18-371.3.1.el5


|--------------------------- ### kernel-devel

• 2.6.18-371.3.1.el5


|--------------------------- ### module-init-tools

• 3.3-0.pre3.1.63.el5


|--------------------------- ### setarch

• 2.0-1.1


|--------------------------- ## None


|--------------------------- ### agg

• 2.4-2.1


|--------------------------- ### alsa-lib

• 1.0.17-1.el5


|--------------------------- ### apr

• 1.2.7-11.el5_6.5


|--------------------------- ### apr-util

• 1.2.7-11.el5_5.2


|--------------------------- ### atk

• 1.12.2-1.fc6


|--------------------------- ### atlas

• 3.8.3-1.el5


|--------------------------- ### audiofile

• 0.2.6-5


|--------------------------- ### beecrypt

• 4.1.2-10.1.1


|--------------------------- ### bluez-libs

• 3.7-1.1


|--------------------------- ### boost

• 1.33.1-16.el5_9


|--------------------------- ### boost-devel

• 1.33.1-16.el5_9


|--------------------------- ### bzip2-libs

• 1.0.3-6.el5_5


|--------------------------- ### cairo

• 1.2.4-5.el5


|--------------------------- ### ccid

• 1.3.8-2.el5


|--------------------------- ### CodeMeter64

• 4.0-500


|--------------------------- ### compat-dapl

• 2.0.34-1.el5


|--------------------------- ### compat-dapl-devel

• 2.0.34-1.el5


|--------------------------- ### compat-db

• 4.2.52-5.1


|--------------------------- ### compat-libf2c-34

• 3.4.6-4.1


|--------------------------- ### None

• 3.2.3-61


|--------------------------- ### coolkey

• 1.1.0-16.1.el5


|--------------------------- ### cracklib

• 2.8.9-3.3


|--------------------------- ### cracklib-dicts

• 2.8.9-3.3


|--------------------------- ### cups-libs

• 1.3.7-30.el5_9.3


|--------------------------- ### cyrus-sasl

• 2.1.22-7.el5_8.1


|--------------------------- ### cyrus-sasl-lib

• 2.1.22-7.el5_8.1


|--------------------------- ### cyrus-sasl-plain

• 2.1.22-7.el5_8.1


|--------------------------- ### dapl

• 2.0.34-1.el5


|--------------------------- ### dapl-devel

• 2.0.34-1.el5


|--------------------------- ### db4

• 4.3.29-10.el5_5.2


|--------------------------- ### dbus

• 1.1.2-21.el5


|--------------------------- ### dbus-glib

• 0.73-11.el5_9


|--------------------------- ### dbus-python

• 0.70-9.el5_4


|--------------------------- ### expat

• 1.95.8-11.el5_8


|--------------------------- ### fftw2

• 2.1.5-15.el5


|--------------------------- ### fftw3

• 3.2.2-3.el5


|--------------------------- ### fipscheck

• 1.2.0-1.el5


|--------------------------- ### fipscheck-lib

• 1.2.0-1.el5


|--------------------------- ### fontconfig

• 2.4.1-7.el5


|--------------------------- ### freeglut

• 2.4.0-7.1.el5


|--------------------------- ### freetype

• 2.2.1-32.el5_9.1


|--------------------------- ### gd

• 2.0.33-9.4.el5_4.2


|--------------------------- ### gdbm

• 1.8.0-28.el5


|--------------------------- ### giflib

• 4.1.3-7.3.3.el5


|--------------------------- ### glew

• 1.5.1-3.el5


|--------------------------- ### glib2

• 2.12.3-4.el5_3.1


|--------------------------- ### glibc

• 2.5-118.el5_10.2


|--------------------------- ### glpk

• 4.20-2.el5

1. Revised simplex method.
2. Primal-dual interior point method.
3. Branch-and-bound method.
4. Translator for GNU MathProg.
5. Application program interface (API).
6. Stand-alone LP/MIP solver.


|--------------------------- ### gmp

• 4.1.4-10.el5


|--------------------------- ### gnome-keyring

• 0.6.0-1.fc6


|--------------------------- ### gnome-mime-data

• 2.4.2-3.1


|--------------------------- ### gnome-vfs2

• 2.16.2-12.el5_9


|--------------------------- ### gnutls

• 1.4.1-10.el5_9.2


|--------------------------- ### gsl

• 1.13-3.el5


|--------------------------- ### gtk2

• 2.10.4-30.el5


|--------------------------- ### hal

• 0.5.8.1-64.el5


|--------------------------- ### hdf5

• 1.6.10-1.el5


|--------------------------- ### hesiod

• 3.1.0-8


|--------------------------- ### inchi

• 1.0.1-8.fc8


|--------------------------- ### infiniband-diags

• 1.5.12-2.el5


|--------------------------- ### krb5-libs

• 1.6.1-70.el5_9.2


|--------------------------- ### libacl

• 2.2.39-8.el5


|--------------------------- ### libaio

• 0.3.106-5


|--------------------------- ### libart_lgpl

• 2.3.17-4


|--------------------------- ### libattr

• 2.4.32-1.1


|--------------------------- ### libbonobo

• 2.16.0-1.1.el5_5.1


|--------------------------- ### libbonoboui

• 2.16.0-1.fc6


|--------------------------- ### libcap

• 1.10-26


|--------------------------- ### libcroco

• 0.6.1-2.1


|--------------------------- ### libdaemon

• 0.10-5.el5

• A wrapper around fork() which does the correct daemonization procedure of a process
• A wrapper around syslog() for simpler and compatible log output to Syslog or STDERR
• An API for writing PID files
• An API for serializing UNIX signals into a pipe for usage with select() or poll()
• An API for running subprocesses with STDOUT and STDERR redirected to syslog.


|--------------------------- ### libdmx

• 1.0.2-3.1


|--------------------------- ### libdrm

• 2.0.2-1.1


|--------------------------- ### libevent

• 1.4.13-1


|--------------------------- ### libfontenc

• 1.0.2-2.2.el5


|--------------------------- ### libFS

• 1.0.0-3.1


|--------------------------- ### libgcc

• 4.1.2-54.el5


|--------------------------- ### libgcrypt

• 1.4.4-7.el5_10


|--------------------------- ### libgfortran

• 4.1.2-54.el5


|--------------------------- ### libglade2

• 2.6.0-2


|--------------------------- ### libgnome

• 2.16.0-6.el5


|--------------------------- ### libgnomecanvas

• 2.14.0-4.1


|--------------------------- ### libgnomeprintui22

• 2.12.1-6


|--------------------------- ### libgnomeui

• 2.16.0-5.el5


|--------------------------- ### libgomp

• 4.4.7-1.el5


|--------------------------- ### libgpg-error

• 1.4-2


|--------------------------- ### libgsf

• 1.14.1-6.1


|--------------------------- ### libgssapi

• 0.10-2


|--------------------------- ### libhugetlbfs

• 1.3-8.2.el5


|--------------------------- ### libibcm

• 1.0.5-2.el5


|--------------------------- ### libibmad

• 1.3.8-1.el5


|--------------------------- ### libibumad

• 1.3.7-1.el5


|--------------------------- ### libibverbs

• 1.1.6-3.el5


|--------------------------- ### libibverbs-devel

• 1.1.6-3.el5


|--------------------------- ### libICE

• 1.0.1-2.1


|--------------------------- ### libicu

• 3.6-5.16.1


|--------------------------- ### libIDL

• 0.8.7-1.fc6


|--------------------------- ### libidn

• 0.6.5-1.1


|--------------------------- ### libjpeg

• 6b-38


|--------------------------- ### libmng

• 1.0.9-5.1


|--------------------------- ### libmthca

• 1.0.6-1.el5


|--------------------------- ### libnotify

• 0.4.2-6.el5


|--------------------------- ### libpaper

• 1.1.21-1.el5.1


|--------------------------- ### libpng

• 1.2.10-17.el5_8


|--------------------------- ### librdmacm

• 1.0.15-2.el5


|--------------------------- ### librsvg2

• 2.16.1-1.el5


|--------------------------- ### libselinux

• 1.33.4-5.7.el5


|--------------------------- ### libsemanage

• 1.9.1-4.4.el5


|--------------------------- ### libsepol

• 1.15.2-3.el5


|--------------------------- ### libSM

• 1.0.1-3.1


|--------------------------- ### None

• 4.1.2-54.el5


|--------------------------- ### libsysfs

• 2.1.0-1.el5


|--------------------------- ### libtermcap

• 2.0.8-46.1


|--------------------------- ### libtiff

• 3.8.2-18.el5_8


|--------------------------- ### libtool-ltdl

• 1.5.22-7.el5_4


|--------------------------- ### libusb

• 0.1.12-6.el5


|--------------------------- ### libutempter

• 1.1.4-4.el5


|--------------------------- ### libvolume_id

• 095-14.29.el5


|--------------------------- ### libwmf

• 0.2.8.4-10.2


|--------------------------- ### libwnck

• 2.16.0-4.fc6


|--------------------------- ### libX11

• 1.0.3-11.el5_7.1


|--------------------------- ### libXau

• 1.0.1-3.1


|--------------------------- ### libXaw

• 1.0.2-8.1


|--------------------------- ### libXcursor

• 1.1.7-1.2


|--------------------------- ### libXdmcp

• 1.0.1-2.1


|--------------------------- ### libXext

• 1.0.1-2.1


|--------------------------- ### libXfixes

• 4.0.1-2.1


|--------------------------- ### libXfont

• 1.2.2-1.0.4.el5_7


|--------------------------- ### libXfontcache

• 1.0.2-3.1


|--------------------------- ### libXft

• 2.1.10-1.1


|--------------------------- ### libXi

• 1.0.1-4.el5_4


|--------------------------- ### libXinerama

• 1.0.1-2.1


|--------------------------- ### libxkbfile

• 1.0.3-3.1


|--------------------------- ### libXmu

• 1.0.2-5


|--------------------------- ### libXp

• 1.0.0-8.1.el5


|--------------------------- ### libXpm

• 3.5.5-3


|--------------------------- ### libXrandr

• 1.1.1-3.3


|--------------------------- ### libXrender

• 0.9.1-3.1


|--------------------------- ### libXres

• 1.0.1-3.1


|--------------------------- ### libXScrnSaver

• 1.1.0-3.1


|--------------------------- ### libXt

• 1.0.2-3.2.el5


|--------------------------- ### libXTrap

• 1.0.0-3.1


|--------------------------- ### libXtst

• 1.0.1-3.1


|--------------------------- ### libXv

• 1.0.1-4.1


|--------------------------- ### libXxf86dga

• 1.0.1-3.1


|--------------------------- ### libXxf86misc

• 1.0.1-3.1


|--------------------------- ### libXxf86vm

• 1.0.1-3.1


|--------------------------- ### m2crypto

• 0.16-9.el5


|--------------------------- ### mesa-libGL

• 6.5.1-7.11.el5_9


|--------------------------- ### mesa-libGLU

• 6.5.1-7.11.el5_9


|--------------------------- ### ncurses

• 5.5-24.20060715


|--------------------------- ### netpbm

• 10.35.58-10.el5


|--------------------------- ### newt

• 0.52.2-15.el5


|--------------------------- ### nfs-utils-lib

• 1.0.8-7.9.el5


|--------------------------- ### notification-daemon

• 0.3.5-9.el5


|--------------------------- ### nspr

• 4.10.2-2.el5_10


|--------------------------- ### nss

• 3.15.3-4.el5_10


|--------------------------- ### nss_db

• 2.2-35.4.el5_5


|--------------------------- ### numactl-devel

• 0.9.8-12.el5_6


|--------------------------- ### openmotif

• 2.3.1-7.2.el5


|--------------------------- ### opensm-libs

• 3.3.13-1.el5


|--------------------------- ### openssl

• 0.9.8e-26.el5_9.1


|--------------------------- ### pango

• 1.14.9-8.el5.centos.3


|--------------------------- ### pcre

• 6.6-9.el5


|--------------------------- ### pcsc-lite-libs

• 1.4.4-4.el5_5


|--------------------------- ### pkinit-nss

• 0.7.6-1.el5


|--------------------------- ### python-ldap

• 2.2.0-2.1


|--------------------------- ### qhull

• 2003.1-8.el5


|--------------------------- ### readline

• 5.1-3.el5


|--------------------------- ### rhpl

• 0.194.1-2


|--------------------------- ### SDL

• 1.2.10-9.el5


|--------------------------- ### shared-mime-info

• 0.19-5.el5


|--------------------------- ### slang

• 2.0.6-4.el5


|--------------------------- ### startup-notification

• 0.8-4.1


|--------------------------- ### suitesparse

• 3.1.0-1.el5


|--------------------------- ### words

• 3.0-9.1


|--------------------------- ### Xaw3d

• 1.5E-10.1


|--------------------------- ### xbae

• 4.60.4-8.el5


|--------------------------- ### xmlrpc-c

• 1.16.24-1206.1840.4.el5


|--------------------------- ### xmlrpc-c-client

• 1.16.24-1206.1840.4.el5


|--------------------------- ### xz-libs

• 4.999.9-0.3.beta.20091007git.el5


|--------------------------- ### zlib

• 1.2.3-7.el5


|--------------------------- ## None


|--------------------------- ### bash

• 3.2-32.el5_9.1


|--------------------------- ### tcsh

• 6.14-17.el5_5.2


|--------------------------- ## None


|--------------------------- ### hicolor-icon-theme

• 0.9-2.1


|--------------------------- ### redhat-menus

• 6.7.8-3.el5


|--------------------------- ### vnc

• 4.1.2-14.el5_6.6


|--------------------------- ## None


|--------------------------- ### bitstream-vera-fonts

• 1.10-7


|--------------------------- ### imake

• 1.0.2-3


|--------------------------- ### liberation-fonts

• 1.0-1.el5


|--------------------------- ### urw-fonts

• 2.3-6.1.1


|--------------------------- ### vnc-server

• 4.1.2-14.el5_6.6


|--------------------------- ### xorg-x11-apps

• 7.1-4.0.1.el5


|--------------------------- ### xorg-x11-font-utils

• 7.1-3


|--------------------------- ### xorg-x11-fonts-100dpi

• 7.1-2.1.el5


|--------------------------- ### xorg-x11-fonts-base

• 7.1-2.1.el5


|--------------------------- ### xorg-x11-fonts-ISO8859-1-100dpi

• 7.1-2.1.el5


|--------------------------- ### xorg-x11-fonts-ISO8859-1-75dpi

• 7.1-2.1.el5


|--------------------------- ### xorg-x11-server-utils

• 7.1-5.el5_6.2


|--------------------------- ### xorg-x11-utils

• 7.1-2.fc6


|--------------------------- ### xorg-x11-xauth

• 1.0.1-2.1


|--------------------------- ### xterm

• 215-8.el5_4.1


|--------------------------- ## Utilities


|--------------------------- ### clusterit

• 2.5-1


|--------------------------- ### jpackage-utils

• 1.7.3-1jpp.3.el5

1. /usr/bin/build-classpath build the Java classpath in a portable manner
2. /usr/bin/build-jar-repository build a jar repository in a portable manner
3. /usr/bin/rebuild-jar-repository rebuild a jar repository in a portable manner (after a jvm change...)
4. /usr/bin/build-classpath-directory build the Java classpath from a directory
5. /usr/bin/diff-jars show jar content differences
6. /usr/bin/jvmjar install jvm extensions
7. /usr/bin/create-jar-links create custom jar links
8. /usr/bin/clean-binary-files remove binary files from sources
9. /usr/bin/check-binary-files check for presence of unexpected binary files
10. /usr/share/java-utils/java-functions shell script functions library for Java applications
11. /etc/java/jpackage-release string identifying the currently installed JPackage release
12. /etc/java/java.conf system-wide Java configuration file
13. /etc/rpm/macros.jpackage RPM macros for Java packagers and developers
14. /usr/share/doc/jpackage-utils-1.7.3/jpackage-policy Java packaging policy for packagers and developers


|--------------------------- ## None


|--------------------------- ### lustre-client

• 1.8.9-wc1_2.6.18_348.1.1.el5


|--------------------------- # HPC/RPM


|--------------------------- ## Introduction

The Carbon login nodes have the following software items available setup-free for all users.

Most items are available on compute nodes as well, except for these categories:

• Remote access
• Development
• Graphics (multimedia, X11)
• Data analysis.




|--------------------------- # Index

cpio
dump
pax
rmt
tar
unzip
zip

mgetty

mysql
postgresql-libs
sqlite

emacs
emacs-common
nano
nedit
vim-common
vim-enhanced
vim-minimal

bc
gnuplot
grace
libxc
netcdf
octave
pymol
R
R-core
R-devel

bzip2
file
findutils
gzip
openbabel
pbzip2
pigz
tree
xz

curl
finger
firefox
ftp
ganglia
ganglia-gmond
htmlview
jwhois
lftp
lynx
mailx
mtr
mutt
nc
openldap-clients
openssh
openssh-clients
rsync
stunnel
talk
tcpdump
telnet
traceroute
wget
xulrunner

ImageMagick
netpbm-progs
transfig
xfig

lcms

a2ps
evince
ghostscript
ghostscript-fonts
groff
gv
latex2html
neon
paps
psutils
t1lib
tetex
tetex-dvips
tetex-fonts
tetex-latex
texinfo
texinfo-tex
xpdf

ksh

bind-libs
bind-utils
bluez-gnome
bluez-utils
bonnie++
collectl
conman
cryptsetup-luks
dialog
dosfstools
ethtool
fbset
gnome-mount
gnupg
hdparm
hwloc
iproute
irda-utils
kudzu
lm_sensors
logwatch
mlocate
mtools
OpenIPMI-tools
parted
pciutils
procps
psacct
psmisc
python-libs
rdate
rdist
rsnapshot
screen
setserial
setuptool
stress
sudo
symlinks
syslinux
system-config-network-tui
system-switch-mail
time
torque
torque-client
torque-devel
ttmkfdir
usbutils
usermode
which

aspell
aspell-en
diffutils
docbook-dtds
dos2unix
ed
gawk
grep
less
m4
openjade
opensp
poppler-utils
sed
sgml-common
unix2dos
xml-common

crash
gdb
lsof
strace
valgrind

lustre-client-modules
lustre-source

cpp
expect
gcc
gcc-c++
gcc-gfortran
guile
numpy
perl
perl-suidperl
pexpect
pycairo
pygobject2
pygobject2-devel
pygobject2-doc
pygtk2
pygtk2-codegen
pygtk2-devel
pygtk2-libglade
python
python-dateutil
python-decoratortools
python-docutils
python-imaging
python-nose
python-numeric
python-setuptools
pytz
tcl
tcl-devel
tclx
tclx-devel
tix
tk
tk-devel
tkinter
unifdef

atk-devel
audit-libs
audit-libs-python
avahi-compat-libdns_sd
blas
blas-devel
bzip2-devel
cairo-devel
curl-devel
dbus-libs
e2fsprogs-devel
e2fsprogs-libs
fftw2-devel
fftw3-devel
fontconfig-devel
freetype-devel
gamin
gamin-python
gd-devel
glew-devel
glib2-devel
glibc-devel
glibc-headers
glx-utils
gmp-devel
grace-devel
gsl-devel
gtk2-devel
guile-devel
hdf5-devel
hwloc-devel
itcl
itk
iwidgets
krb5-devel
lapack
lapack-devel
libgnomecups
libICE-devel
libidn-devel
libjpeg-devel
libnl
libpcap
libpng-devel
libRmath
libRmath-devel
libselinux-devel
libselinux-python
libselinux-utils
libsepol-devel
libSM-devel
libstdc++-devel
libsysfs-devel
libtermcap-devel
libtiff-devel
libX11-devel
libXau-devel
libXcursor-devel
libXdmcp-devel
libXext-devel
libXfixes-devel
libXft-devel
libXi-devel
libXinerama-devel
libxml2
libxml2-devel
libxml2-python
libXpm-devel
libXrandr-devel
libXrender-devel
libxslt
libXt-devel
libyaml
mesa-libGL-devel
mesa-libGLU-devel
nautilus-extensions
ncurses-devel
net-snmp-libs
netcdf-devel
NetworkManager-glib
octave-devel
OpenIPMI-libs
openmpi
openmpi-devel
openmpi-libs
openssl-devel
pam-devel
pango-devel
pcre-devel
perl-Compress-Zlib
perl-Convert-ASN1
perl-Crypt-SSLeay
perl-DBI
perl-Error
perl-Git
perl-HTML-Parser
perl-HTML-Tagset
perl-IO-Interface
perl-IO-Socket-SSL
perl-IO-Tty
perl-LDAP
perl-libwww-perl
perl-Net-SSLeay
perl-String-CRC32
perl-TermReadKey
perl-Time-Piece
perl-URI
perl-XML-NamespaceSupport
perl-XML-SAX
poppler
popt
pycairo-devel
pyOpenSSL
python-ctypes
python-devel
python-elementtree
python-hashlib
python-iniparse
python-lxml
python-matplotlib
python-matplotlib-tk
python-pmw
python-sqlite
python-urlgrabber
PyYAML
qhull-devel
readline-devel
rpm-libs
rpm-python
sos
sqlite-devel
yum-metadata-parser
zlib-devel

checkpolicy
kernel-headers
opensm-devel
redhat-rpm-config
xorg-x11-proto-devel

autoconf
automake
binutils
cmake
ctags
cvs
desktop-file-utils
doxygen
elfutils
elfutils-libelf
elfutils-libs
flex
gettext
git
git-gui
gitk
jdk
jre
libtool
make
mock
patch
pkgconfig
python-tools
rcs
rpm-build
subversion
sysfsutils
yum-utils

Deployment_Guide-en-US
kernel-doc
man-pages
specspo

gpg-pubkey

acl
amtu
anacron
attr
authconfig
avahi
avahi-glib
basesystem
centos-release
centos-release-notes
chkconfig
chkfontpath
coreutils
cpuspeed
createrepo
crontabs
device-mapper
device-mapper-event
device-mapper-multipath
dhclient
dhcpv6-client
dmidecode
dmraid
dmraid-events
e2fsprogs
eject
environment-modules
filesystem
firstboot-tui
GConf2
glibc-common
grub
hmaccalc
hwdata
ifd-egate
info
initscripts
ipsec-tools
iptables
iptables-ipv6
iptstate
irqbalance
kbd
keyutils-libs
keyutils-libs-devel
kpartx
krb5-workstation
libgnomeprint22
libuser
logrotate
lvm2
mailcap
MAKEDEV
man
mcelog
mdadm
microcode_ctl
mingetty
mkbootdisk
mkinitrd
mktemp
mpi-selector
nash
net-tools
NetworkManager
nss-tools
nss_ldap
ntsysv
numactl
openib
OpenIPMI
pam
pam_ccreds
pam_krb5
pam_passwdqc
pam_pkcs11
pam_smb
passwd
pcmciautils
pinfo
pm-utils
policycoreutils
prelink
quota
readahead
redhat-logos
redhat-lsb
rhel-instnum
rng-utils
rootfiles
rpm
scrollkeeper
selinux-policy
selinux-policy-targeted
setools
setup
sgpio
shadow-utils
smartmontools
system-config-securitylevel-tui
SysVinit
termcap
tmpwatch
tzdata
tzdata-java
udev
util-linux
vconfig
vixie-cron
wireless-tools
wpa_supplicant
xdg-utils
xorg-x11-filesystem
yp-tools
yum
yum-downloadonly
yum-fastestmirror
yum-priorities
yum-updatesd

acpid
at
audit
autofs
cups
dhcdbd
dnsmasq
esound
gpm
iputils
iscsi-initiator-utils
mcstrans
nfs-utils
nscd
ntp
openldap
openssh-server
ORBit2
pcsc-lite
portmap
postfix
ppp
rp-pppoe
rsh-server
sysklogd
tcp_wrappers
xinetd
xorg-x11-xfs
ypbind

kernel
kernel-devel
module-init-tools
setarch

agg
alsa-lib
apr
apr-util
atk
atlas
audiofile
beecrypt
bluez-libs
boost
boost-devel
bzip2-libs
cairo
ccid
CodeMeter64
compat-dapl
compat-dapl-devel
compat-db
compat-libf2c-34
compat-libstdc++-33
coolkey
cracklib
cracklib-dicts
cups-libs
cyrus-sasl
cyrus-sasl-lib
cyrus-sasl-plain
dapl
dapl-devel
db4
dbus
dbus-glib
dbus-python
expat
fftw2
fftw3
fipscheck
fipscheck-lib
fontconfig
freeglut
freetype
gd
gdbm
giflib
glew
glib2
glibc
glpk
gmp
gnome-keyring
gnome-mime-data
gnome-vfs2
gnutls
gsl
gtk2
hal
hdf5
hesiod
inchi
infiniband-diags
krb5-libs
libacl
libaio
libart_lgpl
libattr
libbonobo
libbonoboui
libcap
libcroco
libdaemon
libdmx
libdrm
libevent
libfontenc
libFS
libgcc
libgcrypt
libgfortran
libglade2
libgnome
libgnomecanvas
libgnomeprintui22
libgnomeui
libgomp
libgpg-error
libgsf
libgssapi
libhugetlbfs
libibcm
libibmad
libibumad
libibverbs
libibverbs-devel
libICE
libicu
libIDL
libidn
libjpeg
libmng
libmthca
libnotify
libpaper
libpng
librdmacm
librsvg2
libselinux
libsemanage
libsepol
libSM
libstdc++
libsysfs
libtermcap
libtiff
libtool-ltdl
libusb
libutempter
libvolume_id
libwmf
libwnck
libX11
libXau
libXaw
libXcursor
libXdmcp
libXext
libXfixes
libXfont
libXfontcache
libXft
libXi
libXinerama
libxkbfile
libXmu
libXp
libXpm
libXrandr
libXrender
libXres
libXScrnSaver
libXt
libXTrap
libXtst
libXv
libXxf86dga
libXxf86misc
libXxf86vm
m2crypto
mesa-libGL
mesa-libGLU
ncurses
netpbm
newt
nfs-utils-lib
notification-daemon
nspr
nss
nss_db
numactl-devel
openmotif
opensm-libs
openssl
pango
pcre
pcsc-lite-libs
pkinit-nss
python-ldap
qhull
readline
rhpl
SDL
shared-mime-info
slang
startup-notification
suitesparse
words
Xaw3d
xbae
xmlrpc-c
xmlrpc-c-client
xz-libs
zlib

bash
tcsh

hicolor-icon-theme
redhat-menus
vnc

bitstream-vera-fonts
imake
liberation-fonts
urw-fonts
vnc-server
xorg-x11-apps
xorg-x11-font-utils
xorg-x11-fonts-100dpi
xorg-x11-fonts-base
xorg-x11-fonts-ISO8859-1-100dpi
xorg-x11-fonts-ISO8859-1-75dpi
xorg-x11-server-utils
xorg-x11-utils
xorg-x11-xauth
xterm

clusterit
jpackage-utils

lustre-client



• See also:  Application packages (modules) (https://wiki.anl.gov/cnm/HPC/Modules)




|--------------------------- # Summaries

Query date: 2014-03-24, 09:48.

Name                            Date       Summary                                                                                             Versions
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
cpio                            2014-01-07 A GNU archiving program.                                                                            2.6-26.el5
dump                            2012-09-10 Programs for backing up and restoring ext2/ext3 filesystems                                         0.4b41-6.el5
pax                             2010-12-29 POSIX File System Archiver                                                                          3.4-2.el5_4
rmt                             2012-09-10 Provides certain programs with access to remote tape devices                                        0.4b41-6.el5
tar                             2012-09-10 A GNU file archiving program                                                                        1.15.1-32.el5_8
unzip                           2009-04-22 A utility for unpacking zip files.                                                                  5.52-3.el5
zip                             2009-04-22 A file compression and packaging utility compatible with PKZIP.                                     2.31-2.el5
mgetty                          2007-09-24 A getty replacement for use with data and fax modems.                                               1.1.33-9.fc6
mysql                           2013-05-15 MySQL client programs and shared libraries                                                          5.0.95-5.el5_9
postgresql-libs                 2013-01-03 The shared libraries required for any PostgreSQL clients.                                           8.1.23-6.el5_8
sqlite                          2013-09-06 Library that implements an embeddable SQL database engine                                           3.3.6-7
emacs                           2012-09-10 GNU Emacs text editor                                                                               21.4-24.el5
emacs-common                    2012-09-10 Emacs common files                                                                                  21.4-24.el5
nano                            2007-09-24 A small text editor                                                                                 1.3.12-1.1
nedit                           2009-04-27 A GUI text editor for systems with X                                                                5.5-16.el55.5-21.el5
vim-common                      2013-05-15 The common files needed by any version of the VIM editor.                                           7.0.109-7.2.el5
vim-enhanced                    2013-05-15 A version of the VIM editor which includes recent enhancements.                                     7.0.109-7.2.el5
vim-minimal                     2013-05-15 A minimal version of the VIM editor.                                                                7.0.109-7.2.el5
bc                              2007-09-24 GNU's bc (a numeric processing language) and dc (a calculator).                                     1.06-21
gnuplot                         2009-02-05 A program for plotting mathematical expressions and data.                                           4.0.0-14.el5
grace                           2009-02-19 Numerical Data Processing and Visualization Tool                                                    5.1.22-2.el5
libxc                           2013-03-04 Library of exchange and correlation functionals to be used in DFT codes                             2.0.1-1.el5
netcdf                          2014-01-07 Libraries for the Unidata network Common Data Form (NetCDF v3)                                      3.6.3-1.el5
octave                          2009-08-28 A high-level language for numerical computations                                                    3.0.5-1.el5
pymol                           2010-02-15 PyMOL Molecular Graphics System                                                                     1.1-14.20081015svn3468.el5
R                               2013-01-03 A language for data analysis and graphics                                                           2.15.2-1.el5
R-core                          2013-01-03 The minimal R components necessary for a functional runtime                                         2.15.2-1.el5
R-devel                         2013-01-03 Files for development of R packages                                                                 2.15.2-1.el5
bzip2                           2010-12-29 A file compression utility.                                                                         1.0.3-6.el5_5
file                            2013-05-15 A utility for determining file types.                                                               4.17-28
findutils                       2010-01-02 The GNU versions of find utilities (find and xargs).                                                4.2.27-6.el5
gzip                            2012-09-10 The GNU data compression program.                                                                   1.3.5-13.el5.centos
openbabel                       2008-04-16 Chemistry software file format converter                                                            2.1.1-1.fc8
pbzip2                          2011-08-30 Parallel implementation of bzip2                                                                    1.1.1-1.el5
pigz                            2012-09-10 Parallel implementation of gzip                                                                     2.2.5-1.el5
tree                            2007-09-24 A utility which displays a tree view of the contents of directories.                                1.5.0-4
xz                              2012-09-10 LZMA compression utilities                                                                          4.999.9-0.3.beta.20091007git.el5
curl                            2013-09-06 A utility for getting files from remote servers (FTP, HTTP, and others).                            7.15.5-17.el5_9
finger                          2012-09-10 The finger client.                                                                                  0.17-33
firefox                         2014-01-07 Mozilla Firefox Web browser                                                                         24.2.0-1.0.1.el5.centos
ftp                             2013-05-15 The standard UNIX FTP (File Transfer Protocol) client.                                              0.17-38.el5
ganglia                         2010-07-13 Ganglia Distributed Monitoring System                                                               3.0.7-2
ganglia-gmond                   2010-07-13 Ganglia Monitoring daemon                                                                           3.0.7-2
htmlview                        2008-09-03 Launcher of Preferred Web Browser                                                                   4.0.0-2.el5
jwhois                          2011-08-30 Internet whois/nicname client.                                                                      3.2.3-12.el5
lftp                            2013-05-15 A sophisticated file transfer program                                                               3.7.11-8.el5
lynx                            2013-08-19 A text-based Web browser.                                                                           2.8.5-28.1.el5_2.1
mailx                           2007-09-24 The /bin/mail program for sending e-mail messages.                                                  8.1.1-44.2.2
mtr                             2007-09-24 A network diagnostic tool.                                                                          0.71-3.1
mutt                            2013-05-15 A text mode mail user agent.                                                                        1.4.2.2-6.el5
nc                              2007-09-24 Reads and writes data across network connections using TCP or UDP.                                  1.84-10.fc6
openldap-clients                2012-09-10 Client programs for OpenLDAP.                                                                       2.3.43-25.el5_8.1
openssh                         2012-09-10 The OpenSSH implementation of SSH protocol versions 1 and 2                                         4.3p2-82.el5
openssh-clients                 2012-09-10 The OpenSSH client applications                                                                     4.3p2-82.el5
rsync                           2012-09-10 A program for synchronizing files over a network                                                    3.0.6-4.el5_7.1
stunnel                         2009-04-22 An SSL-encrypting socket wrapper.                                                                   4.15-2.el5.1
talk                            2012-09-10 Talk client for one-on-one Internet chatting.                                                       0.17-31.el5
tcpdump                         2010-07-13 A network traffic monitoring tool.                                                                  3.9.4-15.el5
telnet                          2013-05-15 The client program for the telnet remote login protocol.                                            0.17-41.el5
traceroute                      2012-09-10 Traces the route taken by packets over an IPv4/IPv6 network                                         2.0.1-6.el5
wget                            2012-09-10 A utility for retrieving files using the HTTP or FTP protocols.                                     1.11.4-3.el5_8.2
xulrunner                       2014-01-07 XUL Runtime for Gecko Applications                                                                  17.0.10-1.el5_10
ImageMagick                     2012-09-10 An X application for displaying and manipulating images.                                            6.2.8.0-15.el5_8
netpbm-progs                    2012-09-10 Tools for manipulating graphics files in netpbm supported formats                                   10.35.58-10.el5
transfig                        2008-04-09 A utility for converting FIG files (made by xfig) to other formats.                                 3.2.4-16
xfig                            2009-04-22 An X Window System tool for drawing basic vector graphics.                                          3.2.4-21.3.el5
lcms                            2009-04-22 Color Management System                                                                             1.18-0.1.beta1.el5_3.2
a2ps                            2008-11-11 Converts text and other types of files to PostScript(TM).                                           4.13b-57.2.el5
evince                          2012-09-10 Document viewer                                                                                     0.6.0-17.el5
ghostscript                     2014-01-07 A PostScript(TM) interpreter and renderer.                                                          8.70-15.el5_9.3
ghostscript-fonts               2008-04-09 Fonts for the Ghostscript PostScript(TM) interpreter.                                               5.50-13.1.1
groff                           2012-09-10 A document formatting system.                                                                       1.18.1.1-13.el5
gv                              2010-07-13 A X front-end for the Ghostscript PostScript(TM) interpreter                                        3.7.1-1.el5
latex2html                      2008-05-23 Converts LaTeX documents to HTML                                                                    2002.2.1-6
neon                            2010-01-02 An HTTP and WebDAV client library                                                                   0.25.5-10.el5_4.1
paps                            2011-08-30 Plain Text to PostScript converter                                                                  0.6.6-20.el5
psutils                         2008-05-23 PostScript Utilities                                                                                1.17-26.1
t1lib                           2012-09-10 PostScript Type 1 font rasterizer                                                                   5.1.1-9.el5
tetex                           2012-09-10 The TeX text formatting system.                                                                     3.0-33.15.el5_8.1
tetex-dvips                     2012-09-10 A DVI to PostScript converter for the TeX text formatting system.                                   3.0-33.15.el5_8.1
tetex-fonts                     2012-09-10 The font files for the TeX text formatting system.                                                  3.0-33.15.el5_8.1
tetex-latex                     2012-09-10 The LaTeX front end for the TeX text formatting system.                                             3.0-33.15.el5_8.1
texinfo                         2008-05-23 Tools needed to create Texinfo format documentation files.                                          4.8-14.el5
texinfo-tex                     2008-05-23 Tools for fromating Texinfo documentation files using TeX                                           4.8-14.el5
xpdf                            2013-10-25 A PDF file viewer for the X Window System                                                           3.03-8.el5.1
ksh                             2014-01-07 The Original ATT Korn Shell                                                                         20100621-18.el5
bind-libs                       2013-05-15 Libraries used by the BIND DNS packages                                                             9.3.6-20.P1.el5_8.6
bind-utils                      2013-05-15 Utilities for querying DNS name servers.                                                            9.3.6-20.P1.el5_8.6
bluez-gnome                     2007-09-24 Bluetooth pairing and control applet                                                                0.5-5.fc6
bluez-utils                     2010-12-29 Bluetooth utilities                                                                                 3.7-2.2.el5.centos
bonnie++                        2008-09-03 Filesystem and disk benchmark & burn-in suite                                                       1.03a-6.el5
collectl                        2014-01-07 A utility to collect various Linux performance data                                                 3.6.9-1.el5
conman                          2008-02-05 ConMan - The Console Manager                                                                        0.1.9.2-8.el5
cryptsetup-luks                 2012-09-10 A utility for setting up encrypted filesystems                                                      1.0.3-8.el5
dialog                          2008-05-23 A utility for creating TTY dialog boxes.                                                            1.0.20051107-1.2.2
dosfstools                      2010-07-13 Utilities for making and checking MS-DOS FAT filesystems on Linux                                   2.11-9.el5
ethtool                         2010-07-13 Ethernet settings tool for PCI ethernet cards                                                       6-4.el5
fbset                           2007-09-24 Tools for managing a frame buffer's video mode properties.                                          2.1-22
gnome-mount                     2007-12-12 Mount replacement which uses HAL to do the mounting                                                 0.5-3.el5
gnupg                           2014-01-07 A GNU utility for secure communication and data storage.                                            1.4.5-18.el5_10
hdparm                          2007-09-24 A utility for displaying and/or setting hard disk parameters.                                       6.6-2
hwloc                           2013-01-04 Portable Hardware Locality - portable abstraction of hierarchical architectures                     1.1-0.el5
iproute                         2013-05-15 Advanced IP routing and network device configuration tools.                                         2.6.18-15.el5
irda-utils                      2007-09-24 Utilities for infrared communication between devices.                                               0.9.17-2.fc6
kudzu                           2013-05-15 The CentOS Linux hardware probing tool.                                                             1.2.57.1.26-7.el5.centos
lm_sensors                      2010-07-13 Hardware monitoring tools.                                                                          2.10.7-9.el5
logwatch                        2013-05-15 A log file analysis program                                                                         7.3-10.el5
mlocate                         2010-01-02 An utility for finding files by name                                                                0.15-1.el5.2
mtools                          2007-09-24 Programs for accessing MS-DOS disks without mounting the disks.                                     3.9.10-2.fc6
OpenIPMI-tools                  2013-05-15 OpenIPMI utilities and scripts from ipmitool                                                        2.0.16-16.el5
parted                          2013-05-15 The GNU disk partition manipulation program                                                         1.8.1-30.el5
pciutils                        2012-09-10 PCI bus related utilities                                                                           3.1.7-5.el5
procps                          2014-01-07 System and process monitoring utilities.                                                            3.2.7-26.el5
psacct                          2009-04-22 Utilities for monitoring process activities.                                                        6.3.2-44.el5
psmisc                          2013-05-15 Utilities for managing processes on your system.                                                    22.2-11
python-libs                     2013-05-15 The libraries for python runtime                                                                    2.4.3-56.el5
rdate                           2009-04-22 Tool for getting the date/time from a remote machine.                                               1.4-8.el5
rdist                           2007-09-24 Maintains identical copies of files on multiple machines.                                           6.1.5-44
rsnapshot                       2014-01-07 Local and remote filesystem snapshot utility                                                        1.3.1-12.el5
screen                          2011-08-30 A screen manager that supports multiple logins on one terminal                                      4.0.3-4.el5
setserial                       2007-09-24 A utility for configuring serial ports.                                                             2.17-19.2.2
setuptool                       2010-12-29 A text mode system configuration tool.                                                              1.19.2-1.el5.centos
stress                          2013-03-13 Tool to impose stress on a POSIX-compliant operating system                                         1.0.2-1
sudo                            2014-01-07 Allows restricted root access for specified users.                                                  1.7.2p1-28.el5
symlinks                        2013-05-15 A utility which maintains a system's symbolic links.                                                1.2-26.el5
syslinux                        2013-05-15 Simple kernel loader which boots from a FAT filesystem                                              4.02-7.2.el5
system-config-network-tui       2012-09-10 The NEtwork Adminstration Tool                                                                      1.3.99.21-1.el5
system-switch-mail              2012-09-10 The Mail Transport Agent Switcher                                                                   0.5.25-13.el5
time                            2007-09-24 A GNU utility for monitoring a program's use of system resources.                                   1.7-27.2.2
torque                          2014-01-07 Tera-scale Open-source Resource and QUEue manager                                                   4.1.7-2carbon
torque-client                   2014-01-07 TORQUE Client                                                                                       4.1.7-2carbon
torque-devel                    2014-01-07 TORQUE Development Files                                                                            4.1.7-2carbon
ttmkfdir                        2007-12-12 Utility to create fonts.scale files for truetype fonts                                              3.0.9-23.el5
usbutils                        2007-09-24 Linux USB utilities.                                                                                0.71-2.1
usermode                        2009-04-22 Tools for certain user account management tasks.                                                    1.88-3.el5.2
which                           2007-09-24 Displays where a particular program in your path is located.                                        2.16-7
aspell                          2014-01-07 A spelling checker.                                                                                 0.60.3-13
aspell-en                       2013-05-15 English dictionaries for Aspell.                                                                    6.0-3
diffutils                       2013-05-15 A GNU collection of diff utilities.                                                                 2.8.1-16.el5
docbook-dtds                    2008-04-09 SGML and XML document type definitions for DocBook.                                                 1.0-30.1
dos2unix                        2010-01-02 Text file format converter                                                                          3.1-27.2.el5
ed                              2008-12-30 The GNU line editor.                                                                                0.2-39.el5_2
gawk                            2013-05-15 The GNU version of the awk text processing utility.                                                 3.1.5-16.el5
grep                            2010-01-02 The GNU versions of grep pattern matching utilities.                                                2.5.1-55.el5
less                            2012-09-10 A text file browser similar to more, but better.                                                    436-9.el5
m4                              2007-09-24 The GNU macro processor.                                                                            1.4.5-3.el5.1
openjade                        2008-04-09 A DSSSL implementation.                                                                             1.3.2-27
opensp                          2008-04-09 SGML and XML parser                                                                                 1.5.2-4
poppler-utils                   2013-09-06 Command line utilities for converting PDF files.                                                    0.5.4-19.el5_9.2
sed                             2011-08-30 A GNU stream text editor.                                                                           4.1.5-8.el5
sgml-common                     2008-04-09 Common SGML catalog and DTD files.                                                                  0.6.3-18
unix2dos                        2010-01-02 unix2dos - UNIX to DOS text file format converter                                                   2.2-26.2.3.el5
xml-common                      2008-04-09 Common XML catalog and DTD files.                                                                   0.6.3-18
crash                           2013-05-15 Kernel crash and live system analysis utility                                                       5.1.8-2.el5.centos
gdb                             2013-05-15 A GNU source-level debugger for C, C++, Java and other languages                                    7.0.1-45.el5.centos
lsof                            2012-09-10 A utility which lists open files on a Linux/UNIX system.                                            4.78-6
strace                          2013-05-15 Tracks and displays system calls associated with a running process                                  4.5.18-18.el5
valgrind                        2013-10-02 Tool for finding memory management bugs in programs                                                 3.5.0-5.el5
lustre-client-modules           2013-05-15 Kernel Lustre modules for Linux 2.6.18-348.1.1.el5                                                  1.8.9-wc1_2.6.18_348.1.1.el5
lustre-source                   2010-08-01 Object-Based Disk storage driver source                                                             1.8.3-2.6.18_164.11.1.el5_lustre.1.8.3
cpp                             2013-05-15 The C Preprocessor.                                                                                 4.1.2-54.el5
expect                          2012-09-10 A program-script interaction and testing utility                                                    5.43.0-8.el5
gcc                             2013-05-15 Various compilers (C, C++, Objective-C, Java, ...)                                                  4.1.2-54.el5
gcc-c++                         2013-05-15 C++ support for GCC                                                                                 4.1.2-54.el5
gcc-gfortran                    2013-05-15 Fortran 95 support                                                                                  4.1.2-54.el5
guile                           2008-05-21 A GNU implementation of Scheme for application extensibility.                                       1.8.0-8.20060831cvs
numpy                           2009-08-28 A fast multidimensional array facility for Python                                                   1.2.1-2.el5
perl                            2014-01-07 The Perl programming language                                                                       5.8.8-41.el5
perl-suidperl                   2014-01-07 suidperl, for use with setuid perl scripts                                                          5.8.8-41.el5
pexpect                         2010-07-13 Pure Python Expect-like module                                                                      2.3-3.el5
pycairo                         2008-12-03 Python bindings for the cairo library                                                               1.2.0-1.1
pygobject2                      2007-09-24 Python bindings for GObject                                                                         2.12.1-5.el5
pygobject2-devel                2009-02-12 Development files for building add-on libraries                                                     2.12.1-5.el5
pygobject2-doc                  2009-02-12 Documentation files for pygobject2                                                                  2.12.1-5.el5
pygtk2                          2008-12-03 Python bindings for the GTK+ widget set.                                                            2.10.1-12.el5
pygtk2-codegen                  2009-02-12 The code generation program for PyGTK                                                               2.10.1-12.el5
pygtk2-devel                    2009-02-12 files needed to build wrappers for GTK+ addon libraries                                             2.10.1-12.el5
pygtk2-libglade                 2013-05-21 A wrapper for the libglade library for use with PyGTK                                               2.10.1-12.el5
python                          2013-05-15 An interpreted, interactive, object-oriented programming language.                                  2.4.3-56.el5
python-dateutil                 2014-01-07 Powerful extensions to the standard datetime module                                                 1.2-3.el5
python-decoratortools           2010-07-28 Use class and function decorators -- even in Python 2.3                                             1.7-1.el5
python-docutils                 2010-03-08 A system for processing plaintext documentation                                                     0.5-3.el5
python-imaging                  2012-09-10 Python's own image processing library                                                               1.1.5-7.el5
python-nose                     2010-12-29 A discovery-based unittest extension for Python                                                     0.11.3-2.el5
python-numeric                  2011-08-30 Numerical Extension to Python                                                                       23.7-2.2.2.el5_6.1
python-setuptools               2009-02-12 Download, build, install, upgrade, and uninstall Python packages                                    0.6c7-1.el5
pytz                            2010-07-13 World Timezone Definitions for Python                                                               2010h-1.el5
tcl                             2013-05-15 Tcl scripting language development environment                                                      8.4.13-6.el5
tcl-devel                       2013-05-15 Tcl scripting language development environment                                                      8.4.13-6.el5
tclx                            2010-05-23 Extensions for Tcl and Tk                                                                           8.4.0-5.fc6
tclx-devel                      2010-05-23 Extended Tcl development files                                                                      8.4.0-5.fc6
tix                             2008-06-19 A set of extension widgets for Tk                                                                   8.4.0-11.fc6
tk                              2008-02-29 Tk graphical toolkit for the Tcl scripting language                                                 8.4.13-5.el5_1.1
tk-devel                        2008-02-29 Tk graphical toolkit development files                                                              8.4.13-5.el5_1.1
tkinter                         2013-05-15 A graphical user interface for the Python scripting language.                                       2.4.3-56.el5
unifdef                         2010-07-27 Unifdef tool for removing ifdef'd lines                                                             1.171-5.fc6
atk-devel                       2009-02-12 System for layout and rendering of internationalized text.                                          1.12.2-1.fc6
audit-libs                      2012-09-10 Dynamic library for libaudit                                                                        1.8-2.el5
audit-libs-python               2012-09-10 Python bindings for libaudit                                                                        1.8-2.el5
avahi-compat-libdns_sd          2011-08-30 Libraries for Apple Bonjour mDNSResponder compatibility.                                            0.6.16-10.el5_6
blas                            2012-03-02 The BLAS (Basic Linear Algebra Subprograms) library.                                                3.0-38.el5
blas-devel                      2012-09-10 LAPACK development libraries                                                                        3.0-38.el5
bzip2-devel                     2011-08-08 Header files and libraries for developing apps which will use bzip2.                                1.0.3-6.el5_5
cairo-devel                     2009-02-12 Cairo developmental libraries and header files                                                      1.2.4-5.el5
curl-devel                      2013-10-25 Files needed for building applications with libcurl.                                                7.15.5-17.el5_9
dbus-libs                       2014-01-07 Libraries for accessing D-BUS                                                                       1.1.2-21.el5
e2fsprogs-devel                 2013-05-15 Ext2/3 filesystem-specific static libraries and headers                                             1.39-36.el5_9
e2fsprogs-libs                  2013-05-15 Ext2/3 filesystem-specific static libraries and headers                                             1.39-36.el5_9
fftw2-devel                     2009-01-19 Headers, libraries and docs for the FFTW library                                                    2.1.5-15.el5
fftw3-devel                     2010-03-08 Headers, libraries and docs for the FFTW library                                                    3.2.2-3.el5
fontconfig-devel                2009-02-12 Font configuration and customization library                                                        2.4.1-7.el5
freetype-devel                  2013-05-15 FreeType development libraries and header files                                                     2.2.1-32.el5_9.1
gamin                           2012-09-10 Library providing the FAM File Alteration Monitor API                                               0.1.7-10.el5
gamin-python                    2012-09-10 Python bindings for the gamin library                                                               0.1.7-10.el5
gd-devel                        2010-03-08 The development libraries and header files for gd                                                   2.0.33-9.4.el5_4.2
glew-devel                      2013-10-25 Development files for glew                                                                          1.5.1-3.el5
glib2-devel                     2009-04-22 The GIMP ToolKit (GTK+) and GIMP Drawing Kit (GDK) support library                                  2.12.3-4.el5_3.1
glibc-devel                     2014-01-07 Object files for development using standard C libraries.                                            2.5-118.el5_10.2
glibc-headers                   2014-01-07 Header files for development using standard C libraries.                                            2.5-118.el5_10.2
glx-utils                       2013-09-06 GLX utilities                                                                                       6.5.1-7.11.el5_9
gmp-devel                       2008-05-21 Development tools for the GNU MP arbitrary precision library.                                       4.1.4-10.el5
grace-devel                     2009-02-19 Files needed for grace development                                                                  5.1.22-2.el5
gsl-devel                       2010-07-13 Libraries and the header files for GSL development                                                  1.13-3.el5
gtk2-devel                      2014-01-07 Development tools for GTK+ applications                                                             2.10.4-30.el5
guile-devel                     2008-05-21 Libraries and header files for the GUILE extensibility library.                                     1.8.0-8.20060831cvs
hdf5-devel                      2010-01-02 HDF5 development files                                                                              1.6.10-1.el5
hwloc-devel                     2013-03-04 Headers and shared development libraries for hwloc                                                  1.1-0.el5
itcl                            2011-02-23 Object oriented extensions to Tcl and Tk                                                            3.3-0.7.RC1.el5
itk                             2011-02-23 Object oriented extensions to Tk                                                                    3.3-0.4.RC1.el5
iwidgets                        2011-02-23 A set of useful widgets based on itcl and itk                                                       4.0.1-4.el5
krb5-devel                      2013-09-06 Development files needed to compile Kerberos 5 programs.                                            1.6.1-70.el5_9.2
lapack                          2012-09-10 The LAPACK libraries for numerical linear algebra                                                   3.0-38.el5
lapack-devel                    2012-09-10 LAPACK development libraries                                                                        3.0-38.el5
libgnomecups                    2010-07-13 GNOME library for CUPS integration                                                                  0.2.2-9
libICE-devel                    2008-06-18 X.Org X11 libICE development package                                                                1.0.1-2.1
libidn-devel                    2013-10-25 Development files for the libidn library                                                            0.6.5-1.1
libjpeg-devel                   2014-01-07 Development tools for programs which will use the libjpeg library.                                  6b-38
libnl                           2008-09-03 Convenience library for kernel netlink sockets                                                      1.0-0.10.pre5.5
libpcap                         2010-07-13 A system-independent interface for user-level packet capture.                                       0.9.4-15.el5
libpng-devel                    2012-09-10 Development tools for programs to manipulate PNG image format files                                 1.2.10-17.el5_8
libRmath                        2013-01-03 Standalone math library from the R project                                                          2.15.2-1.el5
libRmath-devel                  2013-01-03 Headers from the R Standalone math library                                                          2.15.2-1.el5
libselinux-devel                2011-08-30 Header files and libraries used to build SELinux                                                    1.33.4-5.7.el5
libselinux-python               2011-08-30 python bindings for libselinux                                                                      1.33.4-5.7.el5
libselinux-utils                2011-08-30 SELinux libselinux utilies                                                                          1.33.4-5.7.el5
libsepol-devel                  2010-07-13 Header files and libraries used to build policy manipulation tools                                  1.15.2-3.el5
libSM-devel                     2008-06-18 X.Org X11 libSM development package                                                                 1.0.1-3.1
libstdc++-devel                 2013-05-15 Header files and libraries for C++ development                                                      4.1.2-54.el5
libsysfs-devel                  2012-09-10 Static library and headers for libsysfs                                                             2.1.0-1.el5
libtermcap-devel                2008-02-22 Development tools for programs which will access the termcap database.                              2.0.8-46.1
libtiff-devel                   2013-01-03 Development tools for programs which will use the libtiff library                                   3.8.2-18.el5_8
libX11-devel                    2012-09-10 X.Org X11 libX11 development package                                                                1.0.3-11.el5_7.1
libXau-devel                    2007-12-12 X.Org X11 libXau development package                                                                1.0.1-3.1
libXcursor-devel                2012-09-10 X.Org X11 libXcursor development package                                                            1.1.7-1.2
libXdmcp-devel                  2007-12-12 X.Org X11 libXdmcp development package                                                              1.0.1-2.1
libXext-devel                   2009-02-12 X.Org X11 libXext development package                                                               1.0.1-2.1
libXfixes-devel                 2009-02-12 X.Org X11 libXfixes development package                                                             4.0.1-2.1
libXft-devel                    2009-02-12 X.Org X11 libXft development package                                                                2.1.10-1.1
libXi-devel                     2010-03-08 X.Org X11 libXi development package                                                                 1.0.1-4.el5_4
libXinerama-devel               2009-02-12 X.Org X11 libXinerama development package                                                           1.0.1-2.1
libxml2                         2013-09-06 Library providing XML and HTML support                                                              2.6.26-2.1.21.el5_9.3
libxml2-devel                   2013-09-06 Libraries, includes, etc. to develop XML and HTML applications                                      2.6.26-2.1.21.el5_9.3
libxml2-python                  2013-09-06 Python bindings for the libxml2 library                                                             2.6.26-2.1.21.el5_9.3
libXpm-devel                    2009-02-20 X.Org X11 libXpm development package                                                                3.5.5-3
libXrandr-devel                 2010-07-13 X.Org X11 libXrandr development package                                                             1.1.1-3.3
libXrender-devel                2009-02-12 X.Org X11 libXrender development package                                                            0.9.1-3.1
libxslt                         2013-01-03 Library providing the Gnome XSLT engine                                                             1.1.17-4.el5_8.3
libXt-devel                     2010-07-13 X.Org X11 libXt development package                                                                 1.0.2-3.2.el5
libyaml                         2012-03-02 YAML 1.1 parser and emitter written in C                                                            0.1.2-3.el5
mesa-libGL-devel                2013-09-06 Mesa libGL development package                                                                      6.5.1-7.11.el5_9
mesa-libGLU-devel               2013-10-25 Mesa libGLU development package                                                                     6.5.1-7.11.el5_9
nautilus-extensions             2012-09-10 Nautilus extensions library                                                                         2.16.2-10.el5
ncurses-devel                   2009-01-19 Development files for the ncurses library                                                           5.5-24.20060715
net-snmp-libs                   2013-05-15 The NET-SNMP runtime libraries.                                                                     5.3.2.2-20.el5
netcdf-devel                    2014-01-07 Development files for netcdf-3                                                                      3.6.3-1.el5
NetworkManager-glib             2012-09-10 Libraries for adding NetworkManager support to applications that use glib.                          0.7.0-13.el5
octave-devel                    2009-08-28 Development headers and files for Octave                                                            3.0.5-1.el5
OpenIPMI-libs                   2013-05-15 The OpenIPMI runtime libraries                                                                      2.0.16-16.el5
openmpi                         2013-05-15 Open Message Passing Interface                                                                      1.4-7.el5
openmpi-devel                   2013-05-15 Development files for openmpi                                                                       1.4-7.el5
openmpi-libs                    2013-05-15 Libraries used by openmpi programs                                                                  1.4-7.el5
openssl-devel                   2013-05-15 Files for development of applications which will use OpenSSL                                        0.9.8e-26.el5_9.1
pam-devel                       2013-05-15 Files needed for developing PAM-aware applications and modules for PAM                              0.99.6.2-12.el5
pango-devel                     2012-09-10 System for layout and rendering of internationalized text                                           1.14.9-8.el5.centos.3
pcre-devel                      2014-01-07 Development files for pcre                                                                          6.6-9.el5
perl-Compress-Zlib              2009-05-20 A module providing Perl interfaces to the zlib compression library.                                 1.42-1.fc6
perl-Convert-ASN1               2010-09-15 Convert-ASN1 Perl module                                                                            0.20-1.1
perl-Crypt-SSLeay               2010-06-10 Crypt::SSLeay - OpenSSL glue that provides LWP https support                                        0.51-11.el5
perl-DBI                        2009-04-22 A database access API for perl                                                                      1.52-2.el5
perl-Error                      2013-10-25 Error Perl module                                                                                   0.17010-1.el5
perl-Git                        2013-10-25 Perl interface to Git                                                                               1.8.2.1-1.el5
perl-HTML-Parser                2007-12-12 Perl module for parsing HTML                                                                        3.55-1.fc6
perl-HTML-Tagset                2007-12-12 HTML::Tagset - data tables useful in parsing HTML                                                   3.10-2.1.1
perl-IO-Interface               2010-01-13 Perl extension for accessing network card configuration information                                 1.03-1.el5.2
perl-IO-Socket-SSL              2013-05-15 Perl library for transparent SSL                                                                    1.01-2.el5
perl-IO-Tty                     2011-01-05 Perl interface to pseudo tty's                                                                      1.07-2.el5.1
perl-LDAP                       2013-01-03 LDAP Perl module                                                                                    0.33-4.el5_8
perl-libwww-perl                2010-06-09 A Perl interface to the World-Wide Web                                                              5.805-1.1.1
perl-Net-SSLeay                 2010-09-15 Perl extension for using OpenSSL                                                                    1.30-4.fc6
perl-String-CRC32               2007-09-24 Perl interface for cyclic redundency check generation                                               1.4-2.fc6
perl-TermReadKey                2013-10-25 A perl module for simple terminal control                                                           2.30-4.el5
perl-Time-Piece                 2014-01-30 Time objects from localtime and gmtime                                                              1.09-2.el5
perl-URI                        2008-11-14 A Perl module implementing URI parsing and manipulation                                             1.35-3
perl-XML-NamespaceSupport       2010-09-15 XML-NamespaceSupport Perl module                                                                    1.09-1.2.1
perl-XML-SAX                    2013-05-15 XML-SAX Perl module                                                                                 0.14-13.el5
poppler                         2013-09-06 PDF rendering library                                                                               0.5.4-19.el5_9.2
popt                            2014-01-07 A C library for parsing command line parameters.                                                    1.10.2.3-34.el5
pycairo-devel                   2009-02-12 Libraries and headers for pycairo                                                                   1.2.0-1.1
pyOpenSSL                       2009-08-28 Python wrapper module around the OpenSSL library                                                    0.7-6.el5
python-ctypes                   2012-09-10 Create and manipulate C data types from Python                                                      1.0.2-3.el5
python-devel                    2013-05-15 The libraries and header files needed for Python development.                                       2.4.3-56.el5
python-elementtree              2007-09-24 Fast XML parser and writer                                                                          1.2.6-5
python-hashlib                  2010-07-28 Secure hash and message digest algorithm library                                                    20081119-4.el5
python-iniparse                 2009-04-22 Python Module for Accessing and Modifying Configuration Data in INI files                           0.2.4-1.el5
python-lxml                     2014-01-07 ElementTree-like Python bindings for libxml2 and libxslt                                            2.0.11-2.el5
python-matplotlib               2010-07-13 Python plotting library                                                                             0.99.1.2-1.el5
python-matplotlib-tk            2012-03-02 Tk backend for python-matplotlib                                                                    0.99.1.2-1.el5
python-pmw                      2010-02-15 Python powerwidgets                                                                                 1.3.2-5.el5
python-sqlite                   2007-09-24 Python bindings for sqlite.                                                                         1.1.7-1.2.1
python-urlgrabber               2011-08-30 A high-level cross-protocol url-grabber                                                             3.1.0-6.el5
PyYAML                          2012-03-02 YAML parser and emitter for Python                                                                  3.08-4.el5
qhull-devel                     2013-10-25 Development files for qhull                                                                         2003.1-8.el5
readline-devel                  2010-01-02 Files needed to develop programs which use the readline library.                                    5.1-3.el5
rpm-libs                        2014-01-07 Libraries for manipulating RPM packages                                                             4.4.2.3-34.el5
rpm-python                      2014-01-07 Python bindings for apps which will manipulate RPM packages                                         4.4.2.3-34.el5
sos                             2014-01-07 A set of tools to gather troubleshooting information from a system                                  1.7-9.66.el5.centos
sqlite-devel                    2013-09-06 Development tools for the sqlite3 embeddable SQL database engine.                                   3.3.6-7
yum-metadata-parser             2013-05-15 A fast metadata parser for yum                                                                      1.1.2-4.el5
zlib-devel                      2013-05-15 Header files and libraries for Zlib development.                                                    1.2.3-7.el5
checkpolicy                     2010-07-13 SELinux policy compiler                                                                             1.33.1-6.el5
kernel-headers                  2014-01-07 Header files for the Linux kernel for use by glibc                                                  2.6.18-371.3.1.el5
opensm-devel                    2013-05-15 Development files for the opensm-libs libraries                                                     3.3.13-1.el5
redhat-rpm-config               2010-12-29 Red Hat specific rpm configuration files.                                                           8.0.45-32.el5.centos
xorg-x11-proto-devel            2010-01-02 X.Org X11 Protocol headers                                                                          7.1-13.el5
autoconf                        2008-09-18 A GNU tool for automatically configuring source code.                                               2.59-12
automake                        2010-07-13 A GNU tool for automatically creating Makefiles.                                                    1.9.6-2.3.el5
binutils                        2014-01-07 A GNU collection of binary utilities.                                                               2.17.50.0.6-26.el5
cmake                           2012-09-10 Cross-platform make system                                                                          2.6.4-5.el5.4
ctags                           2013-03-04 A C programming language indexing and/or cross-reference tool.                                      5.6-1.1
cvs                             2013-05-15 A version control system.                                                                           1.11.22-11.el5_8.1
desktop-file-utils              2007-09-24 Utilities for manipulating .desktop files                                                           0.10-7
doxygen                         2013-05-15 A documentation system for C/C++.                                                                   1.4.7-2
elfutils                        2009-04-22 A collection of utilities and DSOs to handle compiled objects                                       0.137-3.el5
elfutils-libelf                 2009-04-22 Library to read and write ELF files                                                                 0.137-3.el5
elfutils-libs                   2009-04-22 Libraries to handle compiled objects                                                                0.137-3.el5
flex                            2009-09-10 A tool for creating scanners (text pattern recognizers).                                            2.5.4a-41.fc6
gettext                         2011-08-30 GNU libraries and utilities for producing multi-lingual messages                                    0.17-1.el5
git                             2013-10-25 Fast Version Control System                                                                         1.8.2.1-1.el5
git-gui                         2013-10-25 Git GUI tool                                                                                        1.8.2.1-1.el5
gitk                            2013-10-25 Git revision tree visualiser                                                                        1.8.2.1-1.el5
jdk                             2011-09-20 Java(TM) Platform Standard Edition Development Kit                                                  1.6.0_27-fcs
jre                             2011-09-20 Java(TM) Platform Standard Edition Runtime Environment                                              1.6.0_27-fcs
libtool                         2010-01-02 The GNU Portable Library Tool                                                                       1.5.22-7.el5_4
make                            2008-09-03 A GNU tool which simplifies the build process for users.                                            3.81-3.el5
mock                            2013-05-15 Builds packages inside chroots                                                                      1.0.37-1.el5
patch                           2011-08-30 The GNU patch command, for modifying/upgrading files.                                               2.5.4-31.el5
pkgconfig                       2008-09-03 A tool for determining compilation options.                                                         0.21-2.el5
python-tools                    2013-05-15 A collection of development tools included with Python.                                             2.4.3-56.el5
rcs                             2007-12-21 Revision Control System (RCS) file version management tools.                                        5.7-30.1
rpm-build                       2014-01-07 Scripts and executable programs used to build packages                                              4.4.2.3-34.el5
subversion                      2013-05-15 Modern Version Control System designed to replace CVS                                               1.6.11-11.el5_9
sysfsutils                      2012-09-10 sysfsutils, library interface to sysfs.                                                             2.1.0-1.el5
yum-utils                       2012-09-10 Utilities based around the yum package manager                                                      1.1.16-21.el5.centos
Deployment_Guide-en-US          2012-09-10 Deployment Guide                                                                                    5.8-1.el5.centos
kernel-doc                      2014-01-07 Various documentation bits found in the kernel source.                                              2.6.18-371.3.1.el5
man-pages                       2012-09-10 Man (manual) pages from the Linux Documentation Project.                                            2.39-20.el5
specspo                         2013-05-15 Package descriptions, summaries, and groups.                                                        13-4.el5.centos
gpg-pubkey                      2010-12-30 gpg(CentOS-5 Key (CentOS 5 Official Signing Key) <[email protected]>)                               217521f6-45e8a53237017186-45761324e8562897-459f07a4
acl                             2012-09-10 Access control list utilities.                                                                      2.2.39-8.el5
amtu                            2011-08-30 Abstract Machine Test Utility (AMTU)                                                                1.0.6-2.el5
anacron                         2010-12-29 A cron-like program that can run jobs lost during downtime.                                         2.3-45.el5.centos
attr                            2007-09-24 Utilities for managing filesystem extended attributes.                                              2.4.32-1.1
authconfig                      2012-09-10 Command line tool for setting up authentication from network services                               5.3.21-7.el5
avahi                           2011-08-30 Local network service discovery                                                                     0.6.16-10.el5_6
avahi-glib                      2011-08-30 Glib libraries for avahi                                                                            0.6.16-10.el5_6
basesystem                      2010-12-29 The skeleton package which defines a simple CentOS system.                                          8.0-5.1.1.el5.centos
centos-release                  2014-01-07 CentOS release file                                                                                 5-10.el5.centos
centos-release-notes            2014-01-07 CentOS release notes files                                                                          5.10-0
chkconfig                       2010-07-13 A system tool for maintaining the /etc/rc*.d hierarchy.                                             1.3.30.2-2.el5
chkfontpath                     2007-12-12 Simple interface for editing the font path for the X font server.                                   1.10.1-1.1
coreutils                       2012-09-10 The GNU core utilities: a set of tools commonly used in shell scripts                               5.97-34.el5_8.1
cpuspeed                        2012-09-10 CPU frequency adjusting daemon                                                                      1.2.1-10.el5
createrepo                      2011-08-30 Creates a common metadata repository                                                                0.4.11-3.el5
crontabs                        2013-05-15 Root crontab files used to schedule the execution of programs.                                      1.10-11.el5
device-mapper                   2012-09-10 device mapper library                                                                               1.02.67-2.el5
device-mapper-event             2012-09-10 Device-mapper event daemon                                                                          1.02.67-2.el5
device-mapper-multipath         2014-01-07 Tools to manage multipath devices using device-mapper.                                              0.4.7-59.el5
dhclient                        2013-05-15 Provides the dhclient ISC DHCP client daemon and dhclient-script.                                   3.0.5-33.el5_9
dhcpv6-client                   2011-08-30 DHCPv6 client                                                                                       1.0.10-20.el5
dmidecode                       2012-09-10 Tool to analyse BIOS DMI data.                                                                      2.11-1.el5
dmraid                          2012-09-10 dmraid (Device-mapper RAID tool and library)                                                        1.0.0.rc13-65.el5
dmraid-events                   2012-09-10 dmevent_tool (Device-mapper event tool) and DSO                                                     1.0.0.rc13-65.el5
e2fsprogs                       2013-05-15 Utilities for managing the second and third extended (ext2/ext3) filesystems                        1.39-36.el5_9
eject                           2007-09-24 A program that ejects removable media using software control.                                       2.1.5-4.2.el5
environment-modules             2011-01-15 Provides dynamic modification of a user's environment                                               3.2.6-4.el5
filesystem                      2011-08-30 The basic directory layout for a Linux system.                                                      2.4.0-3.el5.centos
firstboot-tui                   2012-09-10 A text interface for firstboot                                                                      1.4.27.9-1.el5.centos
GConf2                          2007-09-24 A process-transparent configuration system                                                          2.14.0-9.el5
glibc-common                    2014-01-07 Common binaries and locale data for glibc                                                           2.5-118.el5_10.2
grub                            2014-01-07 GRUB - the Grand Unified Boot Loader.                                                               0.97-13.11.el5_10.1
hmaccalc                        2012-09-10 Tools for computing and checking HMAC values for files                                              0.9.6-4.el5
hwdata                          2014-01-07 Hardware identification and configuration data                                                      0.213.28-3.el5
ifd-egate                       2012-09-10 Axalto Egate SmartCard device driver for PCSC-lite                                                  0.05-17.el5
info                            2007-09-24 A stand-alone TTY-based reader for GNU texinfo documentation.                                       4.8-14.el5
initscripts                     2014-01-07 The inittab file and the /etc/init.d scripts.                                                       8.45.44-3.el5.centos
ipsec-tools                     2013-01-03 Tools for configuring and using IPSEC                                                               0.6.5-14.el5_8.5
iptables                        2013-01-03 Tools for managing Linux kernel packet filtering capabilities.                                      1.3.5-9.2.el5_8
iptables-ipv6                   2013-01-03 IPv6 support for iptables.                                                                          1.3.5-9.2.el5_8
iptstate                        2010-07-13 A top-like display of IP Tables state table entries                                                 1.4-2.el5
irqbalance                      2010-01-02 IRQ balancing daemon.                                                                               0.55-15.el5
kbd                             2013-05-15 Tools for configuring the console (keyboard, virtual terminals, etc.)                               1.12-22.el5
keyutils-libs                   2008-02-05 Key utilities library                                                                               1.2-1.el5
keyutils-libs-devel             2010-06-10 Development package for building linux key management utilities                                     1.2-1.el5
kpartx                          2014-01-07 Partition device manager for device-mapper devices.                                                 0.4.7-59.el5
krb5-workstation                2013-09-06 Kerberos 5 programs for use on workstations.                                                        1.6.1-70.el5_9.2
libgnomeprint22                 2008-09-03 Printing library for GNOME.                                                                         2.12.1-10.el5
libuser                         2013-05-15 A user and group account administration library.                                                    0.54.7-3.el5
logrotate                       2013-05-15 Rotates, compresses, removes and mails system log files.                                            3.7.4-14
lvm2                            2014-01-07 Userland logical volume management tools                                                            2.02.88-12.el5
mailcap                         2007-09-24 Associates helper applications with particular file types.                                          2.1.23-1.fc6
MAKEDEV                         2007-09-24 A program used for creating device files in /dev.                                                   3.23-1.2
man                             2013-05-15 A set of documentation tools: man, apropos and whatis.                                              1.6d-3.el5
mcelog                          2011-08-30 Tool to translate x86-64 CPU Machine Check Exception data.                                          0.9pre-1.32.el5
mdadm                           2013-05-15 mdadm controls Linux md devices (software RAID arrays)                                              2.6.9-5.el5
microcode_ctl                   2014-01-07 Tool to update x86/x86-64 CPU microcode.                                                            1.17-5.el5
mingetty                        2007-09-24 A compact getty program for virtual consoles only.                                                  1.07-5.2.2
mkbootdisk                      2007-09-24 Creates a boot floppy disk for booting a system.                                                    1.5.3-2.1
mkinitrd                        2014-01-07 Creates an initial ramdisk image for preloading modules.                                            5.1.19.6-81.el5_10
mktemp                          2012-09-10 A small utility for safely making /tmp files.                                                       1.5-24.el5
mpi-selector                    2010-01-02 Provides site-wide and per-user MPI implementation selection                                        1.0.2-1.el5
nash                            2014-01-07 nash shell                                                                                          5.1.19.6-81.el5_10
net-tools                       2014-01-07 Basic networking tools.                                                                             1.60-83.el5_10
NetworkManager                  2012-09-10 Network connection manager and user applications                                                    0.7.0-13.el5
nss-tools                       2014-01-07 Tools for the Network Security Services                                                             3.15.3-4.el5_10
nss_ldap                        2013-05-15 NSS library and PAM module for LDAP.                                                                253-51.el5_9.1
ntsysv                          2010-07-13 A tool to set the stop/start of system services in a runlevel.                                      1.3.30.2-2.el5
numactl                         2011-08-30 library for tuning for Non Uniform Memory Access machines                                           0.9.8-12.el5_6
openib                          2013-05-15 OpenIB Infiniband Driver Stack                                                                      1.5.4.1-4.el5
OpenIPMI                        2013-05-15 OpenIPMI (Intelligent Platform Management Interface) library and tools                              2.0.16-16.el5
pam                             2013-05-15 A security tool which provides authentication for applications                                      0.99.6.2-12.el5
pam_ccreds                      2007-09-24 Pam module to cache login credentials                                                               3-5
pam_krb5                        2012-09-10 A Pluggable Authentication Module for Kerberos 5.                                                   2.2.14-22.el5
pam_passwdqc                    2007-09-24 Pluggable password quality-control module.                                                          1.0.2-1.2.2
pam_pkcs11                      2012-09-10 PKCS #11/NSS PAM login module                                                                       0.5.3-26.el5
pam_smb                         2007-09-24 A Pluggable Authentication Module (PAM) for use with SMB servers.                                   1.1.7-7.2.1
passwd                          2011-08-30 The passwd utility for setting/changing passwords using PAM                                         0.73-2
pcmciautils                     2007-09-24 PCMCIA utilities and initialization programs                                                        014-5
pinfo                           2007-09-24 An info file viewer.                                                                                0.6.9-1.fc6
pm-utils                        2013-05-15 Power management utilities and scripts                                                              0.99.3-14.el5
policycoreutils                 2014-01-07 SELinux policy core utilities.                                                                      1.33.12-14.13.el5
prelink                         2009-04-22 An ELF prelinking utility                                                                           0.4.0-2.el5
quota                           2013-05-15 System administration tools for monitoring users' disk usage.                                       3.13-8.el5
readahead                       2010-07-13 Read a preset list of files into memory.                                                            1.3-8.el5
redhat-logos                    2010-12-29 CentOS-related icons and pictures.                                                                  4.9.99-11.el5.centos
redhat-lsb                      2011-08-30 LSB base libraries support for CentOS Enterprise Linux                                              4.0-2.1.4.el5
rhel-instnum                    2009-04-22 A library for decoding RHEL installation numbers                                                    1.0.9-1.el5
rng-utils                       2012-09-10 Random number generator related utilities                                                           2.0-5.el5
rootfiles                       2007-09-24 The basic required files for the root user's directory.                                             8.1-1.1.1
rpm                             2014-01-07 The RPM package management system                                                                   4.4.2.3-34.el5
scrollkeeper                    2008-04-09 ScrollKeeper is a cataloging system for documentation on open systems.                              0.3.14-9.el5
selinux-policy                  2014-01-07 SELinux policy configuration                                                                        2.4.6-346.el5
selinux-policy-targeted         2014-01-07 SELinux targeted base policy                                                                        2.4.6-346.el5
setools                         2007-09-24 SELinux tools for managing policy                                                                   3.0-3.el5
setup                           2012-09-10 A set of system configuration and setup files.                                                      2.5.58-9.el5
sgpio                           2010-01-02 SGPIO captive backplane tool                                                                        1.2.0_10-2.el5
shadow-utils                    2013-05-15 Utilities for managing accounts and shadow password files.                                          4.0.17-21.el5
smartmontools                   2013-05-15 Tools for monitoring SMART capable hard disks                                                       5.42-2.el5
system-config-securitylevel-tui 2011-08-30 A text interface for modifying the system security level                                            1.6.29.1-6.el5
SysVinit                        2012-09-10 Programs which control basic system processes.                                                      2.86-17.el5
termcap                         2007-09-24 The terminal feature database used by certain applications.                                         5.5-1.20060701.1
tmpwatch                        2011-08-30 A utility for removing files based on when they were last accessed.                                 2.9.7-1.1.el5.5
tzdata                          2014-01-07 Timezone data                                                                                       2013i-1.el5
tzdata-java                     2014-01-07 Timezone data for Java                                                                              2013i-1.el5
udev                            2013-05-15 A userspace implementation of devfs                                                                 095-14.29.el5
util-linux                      2013-01-03 A collection of basic system utilities.                                                             2.13-0.59.el5_8
vconfig                         2010-07-13 Linux 802.1q VLAN configuration utility                                                             1.9-3
vixie-cron                      2012-09-10 The Vixie cron daemon for executing specified programs at set times.                                4.1-81.el5
wireless-tools                  2007-09-24 Wireless ethernet configuration tools                                                               28-2.el5
wpa_supplicant                  2014-01-07 WPA/WPA2/IEEE 802.1X Supplicant                                                                     0.5.10-10.el5
xdg-utils                       2009-01-19 Basic desktop integration functions                                                                 1.0.2-4.el5
xorg-x11-filesystem             2007-09-24 X.Org X11 filesystem layout                                                                         7.1-2.fc6
yp-tools                        2012-09-10 NIS (or YP) client programs.                                                                        2.9-2.el5
yum                             2013-05-15 RPM installer/updater                                                                               3.2.22-40.el5.centos
yum-downloadonly                2012-09-10 Yum plugin to add downloadonly command option                                                       1.1.16-21.el5.centos
yum-fastestmirror               2012-09-10 Yum plugin which chooses fastest repository from a mirrorlist                                       1.1.16-21.el5.centos
yum-priorities                  2012-09-10 plugin to give priorities to packages from different repos                                          1.1.16-21.el5.centos
yum-updatesd                    2013-05-15 Update notification daemon                                                                          0.9-5.el5
acpid                           2012-09-10 ACPI Event Daemon                                                                                   1.0.4-12.el5
at                              2010-07-13 Job spooling tools.                                                                                 3.1.8-84.el5
audit                           2012-09-10 User space tools for 2.6 kernel auditing                                                            1.8-2.el5
autofs                          2014-01-07 A tool for automatically mounting and unmounting filesystems.                                       5.0.1-0.rc2.183.el5
cups                            2013-05-15 Common Unix Printing System                                                                         1.3.7-30.el5_9.3
dhcdbd                          2009-04-22 DHCP D-BUS daemon (dhcdbd) controls dhclient sessions with D-BUS, stores and presents DHCP options. 2.2-2.el5
dnsmasq                         2010-01-02 A lightweight DHCP/caching DNS server                                                               2.45-1.1.el5_3
esound                          2012-09-10 Allows several audio streams to play on a single audio device.                                      0.2.36-4
gpm                             2007-09-24 A mouse server for the Linux console.                                                               1.20.1-74.1
iputils                         2010-01-02 Network monitoring tools including ping.                                                            20020927-46.el5
iscsi-initiator-utils           2013-05-15 iSCSI daemon and utility programs                                                                   6.2.0.872-16.el5
mcstrans                        2009-04-22 SELinux Translation Daemon                                                                          0.2.11-3.el5
nfs-utils                       2014-01-07 NFS utilities and supporting clients and daemons for the kernel NFS server.                         1.0.9-70.el5
nscd                            2014-01-07 A Name Service Caching Daemon (nscd).                                                               2.5-118.el5_10.2
ntp                             2014-01-07 Synchronizes system time using the Network Time Protocol (NTP).                                     4.2.2p1-17.el5.centos
openldap                        2012-09-10 The configuration files, libraries, and documentation for OpenLDAP.                                 2.3.43-25.el5_8.1
openssh-server                  2012-09-10 The OpenSSH server daemon                                                                           4.3p2-82.el5
ORBit2                          2009-04-22 A high-performance CORBA Object Request Broker                                                      2.14.3-5.el5
pcsc-lite                       2010-12-29 PC/SC Lite smart card framework and applications                                                    1.4.4-4.el5_5
portmap                         2007-09-24 A program which manages RPC connections.                                                            4.0-65.2.2.1
postfix                         2013-05-15 Postfix Mail Transport Agent                                                                        2.3.3-6.el5
ppp                             2009-04-22 The PPP (Point-to-Point Protocol) daemon.                                                           2.4.4-2.el5
rp-pppoe                        2013-05-15 A PPP over Ethernet client (for xDSL support).                                                      3.5-33.el5
rsh-server                      2012-09-10 Servers for remote access commands (rsh, rlogin, rcp).                                              0.17-40.el5_7.1
sysklogd                        2010-07-13 System logging and kernel message trapping daemons.                                                 1.4.1-46.el5
tcp_wrappers                    2010-01-02 A security tool which acts as a wrapper for TCP daemons.                                            7.6-40.7.el5
xinetd                          2014-01-07 A secure replacement for inetd.                                                                     2.3.14-20.el5_10
xorg-x11-xfs                    2011-08-30 X.Org X11 xfs font server                                                                           1.0.2-5.el5_6.1
ypbind                          2011-08-30 The NIS daemon which binds NIS clients to an NIS domain.                                            1.19-12.el5_6.1
kernel                          2014-01-07 The Linux kernel (the core of the Linux operating system)                                           2.6.18-348.1.1.el52.6.18-371.3.1.el5
kernel-devel                    2014-01-07 Development package for building kernel modules to match the kernel.                                2.6.18-371.3.1.el5
module-init-tools               2014-01-07 Kernel module management utilities.                                                                 3.3-0.pre3.1.63.el5
setarch                         2007-09-24 Personality setter                                                                                  2.0-1.1
agg                             2009-02-12 Anti-Grain Geometry                                                                                 2.4-2.1
alsa-lib                        2009-04-22 The Advanced Linux Sound Architecture (ALSA) library.                                               1.0.17-1.el5
apr                             2011-08-30 Apache Portable Runtime library                                                                     1.2.7-11.el5_6.5
apr-util                        2010-12-29 Apache Portable Runtime Utility library                                                             1.2.7-11.el5_5.2
atk                             2007-09-24 Interfaces for accessibility support                                                                1.12.2-1.fc6
atlas                           2009-08-28 Automatically Tuned Linear Algebra Software                                                         3.8.3-1.el5
audiofile                       2007-12-12 A library for accessing various audio file formats.                                                 0.2.6-5
beecrypt                        2007-09-24 An open source cryptography library.                                                                4.1.2-10.1.1
bluez-libs                      2008-09-03 Bluetooth libraries                                                                                 3.7-1.1
boost                           2013-05-15 The Boost C++ Libraries                                                                             1.33.1-16.el5_9
boost-devel                     2013-05-15 The Boost C++ headers and development libraries                                                     1.33.1-16.el5_9
bzip2-libs                      2010-12-29 Libraries for applications using bzip2                                                              1.0.3-6.el5_5
cairo                           2008-09-03 A vector graphics library                                                                           1.2.4-5.el5
ccid                            2014-01-07 Generic USB CCID smart card reader driver                                                           1.3.8-2.el5
CodeMeter64                     2009-03-13 CodeMeter RunTimeKit for 64-bit (EM64T) Applications                                                4.0-500
compat-dapl                     2013-05-15 dapl-1.2 compat libraries                                                                           2.0.34-1.el5
compat-dapl-devel               2013-05-15 Development files for the dapl-1.2 compat libdat and libdapl libraries                              2.0.34-1.el5
compat-db                       2009-04-21 The Berkeley DB database library for Red Hat Linux 7.x compatibility.                               4.2.52-5.1
compat-libf2c-34                2011-08-30 Fortran 77 compatibility runtime                                                                    3.4.6-4.1
compat-libstdc++-33             2007-09-24 Compatibility standard C++ libraries                                                                3.2.3-61
coolkey                         2014-01-07 CoolKey PKCS #11 module                                                                             1.1.0-16.1.el5
cracklib                        2008-02-05 A password-checking library.                                                                        2.8.9-3.3
cracklib-dicts                  2008-02-05 The standard CrackLib dictionaries.                                                                 2.8.9-3.3
cups-libs                       2013-05-15 Common Unix Printing System - libraries                                                             1.3.7-30.el5_9.3
cyrus-sasl                      2012-09-10 The Cyrus SASL library.                                                                             2.1.22-7.el5_8.1
cyrus-sasl-lib                  2012-09-10 Shared libraries needed by applications which use Cyrus SASL.                                       2.1.22-7.el5_8.1
cyrus-sasl-plain                2012-09-10 PLAIN and LOGIN support for Cyrus SASL.                                                             2.1.22-7.el5_8.1
dapl                            2013-05-15 Library providing access to the DAT 1.2 and 2.0 APIs                                                2.0.34-1.el5
dapl-devel                      2013-05-15 Development files for the libdat and libdapl libraries                                              2.0.34-1.el5
db4                             2010-07-13 The Berkeley DB database library (version 4) for C.                                                 4.3.29-10.el5_5.2
dbus                            2014-01-07 D-BUS message bus                                                                                   1.1.2-21.el5
dbus-glib                       2013-05-15 GLib bindings for D-Bus                                                                             0.73-11.el5_9
dbus-python                     2010-01-02 D-Bus Python Bindings                                                                               0.70-9.el5_4
expat                           2012-09-10 A library for parsing XML.                                                                          1.95.8-11.el5_8
fftw2                           2009-01-19 Fast Fourier Transform library                                                                      2.1.5-15.el5
fftw3                           2010-03-08 Fast Fourier Transform library                                                                      3.2.2-3.el5
fipscheck                       2010-01-02 A library for integrity verification of FIPS validated modules                                      1.2.0-1.el5
fipscheck-lib                   2010-01-02 Library files for fipscheck                                                                         1.2.0-1.el5
fontconfig                      2008-02-05 Font configuration and customization library                                                        2.4.1-7.el5
freeglut                        2010-02-15 A freely licensed alternative to the GLUT library                                                   2.4.0-7.1.el5
freetype                        2013-05-15 A free and portable font rendering engine                                                           2.2.1-32.el5_9.1
gd                              2010-03-08 A graphics library for quick creation of PNG or JPEG images                                         2.0.33-9.4.el5_4.2
gdbm                            2013-05-15 A GNU set of database routines which use extensible hashing.                                        1.8.0-28.el5
giflib                          2011-08-30 Library for manipulating GIF format image files                                                     4.1.3-7.3.3.el5
glew                            2013-10-25 The OpenGL Extension Wrangler Library                                                               1.5.1-3.el5
glib2                           2009-04-22 A library of handy utility functions                                                                2.12.3-4.el5_3.1
glibc                           2014-01-07 The GNU libc libraries.                                                                             2.5-118.el5_10.2
glpk                            2009-01-19 GNU Linear Programming Kit                                                                          4.20-2.el5
gmp                             2007-09-24 A GNU arbitrary precision library.                                                                  4.1.4-10.el5
gnome-keyring                   2007-12-12 A framework for managing user passwords and other secrets                                           0.6.0-1.fc6
gnome-mime-data                 2007-12-12 MIME type data files for GNOME desktop                                                              2.4.2-3.1
gnome-vfs2                      2013-09-06 The GNOME virtual file-system libraries                                                             2.16.2-12.el5_9
gnutls                          2013-09-06 A TLS protocol implementation.                                                                      1.4.1-10.el5_9.2
gsl                             2010-07-13 The GNU Scientific Library for numerical analysis                                                   1.13-3.el5
gtk2                            2014-01-07 The GIMP ToolKit (GTK+), a library for creating GUIs for X                                          2.10.4-30.el5
hal                             2013-05-15 Hardware Abstraction Layer                                                                          0.5.8.1-64.el5
hdf5                            2010-01-02 A general purpose library and file format for storing scientific data                               1.6.10-1.el5
hesiod                          2007-09-24 Hesiod libraries.                                                                                   3.1.0-8
inchi                           2008-04-16 The IUPAC International Chemical Identifier (InChI) library                                         1.0.1-8.fc8
infiniband-diags                2013-05-15 OpenFabrics Alliance InfiniBand Diagnostic Tools                                                    1.5.12-2.el5
krb5-libs                       2013-09-06 The shared libraries used by Kerberos 5.                                                            1.6.1-70.el5_9.2
libacl                          2012-09-10 Dynamic library for access control list support.                                                    2.2.39-8.el5
libaio                          2010-07-13 Linux-native asynchronous I/O access library                                                        0.3.106-5
libart_lgpl                     2007-12-12 Library of graphics routines used by libgnomecanvas                                                 2.3.17-4
libattr                         2007-12-12 Dynamic library for extended attribute support.                                                     2.4.32-1.1
libbonobo                       2010-12-29 Bonobo component system                                                                             2.16.0-1.1.el5_5.1
libbonoboui                     2007-12-12 Bonobo user interface components                                                                    2.16.0-1.fc6
libcap                          2007-09-24 Library for getting and setting POSIX.1e capabilities                                               1.10-26
libcroco                        2008-09-18 A CSS2 parsing library                                                                              0.6.1-2.1
libdaemon                       2007-12-12 library for writing UNIX daemons                                                                    0.10-5.el5
libdmx                          2008-02-18 X.Org X11 libdmx runtime library                                                                    1.0.2-3.1
libdrm                          2007-09-24 libdrm Direct Rendering Manager runtime library                                                     2.0.2-1.1
libevent                        2010-07-13 Abstract asynchronous event notification library                                                    1.4.13-1
libfontenc                      2007-12-12 X.Org X11 libfontenc runtime library                                                                1.0.2-2.2.el5
libFS                           2007-12-12 X.Org X11 libFS runtime library                                                                     1.0.0-3.1
libgcc                          2013-05-15 GCC version 4.1 shared support library                                                              4.1.2-54.el5
libgcrypt                       2014-01-07 A general-purpose cryptography library                                                              1.4.4-7.el5_10
libgfortran                     2013-05-15 Fortran 95 runtime                                                                                  4.1.2-54.el5
libglade2                       2007-12-12 The libglade library for loading user interfaces.                                                   2.6.0-2
libgnome                        2007-12-12 GNOME base library                                                                                  2.16.0-6.el5
libgnomecanvas                  2007-12-12 GnomeCanvas widget                                                                                  2.14.0-4.1
libgnomeprintui22               2008-04-09 GUI support for libgnomeprint                                                                       2.12.1-6
libgnomeui                      2007-12-12 GNOME base GUI library                                                                              2.16.0-5.el5
libgomp                         2013-05-15 GCC OpenMP v3.0 shared support library                                                              4.4.7-1.el5
libgpg-error                    2007-09-24 libgpg-error                                                                                        1.4-2
libgsf                          2008-04-09 GNOME Structured File library                                                                       1.14.1-6.1
libgssapi                       2007-09-24 Generic Security Services Application Programming Interface Library                                 0.10-2
libhugetlbfs                    2011-08-30 Library to access the Huge TLB Filesystem                                                           1.3-8.2.el5
libibcm                         2013-05-15 Userspace InfiniBand Connection Manager                                                             1.0.5-2.el5
libibmad                        2013-05-15 OpenFabrics Alliance InfiniBand MAD library                                                         1.3.8-1.el5
libibumad                       2013-05-15 OpenFabrics Alliance InfiniBand umad (user MAD) library                                             1.3.7-1.el5
libibverbs                      2013-05-15 A library for direct userspace use of RDMA (InfiniBand/iWARP) hardware                              1.1.6-3.el5
libibverbs-devel                2013-05-15 Development files for the libibverbs library                                                        1.1.6-3.el5
libICE                          2007-09-24 X.Org X11 libICE runtime library                                                                    1.0.1-2.1
libicu                          2012-09-10 International Components for Unicode - libraries                                                    3.6-5.16.1
libIDL                          2007-12-12 Library for parsing IDL (Interface Definition Language)                                             0.8.7-1.fc6
libidn                          2007-09-24 Internationalized Domain Name support library                                                       0.6.5-1.1
libjpeg                         2014-01-07 A library for manipulating JPEG image format files.                                                 6b-38
libmng                          2013-03-04 Library for Multiple-image Network Graphics support                                                 1.0.9-5.1
libmthca                        2013-05-15 Mellanox InfiniBand HCA Userspace Driver                                                            1.0.6-1.el5
libnotify                       2007-09-24 libnotify notification library                                                                      0.4.2-6.el5
libpaper                        2010-01-15 Library and tools for handling papersize                                                            1.1.21-1.el5.1
libpng                          2012-09-10 A library of functions for manipulating PNG image format files                                      1.2.10-17.el5_8
librdmacm                       2013-05-15 Userspace RDMA Connection Manager                                                                   1.0.15-2.el5
librsvg2                        2008-04-09 An SVG library based on cairo                                                                       2.16.1-1.el5
libselinux                      2011-08-30 SELinux library and simple utilities                                                                1.33.4-5.7.el5
libsemanage                     2010-01-02 SELinux binary policy manipulation library                                                          1.9.1-4.4.el5
libsepol                        2010-07-13 SELinux binary policy manipulation library                                                          1.15.2-3.el5
libSM                           2007-09-24 X.Org X11 libSM runtime library                                                                     1.0.1-3.1
libstdc++                       2013-05-15 GNU Standard C++ Library                                                                            4.1.2-54.el5
libsysfs                        2012-09-10 Shared library for interfacing with sysfs                                                           2.1.0-1.el5
libtermcap                      2007-09-24 A basic system library for accessing the termcap database.                                          2.0.8-46.1
libtiff                         2013-01-03 Library of functions for manipulating TIFF format image files                                       3.8.2-18.el5_8
libtool-ltdl                    2010-01-02 Runtime libraries for GNU Libtool Dynamic Module Loader                                             1.5.22-7.el5_4
libusb                          2012-09-10 A library which allows userspace access to USB devices.                                             0.1.12-6.el5
libutempter                     2009-04-22 A privileged helper for utmp/wtmp updates                                                           1.1.4-4.el5
libvolume_id                    2013-05-15 Dynamic libraries to get volume ids                                                                 095-14.29.el5
libwmf                          2009-08-28 Windows Metafile Library                                                                            0.2.8.4-10.2
libwnck                         2007-09-24 Window Navigator Construction Kit                                                                   2.16.0-4.fc6
libX11                          2012-09-10 X.Org X11 libX11 runtime library                                                                    1.0.3-11.el5_7.1
libXau                          2007-09-24 X.Org X11 libXau runtime library                                                                    1.0.1-3.1
libXaw                          2009-01-19 X.Org X11 libXaw runtime library                                                                    1.0.2-8.1
libXcursor                      2012-09-10 X.Org X11 libXcursor runtime library                                                                1.1.7-1.2
libXdmcp                        2007-09-24 X.Org X11 libXdmcp runtime library                                                                  1.0.1-2.1
libXext                         2007-09-24 X.Org X11 libXext runtime library                                                                   1.0.1-2.1
libXfixes                       2007-12-12 X.Org X11 libXfixes runtime library                                                                 4.0.1-2.1
libXfont                        2012-09-10 X.Org X11 libXfont runtime library                                                                  1.2.2-1.0.4.el5_7
libXfontcache                   2009-03-12 X.Org X11 libXfontcache runtime library                                                             1.0.2-3.1
libXft                          2007-12-12 X.Org X11 libXft runtime library                                                                    2.1.10-1.1
libXi                           2010-03-08 X.Org X11 libXi runtime library                                                                     1.0.1-4.el5_4
libXinerama                     2007-09-24 X.Org X11 libXinerama runtime library                                                               1.0.1-2.1
libxkbfile                      2008-05-07 X.Org X11 libxkbfile runtime library                                                                1.0.3-3.1
libXmu                          2007-09-24 X.Org X11 libXmu/libXmuu runtime libraries                                                          1.0.2-5
libXp                           2009-01-19 X.Org X11 libXp runtime library                                                                     1.0.0-8.1.el5
libXpm                          2007-12-12 X.Org X11 libXpm runtime library                                                                    3.5.5-3
libXrandr                       2010-07-13 X.Org X11 libXrandr runtime library                                                                 1.1.1-3.3
libXrender                      2007-09-24 X.Org X11 libXrender runtime library                                                                0.9.1-3.1
libXres                         2007-09-24 X.Org X11 libXres runtime library                                                                   1.0.1-3.1
libXScrnSaver                   2011-02-24 X.Org X11 libXss runtime library                                                                    1.1.0-3.1
libXt                           2010-07-13 X.Org X11 libXt runtime library                                                                     1.0.2-3.2.el5
libXTrap                        2009-03-12 X.Org X11 libXTrap runtime library                                                                  1.0.0-3.1
libXtst                         2008-02-18 X.Org X11 libXtst runtime library                                                                   1.0.1-3.1
libXv                           2008-02-18 X.Org X11 libXv runtime library                                                                     1.0.1-4.1
libXxf86dga                     2008-02-18 X.Org X11 libXxf86dga runtime library                                                               1.0.1-3.1
libXxf86misc                    2008-02-18 X.Org X11 libXxf86misc runtime library                                                              1.0.1-3.1
libXxf86vm                      2007-09-24 X.Org X11 libXxf86vm runtime library                                                                1.0.1-3.1
m2crypto                        2013-05-15 Support for using OpenSSL in python scripts                                                         0.16-9.el5
mesa-libGL                      2013-09-06 Mesa libGL runtime libraries and DRI drivers                                                        6.5.1-7.11.el5_9
mesa-libGLU                     2013-09-06 Mesa libGLU runtime library                                                                         6.5.1-7.11.el5_9
ncurses                         2007-09-24 A terminal handling library                                                                         5.5-24.20060715
netpbm                          2012-09-10 A library for handling different graphics file formats                                              10.35.58-10.el5
newt                            2010-07-13 A development library for text mode user interfaces.                                                0.52.2-15.el5
nfs-utils-lib                   2012-09-10 Network File System Support Library                                                                 1.0.8-7.9.el5
notification-daemon             2008-09-03 Notification Daemon                                                                                 0.3.5-9.el5
nspr                            2014-01-07 Netscape Portable Runtime                                                                           4.10.2-2.el5_10
nss                             2014-01-07 Network Security Services                                                                           3.15.3-4.el5_10
nss_db                          2010-07-13 An NSS library for the Berkeley DB.                                                                 2.2-35.4.el5_5
numactl-devel                   2011-08-30 Development package for building Applications that use numa                                         0.9.8-12.el5_6
openmotif                       2014-01-07 Open Motif runtime libraries and executables.                                                       2.3.1-7.2.el5
opensm-libs                     2013-05-15 Libraries used by opensm and included utilities                                                     3.3.13-1.el5
openssl                         2013-05-15 The OpenSSL toolkit                                                                                 0.9.8e-26.el5_9.1
pango                           2012-03-02 System for layout and rendering of internationalized text                                           1.14.9-8.el5.centos.3
pcre                            2014-01-07 Perl-compatible regular expression library                                                          6.6-9.el5
pcsc-lite-libs                  2010-12-29 PC/SC Lite libraries                                                                                1.4.4-4.el5_5
pkinit-nss                      2009-04-22 PKINIT for MIT Kerberos                                                                             0.7.6-1.el5
python-ldap                     2008-11-13 An object-oriented API to access LDAP directory servers.                                            2.2.0-2.1
qhull                           2010-03-08 General dimension convex hull programs                                                              2003.1-8.el5
readline                        2010-01-02 A library for editing typed command lines.                                                          5.1-3.el5
rhpl                            2012-09-10 Library of python code used by programs in Red Hat Linux                                            0.194.1-2
SDL                             2012-09-10 A cross-platform multimedia library.                                                                1.2.10-9.el5
shared-mime-info                2008-09-03 Shared MIME information database                                                                    0.19-5.el5
slang                           2007-09-24 The shared library for the S-Lang extension language.                                               2.0.6-4.el5
startup-notification            2007-09-24 Library for tracking application startup                                                            0.8-4.1
suitesparse                     2008-06-11 A collection of sparse matrix libraries                                                             3.1.0-1.el5
words                           2009-04-22 A dictionary of English words for the /usr/share/dict directory.                                    3.0-9.1
Xaw3d                           2007-12-12 A version of the MIT Athena widget set for X.                                                       1.5E-10.1
xbae                            2009-01-19 Motif matrix, caption and text input widgets                                                        4.60.4-8.el5
xmlrpc-c                        2012-09-10 A lightweight RPC library based on XML and HTTP                                                     1.16.24-1206.1840.4.el5
xmlrpc-c-client                 2012-09-10 C client libraries for xmlrpc-c                                                                     1.16.24-1206.1840.4.el5
xz-libs                         2012-09-10 Libraries for decoding LZMA compression                                                             4.999.9-0.3.beta.20091007git.el5
zlib                            2013-05-15 The zlib compression and decompression library.                                                     1.2.3-7.el5
bash                            2013-09-06 The GNU Bourne Again shell (bash) version 3.2                                                       3.2-32.el5_9.1
tcsh                            2010-12-29 An enhanced version of csh, the C shell.                                                            6.14-17.el5_5.2
hicolor-icon-theme              2008-02-05 Basic requirement for icon themes                                                                   0.9-2.1
redhat-menus                    2009-04-22 Configuration and data files for the desktop menus                                                  6.7.8-3.el5
vnc                             2011-08-30 A remote display system.                                                                            4.1.2-14.el5_6.6
bitstream-vera-fonts            2010-01-02 Bitstream Vera Fonts                                                                                1.10-7
imake                           2008-09-18 imake source code configuration and build system                                                    1.0.2-3
liberation-fonts                2012-09-10 Fonts to replace commonly used Microsoft Windows Fonts                                              1.0-1.el5
urw-fonts                       2008-04-09 Free versions of the 35 standard PostScript fonts.                                                  2.3-6.1.1
vnc-server                      2011-08-30 A VNC server.                                                                                       4.1.2-14.el5_6.6
xorg-x11-apps                   2008-05-07 X.Org X11 applications                                                                              7.1-4.0.1.el5
xorg-x11-font-utils             2011-08-30 X.Org X11 font utilities                                                                            7.1-3
xorg-x11-fonts-100dpi           2009-02-12 A set of 100dpi resolution fonts for the X Window System.                                           7.1-2.1.el5
xorg-x11-fonts-base             2009-03-12 Base fonts required by the X Window System.                                                         7.1-2.1.el5
xorg-x11-fonts-ISO8859-1-100dpi 2010-01-15 A set of 100dpi ISO-8859-1 fonts for X.                                                             7.1-2.1.el5
xorg-x11-fonts-ISO8859-1-75dpi  2007-12-12 A set of 75dpi ISO-8859-1 fonts for X.                                                              7.1-2.1.el5
xorg-x11-server-utils           2011-08-30 X.Org X11 X server utilities                                                                        7.1-5.el5_6.2
xorg-x11-utils                  2008-02-18 X.Org X11 X client utilities                                                                        7.1-2.fc6
xorg-x11-xauth                  2007-09-24 X.Org X11 X authority utilities                                                                     1.0.1-2.1
xterm                           2010-01-02 xterm terminal emulator for the X Window System                                                     215-8.el5_4.1
clusterit                       2009-08-28 clusterit is a collection of tools for distributed computing.                                       2.5-1
jpackage-utils                  2013-05-15 JPackage utilities                                                                                  1.7.3-1jpp.3.el5
lustre-client                   2013-05-15 Lustre File System                                                                                  1.8.9-wc1_2.6.18_348.1.1.el5

Key to columns

• Name: Leads to the package descriptions below.
• Date: Install date
• Summary: A one-line description.
• Versions: The version shown in bold is the default.






|--------------------------- # Descriptions


|--------------------------- ## None


|--------------------------- ### cpio

• 2.6-26.el5


|--------------------------- ### dump

• 0.4b41-6.el5


|--------------------------- ### pax

• 3.4-2.el5_4


|--------------------------- ### rmt

• 0.4b41-6.el5


|--------------------------- ### tar

• 1.15.1-32.el5_8


|--------------------------- ### unzip

• 5.52-3.el5


|--------------------------- ### zip

• 2.31-2.el5


|--------------------------- ## None


|--------------------------- ### mgetty

• 1.1.33-9.fc6


|--------------------------- ## None


|--------------------------- ### mysql

• 5.0.95-5.el5_9


|--------------------------- ### postgresql-libs

• 8.1.23-6.el5_8


|--------------------------- ### sqlite

• 3.3.6-7


|--------------------------- ## None


|--------------------------- ### emacs

• 21.4-24.el5


|--------------------------- ### emacs-common

• 21.4-24.el5


|--------------------------- ### nano

• 1.3.12-1.1


|--------------------------- ### nedit

• 5.5-16.el5, 5.5-21.el5


|--------------------------- ### vim-common

• 7.0.109-7.2.el5


|--------------------------- ### vim-enhanced

• 7.0.109-7.2.el5


|--------------------------- ### vim-minimal

• 7.0.109-7.2.el5


|--------------------------- ## None


|--------------------------- ### bc

• 1.06-21


|--------------------------- ### gnuplot

• 4.0.0-14.el5


|--------------------------- ### grace

• 5.1.22-2.el5


|--------------------------- ### libxc

• 2.0.1-1.el5


|--------------------------- ### netcdf

• 3.6.3-1.el5

• Self-Describing: A NetCDF file includes information about the data it contains.
• Network-transparent: A NetCDF file is represented in a form that can be accessed by computers with different ways of storing integers, characters, and floating-point numbers.
• Direct-access: A small subset of a large dataset may be accessed efficiently, without first reading through all the preceding data.
• Appendable: Data can be appended to a NetCDF dataset along one dimension without copying the dataset or redefining its structure. The structure of a NetCDF dataset can be changed, though this sometimes causes the dataset to be copied.
• Sharable: One writer and multiple readers may simultaneously access the same NetCDF file.


|--------------------------- ### octave

• 3.0.5-1.el5


|--------------------------- ### pymol

• 1.1-14.20081015svn3468.el5


|--------------------------- ### R

• 2.15.2-1.el5


|--------------------------- ### R-core

• 2.15.2-1.el5


|--------------------------- ### R-devel

• 2.15.2-1.el5


|--------------------------- ## None


|--------------------------- ### bzip2

• 1.0.3-6.el5_5


|--------------------------- ### file

• 4.17-28


|--------------------------- ### findutils

• 4.2.27-6.el5


|--------------------------- ### gzip

• 1.3.5-13.el5.centos


|--------------------------- ### openbabel

• 2.1.1-1.fc8


|--------------------------- ### pbzip2

• 1.1.1-1.el5


|--------------------------- ### pigz

• 2.2.5-1.el5


|--------------------------- ### tree

• 1.5.0-4


|--------------------------- ### xz

• 4.999.9-0.3.beta.20091007git.el5


|--------------------------- ## None


|--------------------------- ### curl

• 7.15.5-17.el5_9


|--------------------------- ### finger

• 0.17-33


|--------------------------- ### firefox

• 24.2.0-1.0.1.el5.centos


|--------------------------- ### ftp

• 0.17-38.el5


|--------------------------- ### ganglia

• 3.0.7-2


|--------------------------- ### ganglia-gmond

• 3.0.7-2


|--------------------------- ### htmlview

• 4.0.0-2.el5


|--------------------------- ### jwhois

• 3.2.3-12.el5


|--------------------------- ### lftp

• 3.7.11-8.el5


|--------------------------- ### lynx

• 2.8.5-28.1.el5_2.1


|--------------------------- ### mailx

• 8.1.1-44.2.2


|--------------------------- ### mtr

• 0.71-3.1


|--------------------------- ### mutt

• 1.4.2.2-6.el5


|--------------------------- ### nc

• 1.84-10.fc6


|--------------------------- ### openldap-clients

• 2.3.43-25.el5_8.1


|--------------------------- ### openssh

• 4.3p2-82.el5


|--------------------------- ### openssh-clients

• 4.3p2-82.el5


|--------------------------- ### rsync

• 3.0.6-4.el5_7.1


|--------------------------- ### stunnel

• 4.15-2.el5.1


|--------------------------- ### talk

• 0.17-31.el5


|--------------------------- ### tcpdump

• 3.9.4-15.el5


|--------------------------- ### telnet

• 0.17-41.el5


|--------------------------- ### traceroute

• 2.0.1-6.el5


|--------------------------- ### wget

• 1.11.4-3.el5_8.2


|--------------------------- ### xulrunner

• 17.0.10-1.el5_10


|--------------------------- ## None


|--------------------------- ### ImageMagick

• 6.2.8.0-15.el5_8


|--------------------------- ### netpbm-progs

• 10.35.58-10.el5


|--------------------------- ### transfig

• 3.2.4-16


|--------------------------- ### xfig

• 3.2.4-21.3.el5


|--------------------------- ## None


|--------------------------- ### lcms

• 1.18-0.1.beta1.el5_3.2


|--------------------------- ## None


|--------------------------- ### a2ps

• 4.13b-57.2.el5


|--------------------------- ### evince

• 0.6.0-17.el5


|--------------------------- ### ghostscript

• 8.70-15.el5_9.3


|--------------------------- ### ghostscript-fonts

• 5.50-13.1.1


|--------------------------- ### groff

• 1.18.1.1-13.el5


|--------------------------- ### gv

• 3.7.1-1.el5


|--------------------------- ### latex2html

• 2002.2.1-6


|--------------------------- ### neon

• 0.25.5-10.el5_4.1


|--------------------------- ### paps

• 0.6.6-20.el5


|--------------------------- ### psutils

• 1.17-26.1


|--------------------------- ### t1lib

• 5.1.1-9.el5


|--------------------------- ### tetex

• 3.0-33.15.el5_8.1


|--------------------------- ### tetex-dvips

• 3.0-33.15.el5_8.1


|--------------------------- ### tetex-fonts

• 3.0-33.15.el5_8.1


|--------------------------- ### tetex-latex

• 3.0-33.15.el5_8.1


|--------------------------- ### texinfo

• 4.8-14.el5


|--------------------------- ### texinfo-tex

• 4.8-14.el5


|--------------------------- ### xpdf

• 3.03-8.el5.1


|--------------------------- ## None


|--------------------------- ### ksh

• 20100621-18.el5


|--------------------------- ## None


|--------------------------- ### bind-libs

• 9.3.6-20.P1.el5_8.6


|--------------------------- ### bind-utils

• 9.3.6-20.P1.el5_8.6


|--------------------------- ### bluez-gnome

• 0.5-5.fc6


|--------------------------- ### bluez-utils

• 3.7-2.2.el5.centos

1. hcitool
2. hciattach
3. hciconfig
4. hcid
5. l2ping
6. start scripts (CentOS)
7. pcmcia configuration files


|--------------------------- ### None

• 1.03a-6.el5


|--------------------------- ### collectl

• 3.6.9-1.el5


|--------------------------- ### conman

• 0.1.9.2-8.el5

• mapping symbolic names to console devices
• logging all output from a console device to file
• supporting monitor (R/O), interactive (R/W), and broadcast (W/O) modes of console access
• allowing clients to join or steal console "write" privileges
• executing Expect scripts across multiple consoles in parallel


|--------------------------- ### cryptsetup-luks

• 1.0.3-8.el5


|--------------------------- ### dialog

• 1.0.20051107-1.2.2


|--------------------------- ### dosfstools

• 2.11-9.el5


|--------------------------- ### ethtool

• 6-4.el5


|--------------------------- ### fbset

• 2.1-22


|--------------------------- ### gnome-mount

• 0.5-3.el5


|--------------------------- ### gnupg

• 1.4.5-18.el5_10


|--------------------------- ### hdparm

• 6.6-2


|--------------------------- ### hwloc

• 1.1-0.el5


|--------------------------- ### iproute

• 2.6.18-15.el5


|--------------------------- ### irda-utils

• 0.9.17-2.fc6


|--------------------------- ### kudzu

• 1.2.57.1.26-7.el5.centos


|--------------------------- ### lm_sensors

• 2.10.7-9.el5


|--------------------------- ### logwatch

• 7.3-10.el5


|--------------------------- ### mlocate

• 0.15-1.el5.2


|--------------------------- ### mtools

• 3.9.10-2.fc6


|--------------------------- ### OpenIPMI-tools

• 2.0.16-16.el5


|--------------------------- ### parted

• 1.8.1-30.el5


|--------------------------- ### pciutils

• 3.1.7-5.el5


|--------------------------- ### procps

• 3.2.7-26.el5


|--------------------------- ### psacct

• 6.3.2-44.el5


|--------------------------- ### psmisc

• 22.2-11


|--------------------------- ### python-libs

• 2.4.3-56.el5


|--------------------------- ### rdate

• 1.4-8.el5


|--------------------------- ### rdist

• 6.1.5-44


|--------------------------- ### rsnapshot

• 1.3.1-12.el5


|--------------------------- ### screen

• 4.0.3-4.el5


|--------------------------- ### setserial

• 2.17-19.2.2


|--------------------------- ### setuptool

• 1.19.2-1.el5.centos


|--------------------------- ### stress

• 1.0.2-1


|--------------------------- ### sudo

• 1.7.2p1-28.el5


|--------------------------- ### symlinks

• 1.2-26.el5


|--------------------------- ### syslinux

• 4.02-7.2.el5


|--------------------------- ### system-config-network-tui

• 1.3.99.21-1.el5


|--------------------------- ### system-switch-mail

• 0.5.25-13.el5


|--------------------------- ### time

• 1.7-27.2.2


|--------------------------- ### torque

• 4.1.7-2carbon


|--------------------------- ### torque-client

• 4.1.7-2carbon


|--------------------------- ### torque-devel

• 4.1.7-2carbon


|--------------------------- ### ttmkfdir

• 3.0.9-23.el5


|--------------------------- ### usbutils

• 0.71-2.1


|--------------------------- ### usermode

• 1.88-3.el5.2


|--------------------------- ### which

• 2.16-7


|--------------------------- ## None


|--------------------------- ### aspell

• 0.60.3-13


|--------------------------- ### aspell-en

• 6.0-3


|--------------------------- ### diffutils

• 2.8.1-16.el5


|--------------------------- ### docbook-dtds

• 1.0-30.1


|--------------------------- ### dos2unix

• 3.1-27.2.el5


|--------------------------- ### ed

• 0.2-39.el5_2


|--------------------------- ### gawk

• 3.1.5-16.el5


|--------------------------- ### grep

• 2.5.1-55.el5


|--------------------------- ### less

• 436-9.el5


|--------------------------- ### m4

• 1.4.5-3.el5.1


|--------------------------- ### openjade

• 1.3.2-27


|--------------------------- ### opensp

• 1.5.2-4


|--------------------------- ### poppler-utils

• 0.5.4-19.el5_9.2


|--------------------------- ### sed

• 4.1.5-8.el5


|--------------------------- ### sgml-common

• 0.6.3-18


|--------------------------- ### unix2dos

• 2.2-26.2.3.el5


|--------------------------- ### xml-common

• 0.6.3-18


|--------------------------- ## None


|--------------------------- ### crash

• 5.1.8-2.el5.centos


|--------------------------- ### gdb

• 7.0.1-45.el5.centos


|--------------------------- ### lsof

• 4.78-6


|--------------------------- ### strace

• 4.5.18-18.el5


|--------------------------- ### valgrind

• 3.5.0-5.el5


|--------------------------- ## None


|--------------------------- ### lustre-client-modules

• 1.8.9-wc1_2.6.18_348.1.1.el5


|--------------------------- ### lustre-source

• 1.8.3-2.6.18_164.11.1.el5_lustre.1.8.3


|--------------------------- ## None


|--------------------------- ### cpp

• 4.1.2-54.el5


|--------------------------- ### expect

• 5.43.0-8.el5


|--------------------------- ### gcc

• 4.1.2-54.el5


|--------------------------- ### None

• 4.1.2-54.el5


|--------------------------- ### gcc-gfortran

• 4.1.2-54.el5


|--------------------------- ### guile

• 1.8.0-8.20060831cvs


|--------------------------- ### numpy

• 1.2.1-2.el5


|--------------------------- ### perl

• 5.8.8-41.el5


|--------------------------- ### perl-suidperl

• 5.8.8-41.el5


|--------------------------- ### pexpect

• 2.3-3.el5


|--------------------------- ### pycairo

• 1.2.0-1.1


|--------------------------- ### pygobject2

• 2.12.1-5.el5


|--------------------------- ### pygobject2-devel

• 2.12.1-5.el5


|--------------------------- ### pygobject2-doc

• 2.12.1-5.el5


|--------------------------- ### pygtk2

• 2.10.1-12.el5


|--------------------------- ### pygtk2-codegen

• 2.10.1-12.el5


|--------------------------- ### pygtk2-devel

• 2.10.1-12.el5


|--------------------------- ### pygtk2-libglade

• 2.10.1-12.el5


|--------------------------- ### python

• 2.4.3-56.el5


|--------------------------- ### python-dateutil

• 1.2-3.el5


|--------------------------- ### python-decoratortools

• 1.7-1.el5


|--------------------------- ### python-docutils

• 0.5-3.el5


|--------------------------- ### python-imaging

• 1.1.5-7.el5


|--------------------------- ### python-nose

• 0.11.3-2.el5


|--------------------------- ### python-numeric

• 23.7-2.2.2.el5_6.1


|--------------------------- ### python-setuptools

• 0.6c7-1.el5


|--------------------------- ### pytz

• 2010h-1.el5


|--------------------------- ### tcl

• 8.4.13-6.el5


|--------------------------- ### tcl-devel

• 8.4.13-6.el5


|--------------------------- ### tclx

• 8.4.0-5.fc6


|--------------------------- ### tclx-devel

• 8.4.0-5.fc6


|--------------------------- ### tix

• 8.4.0-11.fc6


|--------------------------- ### tk

• 8.4.13-5.el5_1.1


|--------------------------- ### tk-devel

• 8.4.13-5.el5_1.1


|--------------------------- ### tkinter

• 2.4.3-56.el5


|--------------------------- ### unifdef

• 1.171-5.fc6


|--------------------------- ## None


|--------------------------- ### atk-devel

• 1.12.2-1.fc6


|--------------------------- ### audit-libs

• 1.8-2.el5


|--------------------------- ### audit-libs-python

• 1.8-2.el5


|--------------------------- ### avahi-compat-libdns_sd

• 0.6.16-10.el5_6


|--------------------------- ### blas

• 3.0-38.el5


|--------------------------- ### blas-devel

• 3.0-38.el5


|--------------------------- ### bzip2-devel

• 1.0.3-6.el5_5


|--------------------------- ### cairo-devel

• 1.2.4-5.el5


|--------------------------- ### curl-devel

• 7.15.5-17.el5_9


|--------------------------- ### dbus-libs

• 1.1.2-21.el5


|--------------------------- ### e2fsprogs-devel

• 1.39-36.el5_9


|--------------------------- ### e2fsprogs-libs

• 1.39-36.el5_9


|--------------------------- ### fftw2-devel

• 2.1.5-15.el5


|--------------------------- ### fftw3-devel

• 3.2.2-3.el5


|--------------------------- ### fontconfig-devel

• 2.4.1-7.el5


|--------------------------- ### freetype-devel

• 2.2.1-32.el5_9.1


|--------------------------- ### gamin

• 0.1.7-10.el5


|--------------------------- ### gamin-python

• 0.1.7-10.el5


|--------------------------- ### gd-devel

• 2.0.33-9.4.el5_4.2


|--------------------------- ### glew-devel

• 1.5.1-3.el5


|--------------------------- ### glib2-devel

• 2.12.3-4.el5_3.1


|--------------------------- ### glibc-devel

• 2.5-118.el5_10.2


|--------------------------- ### glibc-headers

• 2.5-118.el5_10.2


|--------------------------- ### glx-utils

• 6.5.1-7.11.el5_9


|--------------------------- ### gmp-devel

• 4.1.4-10.el5


|--------------------------- ### grace-devel

• 5.1.22-2.el5


|--------------------------- ### gsl-devel

• 1.13-3.el5


|--------------------------- ### gtk2-devel

• 2.10.4-30.el5


|--------------------------- ### guile-devel

• 1.8.0-8.20060831cvs


|--------------------------- ### hdf5-devel

• 1.6.10-1.el5


|--------------------------- ### hwloc-devel

• 1.1-0.el5


|--------------------------- ### itcl

• 3.3-0.7.RC1.el5


|--------------------------- ### itk

• 3.3-0.4.RC1.el5


|--------------------------- ### iwidgets

• 4.0.1-4.el5


|--------------------------- ### krb5-devel

• 1.6.1-70.el5_9.2


|--------------------------- ### lapack

• 3.0-38.el5


|--------------------------- ### lapack-devel

• 3.0-38.el5


|--------------------------- ### libgnomecups

• 0.2.2-9


|--------------------------- ### libICE-devel

• 1.0.1-2.1


|--------------------------- ### libidn-devel

• 0.6.5-1.1


|--------------------------- ### libjpeg-devel

• 6b-38


|--------------------------- ### libnl

• 1.0-0.10.pre5.5


|--------------------------- ### libpcap

• 0.9.4-15.el5


|--------------------------- ### libpng-devel

• 1.2.10-17.el5_8


|--------------------------- ### libRmath

• 2.15.2-1.el5


|--------------------------- ### libRmath-devel

• 2.15.2-1.el5


|--------------------------- ### libselinux-devel

• 1.33.4-5.7.el5


|--------------------------- ### libselinux-python

• 1.33.4-5.7.el5


|--------------------------- ### libselinux-utils

• 1.33.4-5.7.el5


|--------------------------- ### libsepol-devel

• 1.15.2-3.el5


|--------------------------- ### libSM-devel

• 1.0.1-3.1


|--------------------------- ### None

• 4.1.2-54.el5


|--------------------------- ### libsysfs-devel

• 2.1.0-1.el5


|--------------------------- ### libtermcap-devel

• 2.0.8-46.1


|--------------------------- ### libtiff-devel

• 3.8.2-18.el5_8


|--------------------------- ### libX11-devel

• 1.0.3-11.el5_7.1


|--------------------------- ### libXau-devel

• 1.0.1-3.1


|--------------------------- ### libXcursor-devel

• 1.1.7-1.2


|--------------------------- ### libXdmcp-devel

• 1.0.1-2.1


|--------------------------- ### libXext-devel

• 1.0.1-2.1


|--------------------------- ### libXfixes-devel

• 4.0.1-2.1


|--------------------------- ### libXft-devel

• 2.1.10-1.1


|--------------------------- ### libXi-devel

• 1.0.1-4.el5_4


|--------------------------- ### libXinerama-devel

• 1.0.1-2.1


|--------------------------- ### libxml2

• 2.6.26-2.1.21.el5_9.3


|--------------------------- ### libxml2-devel

• 2.6.26-2.1.21.el5_9.3


|--------------------------- ### libxml2-python

• 2.6.26-2.1.21.el5_9.3


|--------------------------- ### libXpm-devel

• 3.5.5-3


|--------------------------- ### libXrandr-devel

• 1.1.1-3.3


|--------------------------- ### libXrender-devel

• 0.9.1-3.1


|--------------------------- ### libxslt

• 1.1.17-4.el5_8.3


|--------------------------- ### libXt-devel

• 1.0.2-3.2.el5


|--------------------------- ### libyaml

• 0.1.2-3.el5


|--------------------------- ### mesa-libGL-devel

• 6.5.1-7.11.el5_9


|--------------------------- ### mesa-libGLU-devel

• 6.5.1-7.11.el5_9


|--------------------------- ### nautilus-extensions

• 2.16.2-10.el5


|--------------------------- ### ncurses-devel

• 5.5-24.20060715

• /usr/include/ncursesw -lncursesw (compile and link against the wide-character, UTF-8, library)


|--------------------------- ### net-snmp-libs

• 5.3.2.2-20.el5


|--------------------------- ### netcdf-devel

• 3.6.3-1.el5


|--------------------------- ### NetworkManager-glib

• 0.7.0-13.el5


|--------------------------- ### octave-devel

• 3.0.5-1.el5


|--------------------------- ### OpenIPMI-libs

• 2.0.16-16.el5


|--------------------------- ### openmpi

• 1.4-7.el5


|--------------------------- ### openmpi-devel

• 1.4-7.el5


|--------------------------- ### openmpi-libs

• 1.4-7.el5


|--------------------------- ### openssl-devel

• 0.9.8e-26.el5_9.1


|--------------------------- ### pam-devel

• 0.99.6.2-12.el5


|--------------------------- ### pango-devel

• 1.14.9-8.el5.centos.3


|--------------------------- ### pcre-devel

• 6.6-9.el5


|--------------------------- ### perl-Compress-Zlib

• 1.42-1.fc6


|--------------------------- ### perl-Convert-ASN1

• 0.20-1.1


|--------------------------- ### perl-Crypt-SSLeay

• 0.51-11.el5


|--------------------------- ### perl-DBI

• 1.52-2.el5


|--------------------------- ### perl-Error

• 0.17010-1.el5


|--------------------------- ### perl-Git

• 1.8.2.1-1.el5


|--------------------------- ### perl-HTML-Parser

• 3.55-1.fc6


|--------------------------- ### perl-HTML-Tagset

• 3.10-2.1.1


|--------------------------- ### perl-IO-Interface

• 1.03-1.el5.2


|--------------------------- ### perl-IO-Socket-SSL

• 1.01-2.el5


|--------------------------- ### perl-IO-Tty

• 1.07-2.el5.1


|--------------------------- ### perl-LDAP

• 0.33-4.el5_8


|--------------------------- ### perl-libwww-perl

• 5.805-1.1.1


|--------------------------- ### perl-Net-SSLeay

• 1.30-4.fc6


|--------------------------- ### perl-String-CRC32

• 1.4-2.fc6


|--------------------------- ### perl-TermReadKey

• 2.30-4.el5


|--------------------------- ### perl-Time-Piece

• 1.09-2.el5


|--------------------------- ### perl-URI

• 1.35-3


|--------------------------- ### perl-XML-NamespaceSupport

• 1.09-1.2.1


|--------------------------- ### perl-XML-SAX

• 0.14-13.el5


|--------------------------- ### poppler

• 0.5.4-19.el5_9.2


|--------------------------- ### popt

• 1.10.2.3-34.el5


|--------------------------- ### pycairo-devel

• 1.2.0-1.1


|--------------------------- ### pyOpenSSL

• 0.7-6.el5

• SSL.Connection objects, wrapping the methods of Python's portable sockets
• Callbacks written in Python
• Extensive error-handling mechanism, mirroring OpenSSL's error codes ... and much more ;)


|--------------------------- ### python-ctypes

• 1.0.2-3.el5


|--------------------------- ### python-devel

• 2.4.3-56.el5


|--------------------------- ### python-elementtree

• 1.2.6-5


|--------------------------- ### python-hashlib

• 20081119-4.el5


|--------------------------- ### python-iniparse

• 0.2.4-1.el5


|--------------------------- ### python-lxml

• 2.0.11-2.el5


|--------------------------- ### python-matplotlib

• 0.99.1.2-1.el5


|--------------------------- ### python-matplotlib-tk

• 0.99.1.2-1.el5


|--------------------------- ### python-pmw

• 1.3.2-5.el5


|--------------------------- ### python-sqlite

• 1.1.7-1.2.1


|--------------------------- ### python-urlgrabber

• 3.1.0-6.el5


|--------------------------- ### PyYAML

• 3.08-4.el5


|--------------------------- ### qhull-devel

• 2003.1-8.el5


|--------------------------- ### readline-devel

• 5.1-3.el5


|--------------------------- ### rpm-libs

• 4.4.2.3-34.el5


|--------------------------- ### rpm-python

• 4.4.2.3-34.el5


|--------------------------- ### sos

• 1.7-9.66.el5.centos


|--------------------------- ### sqlite-devel

• 3.3.6-7


|--------------------------- ### yum-metadata-parser

• 1.1.2-4.el5


|--------------------------- ### zlib-devel

• 1.2.3-7.el5


|--------------------------- ## None


|--------------------------- ### checkpolicy

• 1.33.1-6.el5


|--------------------------- ### kernel-headers

• 2.6.18-371.3.1.el5


|--------------------------- ### opensm-devel

• 3.3.13-1.el5


|--------------------------- ### redhat-rpm-config

• 8.0.45-32.el5.centos


|--------------------------- ### xorg-x11-proto-devel

• 7.1-13.el5


|--------------------------- ## None


|--------------------------- ### autoconf

• 2.59-12


|--------------------------- ### automake

• 1.9.6-2.3.el5


|--------------------------- ### binutils

• 2.17.50.0.6-26.el5


|--------------------------- ### cmake

• 2.6.4-5.el5.4


|--------------------------- ### ctags

• 5.6-1.1


|--------------------------- ### cvs

• 1.11.22-11.el5_8.1


|--------------------------- ### desktop-file-utils

• 0.10-7


|--------------------------- ### doxygen

• 1.4.7-2


|--------------------------- ### elfutils

• 0.137-3.el5


|--------------------------- ### elfutils-libelf

• 0.137-3.el5


|--------------------------- ### elfutils-libs

• 0.137-3.el5


|--------------------------- ### flex

• 2.5.4a-41.fc6


|--------------------------- ### gettext

• 0.17-1.el5


|--------------------------- ### git

• 1.8.2.1-1.el5


|--------------------------- ### git-gui

• 1.8.2.1-1.el5


|--------------------------- ### gitk

• 1.8.2.1-1.el5


|--------------------------- ### jdk

• 1.6.0_27-fcs


|--------------------------- ### jre

• 1.6.0_27-fcs


|--------------------------- ### libtool

• 1.5.22-7.el5_4


|--------------------------- ### make

• 3.81-3.el5


|--------------------------- ### mock

• 1.0.37-1.el5


|--------------------------- ### patch

• 2.5.4-31.el5


|--------------------------- ### pkgconfig

• 0.21-2.el5


|--------------------------- ### python-tools

• 2.4.3-56.el5


|--------------------------- ### rcs

• 5.7-30.1


|--------------------------- ### rpm-build

• 4.4.2.3-34.el5


|--------------------------- ### subversion

• 1.6.11-11.el5_9


|--------------------------- ### sysfsutils

• 2.1.0-1.el5


|--------------------------- ### yum-utils

• 1.1.16-21.el5.centos


|--------------------------- ## Documentation


|--------------------------- ### Deployment_Guide-en-US

• 5.8-1.el5.centos


|--------------------------- ### kernel-doc

• 2.6.18-371.3.1.el5


|--------------------------- ### man-pages

• 2.39-20.el5


|--------------------------- ### specspo

• 13-4.el5.centos


|--------------------------- ## Public Keys


|--------------------------- ### gpg-pubkey

• e8562897-459f07a4

• 217521f6-45e8a532

• 37017186-45761324


|--------------------------- ## None


|--------------------------- ### acl

• 2.2.39-8.el5


|--------------------------- ### amtu

• 1.0.6-2.el5


|--------------------------- ### anacron

• 2.3-45.el5.centos


|--------------------------- ### attr

• 2.4.32-1.1


|--------------------------- ### authconfig

• 5.3.21-7.el5


|--------------------------- ### avahi

• 0.6.16-10.el5_6


|--------------------------- ### avahi-glib

• 0.6.16-10.el5_6


|--------------------------- ### basesystem

• 8.0-5.1.1.el5.centos


|--------------------------- ### centos-release

• 5-10.el5.centos


|--------------------------- ### centos-release-notes

• 5.10-0


|--------------------------- ### chkconfig

• 1.3.30.2-2.el5


|--------------------------- ### chkfontpath

• 1.10.1-1.1


|--------------------------- ### coreutils

• 5.97-34.el5_8.1


|--------------------------- ### cpuspeed

• 1.2.1-10.el5


|--------------------------- ### createrepo

• 0.4.11-3.el5


|--------------------------- ### crontabs

• 1.10-11.el5


|--------------------------- ### device-mapper

• 1.02.67-2.el5


|--------------------------- ### device-mapper-event

• 1.02.67-2.el5


|--------------------------- ### device-mapper-multipath

• 0.4.7-59.el5

• multipath : Scan the system for multipath devices and assemble them.
• multipathd : Detects when paths fail and execs multipath to update things.


|--------------------------- ### dhclient

• 3.0.5-33.el5_9


|--------------------------- ### dhcpv6-client

• 1.0.10-20.el5


|--------------------------- ### dmidecode

• 2.11-1.el5


|--------------------------- ### dmraid

• 1.0.0.rc13-65.el5


|--------------------------- ### dmraid-events

• 1.0.0.rc13-65.el5


|--------------------------- ### e2fsprogs

• 1.39-36.el5_9


|--------------------------- ### eject

• 2.1.5-4.2.el5


|--------------------------- ### environment-modules

• 3.2.6-4.el5


|--------------------------- ### filesystem

• 2.4.0-3.el5.centos


|--------------------------- ### firstboot-tui

• 1.4.27.9-1.el5.centos


|--------------------------- ### GConf2

• 2.14.0-9.el5


|--------------------------- ### glibc-common

• 2.5-118.el5_10.2


|--------------------------- ### grub

• 0.97-13.11.el5_10.1


|--------------------------- ### hmaccalc

• 0.9.6-4.el5


|--------------------------- ### hwdata

• 0.213.28-3.el5


|--------------------------- ### ifd-egate

• 0.05-17.el5


|--------------------------- ### info

• 4.8-14.el5


|--------------------------- ### initscripts

• 8.45.44-3.el5.centos


|--------------------------- ### ipsec-tools

• 0.6.5-14.el5_8.5

• setkey, a program to directly manipulate policies and SAs
• racoon, an IKEv1 keying daemon


|--------------------------- ### iptables

• 1.3.5-9.2.el5_8


|--------------------------- ### iptables-ipv6

• 1.3.5-9.2.el5_8


|--------------------------- ### iptstate

• 1.4-2.el5

1. Top-like realtime state table information
2. Sorting by any field
3. Reversible sorting
4. Single display of state table
5. Customizable refresh rate
6. Open Source (specifically I'm using the zlib license)


|--------------------------- ### irqbalance

• 0.55-15.el5


|--------------------------- ### kbd

• 1.12-22.el5


|--------------------------- ### keyutils-libs

• 1.2-1.el5


|--------------------------- ### keyutils-libs-devel

• 1.2-1.el5


|--------------------------- ### kpartx

• 0.4.7-59.el5


|--------------------------- ### krb5-workstation

• 1.6.1-70.el5_9.2


|--------------------------- ### libgnomeprint22

• 2.12.1-10.el5


|--------------------------- ### libuser

• 0.54.7-3.el5


|--------------------------- ### logrotate

• 3.7.4-14


|--------------------------- ### lvm2

• 2.02.88-12.el5


|--------------------------- ### mailcap

• 2.1.23-1.fc6


|--------------------------- ### MAKEDEV

• 3.23-1.2


|--------------------------- ### man

• 1.6d-3.el5


|--------------------------- ### mcelog

• 0.9pre-1.32.el5


|--------------------------- ### mdadm

• 2.6.9-5.el5


|--------------------------- ### microcode_ctl

• 1.17-5.el5


|--------------------------- ### mingetty

• 1.07-5.2.2


|--------------------------- ### mkbootdisk

• 1.5.3-2.1


|--------------------------- ### mkinitrd

• 5.1.19.6-81.el5_10


|--------------------------- ### mktemp

• 1.5-24.el5


|--------------------------- ### mpi-selector

• 1.0.2-1.el5


|--------------------------- ### nash

• 5.1.19.6-81.el5_10


|--------------------------- ### net-tools

• 1.60-83.el5_10


|--------------------------- ### NetworkManager

• 0.7.0-13.el5


|--------------------------- ### nss-tools

• 3.15.3-4.el5_10


|--------------------------- ### nss_ldap

• 253-51.el5_9.1


|--------------------------- ### ntsysv

• 1.3.30.2-2.el5


|--------------------------- ### numactl

• 0.9.8-12.el5_6


|--------------------------- ### openib

• 1.5.4.1-4.el5


|--------------------------- ### OpenIPMI

• 2.0.16-16.el5


|--------------------------- ### pam

• 0.99.6.2-12.el5


|--------------------------- ### pam_ccreds

• 3-5


|--------------------------- ### pam_krb5

• 2.2.14-22.el5


|--------------------------- ### pam_passwdqc

• 1.0.2-1.2.2


|--------------------------- ### pam_pkcs11

• 0.5.3-26.el5

• pkcs11_eventmgr: Generate actions on card insert/removal/timeout events
• pklogin_finder: Get the loginname that maps to a certificate
• pkcs11_inspect: Inspect the contents of a certificate


|--------------------------- ### pam_smb

• 1.1.7-7.2.1


|--------------------------- ### passwd

• 0.73-2


|--------------------------- ### pcmciautils

• 014-5


|--------------------------- ### pinfo

• 0.6.9-1.fc6


|--------------------------- ### pm-utils

• 0.99.3-14.el5


|--------------------------- ### policycoreutils

• 1.33.12-14.13.el5


|--------------------------- ### prelink

• 0.4.0-2.el5


|--------------------------- ### quota

• 3.13-8.el5


|--------------------------- ### readahead

• 1.3-8.el5


|--------------------------- ### redhat-logos

• 4.9.99-11.el5.centos


|--------------------------- ### redhat-lsb

• 4.0-2.1.4.el5


|--------------------------- ### rhel-instnum

• 1.0.9-1.el5


|--------------------------- ### rng-utils

• 2.0-5.el5


|--------------------------- ### rootfiles

• 8.1-1.1.1


|--------------------------- ### rpm

• 4.4.2.3-34.el5


|--------------------------- ### scrollkeeper

• 0.3.14-9.el5


|--------------------------- ### selinux-policy

• 2.4.6-346.el5


|--------------------------- ### selinux-policy-targeted

• 2.4.6-346.el5


|--------------------------- ### setools

• 3.0-3.el5


|--------------------------- ### setup

• 2.5.58-9.el5


|--------------------------- ### sgpio

• 1.2.0_10-2.el5


|--------------------------- ### shadow-utils

• 4.0.17-21.el5


|--------------------------- ### smartmontools

• 5.42-2.el5


|--------------------------- ### system-config-securitylevel-tui

• 1.6.29.1-6.el5


|--------------------------- ### SysVinit

• 2.86-17.el5


|--------------------------- ### termcap

• 5.5-1.20060701.1


|--------------------------- ### tmpwatch

• 2.9.7-1.1.el5.5


|--------------------------- ### tzdata

• 2013i-1.el5


|--------------------------- ### tzdata-java

• 2013i-1.el5


|--------------------------- ### udev

• 095-14.29.el5


|--------------------------- ### util-linux

• 2.13-0.59.el5_8


|--------------------------- ### vconfig

• 1.9-3


|--------------------------- ### vixie-cron

• 4.1-81.el5


|--------------------------- ### wireless-tools

• 28-2.el5


|--------------------------- ### wpa_supplicant

• 0.5.10-10.el5


|--------------------------- ### xdg-utils

• 1.0.2-4.el5

• Third party software developers can rely on these xdg-utils for all of their simple integration needs.
• Developers of desktop environments can make sure that their environments are well supported
• Distribution vendors can provide custom versions of these utilities

1. xdg-desktop-menu Install desktop menu items
2. xdg-desktop-icon Install icons to the desktop
3. xdg-icon-resource Install icon resources
4. xdg-mime Query information about file type handling and install descriptions for new file types
5. xdg-open Open a file or URL in the user's preferred application
6. xdg-email Send mail using the user's preferred e-mail composer
7. xdg-screensaver Control the screensaver


|--------------------------- ### xorg-x11-filesystem

• 7.1-2.fc6


|--------------------------- ### yp-tools

• 2.9-2.el5


|--------------------------- ### yum

• 3.2.22-40.el5.centos


|--------------------------- ### yum-downloadonly

• 1.1.16-21.el5.centos


|--------------------------- ### yum-fastestmirror

• 1.1.16-21.el5.centos


|--------------------------- ### yum-priorities

• 1.1.16-21.el5.centos


|--------------------------- ### yum-updatesd

• 0.9-5.el5


|--------------------------- ## None


|--------------------------- ### acpid

• 1.0.4-12.el5


|--------------------------- ### at

• 3.1.8-84.el5


|--------------------------- ### audit

• 1.8-2.el5


|--------------------------- ### autofs

• 5.0.1-0.rc2.183.el5


|--------------------------- ### cups

• 1.3.7-30.el5_9.3


|--------------------------- ### dhcdbd

• 2.2-2.el5


|--------------------------- ### dnsmasq

• 2.45-1.1.el5_3


|--------------------------- ### esound

• 0.2.36-4


|--------------------------- ### gpm

• 1.20.1-74.1


|--------------------------- ### iputils

• 20020927-46.el5


|--------------------------- ### iscsi-initiator-utils

• 6.2.0.872-16.el5


|--------------------------- ### mcstrans

• 0.2.11-3.el5


|--------------------------- ### nfs-utils

• 1.0.9-70.el5


|--------------------------- ### nscd

• 2.5-118.el5_10.2


|--------------------------- ### ntp

• 4.2.2p1-17.el5.centos


|--------------------------- ### openldap

• 2.3.43-25.el5_8.1


|--------------------------- ### openssh-server

• 4.3p2-82.el5


|--------------------------- ### ORBit2

• 2.14.3-5.el5


|--------------------------- ### pcsc-lite

• 1.4.4-4.el5_5


|--------------------------- ### portmap

• 4.0-65.2.2.1


|--------------------------- ### postfix

• 2.3.3-6.el5


|--------------------------- ### ppp

• 2.4.4-2.el5


|--------------------------- ### rp-pppoe

• 3.5-33.el5


|--------------------------- ### rsh-server

• 0.17-40.el5_7.1


|--------------------------- ### sysklogd

• 1.4.1-46.el5


|--------------------------- ### tcp_wrappers

• 7.6-40.7.el5


|--------------------------- ### xinetd

• 2.3.14-20.el5_10


|--------------------------- ### xorg-x11-xfs

• 1.0.2-5.el5_6.1


|--------------------------- ### ypbind

• 1.19-12.el5_6.1


|--------------------------- ## None


|--------------------------- ### kernel

• 2.6.18-348.1.1.el5, 2.6.18-371.3.1.el5


|--------------------------- ### kernel-devel

• 2.6.18-371.3.1.el5


|--------------------------- ### module-init-tools

• 3.3-0.pre3.1.63.el5


|--------------------------- ### setarch

• 2.0-1.1


|--------------------------- ## None


|--------------------------- ### agg

• 2.4-2.1


|--------------------------- ### alsa-lib

• 1.0.17-1.el5


|--------------------------- ### apr

• 1.2.7-11.el5_6.5


|--------------------------- ### apr-util

• 1.2.7-11.el5_5.2


|--------------------------- ### atk

• 1.12.2-1.fc6


|--------------------------- ### atlas

• 3.8.3-1.el5


|--------------------------- ### audiofile

• 0.2.6-5


|--------------------------- ### beecrypt

• 4.1.2-10.1.1


|--------------------------- ### bluez-libs

• 3.7-1.1


|--------------------------- ### boost

• 1.33.1-16.el5_9


|--------------------------- ### boost-devel

• 1.33.1-16.el5_9


|--------------------------- ### bzip2-libs

• 1.0.3-6.el5_5


|--------------------------- ### cairo

• 1.2.4-5.el5


|--------------------------- ### ccid

• 1.3.8-2.el5


|--------------------------- ### CodeMeter64

• 4.0-500


|--------------------------- ### compat-dapl

• 2.0.34-1.el5


|--------------------------- ### compat-dapl-devel

• 2.0.34-1.el5


|--------------------------- ### compat-db

• 4.2.52-5.1


|--------------------------- ### compat-libf2c-34

• 3.4.6-4.1


|--------------------------- ### None

• 3.2.3-61


|--------------------------- ### coolkey

• 1.1.0-16.1.el5


|--------------------------- ### cracklib

• 2.8.9-3.3


|--------------------------- ### cracklib-dicts

• 2.8.9-3.3


|--------------------------- ### cups-libs

• 1.3.7-30.el5_9.3


|--------------------------- ### cyrus-sasl

• 2.1.22-7.el5_8.1


|--------------------------- ### cyrus-sasl-lib

• 2.1.22-7.el5_8.1


|--------------------------- ### cyrus-sasl-plain

• 2.1.22-7.el5_8.1


|--------------------------- ### dapl

• 2.0.34-1.el5


|--------------------------- ### dapl-devel

• 2.0.34-1.el5


|--------------------------- ### db4

• 4.3.29-10.el5_5.2


|--------------------------- ### dbus

• 1.1.2-21.el5


|--------------------------- ### dbus-glib

• 0.73-11.el5_9


|--------------------------- ### dbus-python

• 0.70-9.el5_4


|--------------------------- ### expat

• 1.95.8-11.el5_8


|--------------------------- ### fftw2

• 2.1.5-15.el5


|--------------------------- ### fftw3

• 3.2.2-3.el5


|--------------------------- ### fipscheck

• 1.2.0-1.el5


|--------------------------- ### fipscheck-lib

• 1.2.0-1.el5


|--------------------------- ### fontconfig

• 2.4.1-7.el5


|--------------------------- ### freeglut

• 2.4.0-7.1.el5


|--------------------------- ### freetype

• 2.2.1-32.el5_9.1


|--------------------------- ### gd

• 2.0.33-9.4.el5_4.2


|--------------------------- ### gdbm

• 1.8.0-28.el5


|--------------------------- ### giflib

• 4.1.3-7.3.3.el5


|--------------------------- ### glew

• 1.5.1-3.el5


|--------------------------- ### glib2

• 2.12.3-4.el5_3.1


|--------------------------- ### glibc

• 2.5-118.el5_10.2


|--------------------------- ### glpk

• 4.20-2.el5

1. Revised simplex method.
2. Primal-dual interior point method.
3. Branch-and-bound method.
4. Translator for GNU MathProg.
5. Application program interface (API).
6. Stand-alone LP/MIP solver.


|--------------------------- ### gmp

• 4.1.4-10.el5


|--------------------------- ### gnome-keyring

• 0.6.0-1.fc6


|--------------------------- ### gnome-mime-data

• 2.4.2-3.1


|--------------------------- ### gnome-vfs2

• 2.16.2-12.el5_9


|--------------------------- ### gnutls

• 1.4.1-10.el5_9.2


|--------------------------- ### gsl

• 1.13-3.el5


|--------------------------- ### gtk2

• 2.10.4-30.el5


|--------------------------- ### hal

• 0.5.8.1-64.el5


|--------------------------- ### hdf5

• 1.6.10-1.el5


|--------------------------- ### hesiod

• 3.1.0-8


|--------------------------- ### inchi

• 1.0.1-8.fc8


|--------------------------- ### infiniband-diags

• 1.5.12-2.el5


|--------------------------- ### krb5-libs

• 1.6.1-70.el5_9.2


|--------------------------- ### libacl

• 2.2.39-8.el5


|--------------------------- ### libaio

• 0.3.106-5


|--------------------------- ### libart_lgpl

• 2.3.17-4


|--------------------------- ### libattr

• 2.4.32-1.1


|--------------------------- ### libbonobo

• 2.16.0-1.1.el5_5.1


|--------------------------- ### libbonoboui

• 2.16.0-1.fc6


|--------------------------- ### libcap

• 1.10-26


|--------------------------- ### libcroco

• 0.6.1-2.1


|--------------------------- ### libdaemon

• 0.10-5.el5

• A wrapper around fork() which does the correct daemonization procedure of a process
• A wrapper around syslog() for simpler and compatible log output to Syslog or STDERR
• An API for writing PID files
• An API for serializing UNIX signals into a pipe for usage with select() or poll()
• An API for running subprocesses with STDOUT and STDERR redirected to syslog.


|--------------------------- ### libdmx

• 1.0.2-3.1


|--------------------------- ### libdrm

• 2.0.2-1.1


|--------------------------- ### libevent

• 1.4.13-1


|--------------------------- ### libfontenc

• 1.0.2-2.2.el5


|--------------------------- ### libFS

• 1.0.0-3.1


|--------------------------- ### libgcc

• 4.1.2-54.el5


|--------------------------- ### libgcrypt

• 1.4.4-7.el5_10


|--------------------------- ### libgfortran

• 4.1.2-54.el5


|--------------------------- ### libglade2

• 2.6.0-2


|--------------------------- ### libgnome

• 2.16.0-6.el5


|--------------------------- ### libgnomecanvas

• 2.14.0-4.1


|--------------------------- ### libgnomeprintui22

• 2.12.1-6


|--------------------------- ### libgnomeui

• 2.16.0-5.el5


|--------------------------- ### libgomp

• 4.4.7-1.el5


|--------------------------- ### libgpg-error

• 1.4-2


|--------------------------- ### libgsf

• 1.14.1-6.1


|--------------------------- ### libgssapi

• 0.10-2


|--------------------------- ### libhugetlbfs

• 1.3-8.2.el5


|--------------------------- ### libibcm

• 1.0.5-2.el5


|--------------------------- ### libibmad

• 1.3.8-1.el5


|--------------------------- ### libibumad

• 1.3.7-1.el5


|--------------------------- ### libibverbs

• 1.1.6-3.el5


|--------------------------- ### libibverbs-devel

• 1.1.6-3.el5


|--------------------------- ### libICE

• 1.0.1-2.1


|--------------------------- ### libicu

• 3.6-5.16.1


|--------------------------- ### libIDL

• 0.8.7-1.fc6


|--------------------------- ### libidn

• 0.6.5-1.1


|--------------------------- ### libjpeg

• 6b-38


|--------------------------- ### libmng

• 1.0.9-5.1


|--------------------------- ### libmthca

• 1.0.6-1.el5


|--------------------------- ### libnotify

• 0.4.2-6.el5


|--------------------------- ### libpaper

• 1.1.21-1.el5.1


|--------------------------- ### libpng

• 1.2.10-17.el5_8


|--------------------------- ### librdmacm

• 1.0.15-2.el5


|--------------------------- ### librsvg2

• 2.16.1-1.el5


|--------------------------- ### libselinux

• 1.33.4-5.7.el5


|--------------------------- ### libsemanage

• 1.9.1-4.4.el5


|--------------------------- ### libsepol

• 1.15.2-3.el5


|--------------------------- ### libSM

• 1.0.1-3.1


|--------------------------- ### None

• 4.1.2-54.el5


|--------------------------- ### libsysfs

• 2.1.0-1.el5


|--------------------------- ### libtermcap

• 2.0.8-46.1


|--------------------------- ### libtiff

• 3.8.2-18.el5_8


|--------------------------- ### libtool-ltdl

• 1.5.22-7.el5_4


|--------------------------- ### libusb

• 0.1.12-6.el5


|--------------------------- ### libutempter

• 1.1.4-4.el5


|--------------------------- ### libvolume_id

• 095-14.29.el5


|--------------------------- ### libwmf

• 0.2.8.4-10.2


|--------------------------- ### libwnck

• 2.16.0-4.fc6


|--------------------------- ### libX11

• 1.0.3-11.el5_7.1


|--------------------------- ### libXau

• 1.0.1-3.1


|--------------------------- ### libXaw

• 1.0.2-8.1


|--------------------------- ### libXcursor

• 1.1.7-1.2


|--------------------------- ### libXdmcp

• 1.0.1-2.1


|--------------------------- ### libXext

• 1.0.1-2.1


|--------------------------- ### libXfixes

• 4.0.1-2.1


|--------------------------- ### libXfont

• 1.2.2-1.0.4.el5_7


|--------------------------- ### libXfontcache

• 1.0.2-3.1


|--------------------------- ### libXft

• 2.1.10-1.1


|--------------------------- ### libXi

• 1.0.1-4.el5_4


|--------------------------- ### libXinerama

• 1.0.1-2.1


|--------------------------- ### libxkbfile

• 1.0.3-3.1


|--------------------------- ### libXmu

• 1.0.2-5


|--------------------------- ### libXp

• 1.0.0-8.1.el5


|--------------------------- ### libXpm

• 3.5.5-3


|--------------------------- ### libXrandr

• 1.1.1-3.3


|--------------------------- ### libXrender

• 0.9.1-3.1


|--------------------------- ### libXres

• 1.0.1-3.1


|--------------------------- ### libXScrnSaver

• 1.1.0-3.1


|--------------------------- ### libXt

• 1.0.2-3.2.el5


|--------------------------- ### libXTrap

• 1.0.0-3.1


|--------------------------- ### libXtst

• 1.0.1-3.1


|--------------------------- ### libXv

• 1.0.1-4.1


|--------------------------- ### libXxf86dga

• 1.0.1-3.1


|--------------------------- ### libXxf86misc

• 1.0.1-3.1


|--------------------------- ### libXxf86vm

• 1.0.1-3.1


|--------------------------- ### m2crypto

• 0.16-9.el5


|--------------------------- ### mesa-libGL

• 6.5.1-7.11.el5_9


|--------------------------- ### mesa-libGLU

• 6.5.1-7.11.el5_9


|--------------------------- ### ncurses

• 5.5-24.20060715


|--------------------------- ### netpbm

• 10.35.58-10.el5


|--------------------------- ### newt

• 0.52.2-15.el5


|--------------------------- ### nfs-utils-lib

• 1.0.8-7.9.el5


|--------------------------- ### notification-daemon

• 0.3.5-9.el5


|--------------------------- ### nspr

• 4.10.2-2.el5_10


|--------------------------- ### nss

• 3.15.3-4.el5_10


|--------------------------- ### nss_db

• 2.2-35.4.el5_5


|--------------------------- ### numactl-devel

• 0.9.8-12.el5_6


|--------------------------- ### openmotif

• 2.3.1-7.2.el5


|--------------------------- ### opensm-libs

• 3.3.13-1.el5


|--------------------------- ### openssl

• 0.9.8e-26.el5_9.1


|--------------------------- ### pango

• 1.14.9-8.el5.centos.3


|--------------------------- ### pcre

• 6.6-9.el5


|--------------------------- ### pcsc-lite-libs

• 1.4.4-4.el5_5


|--------------------------- ### pkinit-nss

• 0.7.6-1.el5


|--------------------------- ### python-ldap

• 2.2.0-2.1


|--------------------------- ### qhull

• 2003.1-8.el5


|--------------------------- ### readline

• 5.1-3.el5


|--------------------------- ### rhpl

• 0.194.1-2


|--------------------------- ### SDL

• 1.2.10-9.el5


|--------------------------- ### shared-mime-info

• 0.19-5.el5


|--------------------------- ### slang

• 2.0.6-4.el5


|--------------------------- ### startup-notification

• 0.8-4.1


|--------------------------- ### suitesparse

• 3.1.0-1.el5


|--------------------------- ### words

• 3.0-9.1


|--------------------------- ### Xaw3d

• 1.5E-10.1


|--------------------------- ### xbae

• 4.60.4-8.el5


|--------------------------- ### xmlrpc-c

• 1.16.24-1206.1840.4.el5


|--------------------------- ### xmlrpc-c-client

• 1.16.24-1206.1840.4.el5


|--------------------------- ### xz-libs

• 4.999.9-0.3.beta.20091007git.el5


|--------------------------- ### zlib

• 1.2.3-7.el5


|--------------------------- ## None


|--------------------------- ### bash

• 3.2-32.el5_9.1


|--------------------------- ### tcsh

• 6.14-17.el5_5.2


|--------------------------- ## None


|--------------------------- ### hicolor-icon-theme

• 0.9-2.1


|--------------------------- ### redhat-menus

• 6.7.8-3.el5


|--------------------------- ### vnc

• 4.1.2-14.el5_6.6


|--------------------------- ## None


|--------------------------- ### bitstream-vera-fonts

• 1.10-7


|--------------------------- ### imake

• 1.0.2-3


|--------------------------- ### liberation-fonts

• 1.0-1.el5


|--------------------------- ### urw-fonts

• 2.3-6.1.1


|--------------------------- ### vnc-server

• 4.1.2-14.el5_6.6


|--------------------------- ### xorg-x11-apps

• 7.1-4.0.1.el5


|--------------------------- ### xorg-x11-font-utils

• 7.1-3


|--------------------------- ### xorg-x11-fonts-100dpi

• 7.1-2.1.el5


|--------------------------- ### xorg-x11-fonts-base

• 7.1-2.1.el5


|--------------------------- ### xorg-x11-fonts-ISO8859-1-100dpi

• 7.1-2.1.el5


|--------------------------- ### xorg-x11-fonts-ISO8859-1-75dpi

• 7.1-2.1.el5


|--------------------------- ### xorg-x11-server-utils

• 7.1-5.el5_6.2


|--------------------------- ### xorg-x11-utils

• 7.1-2.fc6


|--------------------------- ### xorg-x11-xauth

• 1.0.1-2.1


|--------------------------- ### xterm

• 215-8.el5_4.1


|--------------------------- ## Utilities


|--------------------------- ### clusterit

• 2.5-1


|--------------------------- ### jpackage-utils

• 1.7.3-1jpp.3.el5

1. /usr/bin/build-classpath build the Java classpath in a portable manner
2. /usr/bin/build-jar-repository build a jar repository in a portable manner
3. /usr/bin/rebuild-jar-repository rebuild a jar repository in a portable manner (after a jvm change...)
4. /usr/bin/build-classpath-directory build the Java classpath from a directory
5. /usr/bin/diff-jars show jar content differences
6. /usr/bin/jvmjar install jvm extensions
7. /usr/bin/create-jar-links create custom jar links
8. /usr/bin/clean-binary-files remove binary files from sources
9. /usr/bin/check-binary-files check for presence of unexpected binary files
10. /usr/share/java-utils/java-functions shell script functions library for Java applications
11. /etc/java/jpackage-release string identifying the currently installed JPackage release
12. /etc/java/java.conf system-wide Java configuration file
13. /etc/rpm/macros.jpackage RPM macros for Java packagers and developers
14. /usr/share/doc/jpackage-utils-1.7.3/jpackage-policy Java packaging policy for packagers and developers


|--------------------------- ## None


|--------------------------- ### lustre-client

• 1.8.9-wc1_2.6.18_348.1.1.el5

• Other pages:
 • Template:Catalog Header Modules (https://wiki.anl.gov/cnm/Template:Catalog_Header_Modules)
 • Template:Catalog Index Footer Modules (https://wiki.anl.gov/cnm/Template:Catalog_Index_Footer_Modules) – not affected
 • Template:Catalog Section Intro Intel (https://wiki.anl.gov/cnm/Template:Catalog_Section_Intro_Intel) – not affected


|-------------------------- # Sandbox/Test 5 – Diff

  diff -I '\$Id: ' -u "/opt/ccms/classes/ha-corosync-mgmt0304%el7/etc/corosync/corosync.conf" "/etc/corosync/corosync.conf"
  --- /opt/ccms/classes/ha-corosync-mgmt0304%el7/etc/corosync/corosync.conf       2019-05-07 16:55:53.248935589 -0500
  +++ /etc/corosync/corosync.conf 2020-09-23 17:48:28.304216389 -0500
  @@ -16,11 +16,13 @@
   nodelist {
          node {
              ring0_addr: peer1
  -           ring1_addr: mgmt03
  +           #ring1_addr: mgmt03
  +           ring1_addr: 172.16.100.5
          }
          node {
              ring0_addr: peer2
  -           ring1_addr: mgmt04
  +           #ring1_addr: mgmt04
  +           ring1_addr: 172.16.100.6
          }
   }



  diff -I '\$Id: ' -u "/opt/ccms/classes/ha-corosync-mgmt0304%el7/etc/corosync/corosync.conf" "/etc/corosync/corosync.conf"
  --- /opt/ccms/classes/ha-corosync-mgmt0304%el7/etc/corosync/corosync.conf       2019-05-07 16:55:53.248935589 -0500
  +++ /etc/corosync/corosync.conf 2020-09-23 17:48:28.304216389 -0500
  @@ -16,11 +16,13 @@
   nodelist {
          node {
              ring0_addr: peer1
  -           ring1_addr: mgmt03
  +           #ring1_addr: mgmt03
  +           ring1_addr: 172.16.100.5
          }
          node {
              ring0_addr: peer2
  -           ring1_addr: mgmt04
  +           #ring1_addr: mgmt04
  +           ring1_addr: 172.16.100.6
          }
   }

• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)


|-------------------------- # HPC/Module naming scheme 2016


|-------------------------- ## Contents

1. 1 Properties
 1.1. 1.1 Naming scheme (Nomenclature)
  1.1.1. 1.1.1 Overview
  1.1.2. 1.1.2 Details
 1.2. 1.2 Module loading
  1.2.1. 1.2.1 No pre-loading
  1.2.2. 1.2.2 No recursive loading
 1.3. 1.3 System-specific command files
 1.4. 1.4 Workflow to determine module names to load
 1.5. 1.5 Best Practices
  1.5.1. 1.5.1 Use migration utility
  1.5.2. 1.5.2 Omit detailed versions from module names
  1.5.3. 1.5.3 Modules load order
  1.5.4. 1.5.4 Understanding dependency errors
  1.5.5. 1.5.5 "module purge" command
  1.5.6. 1.5.6 Test your module choices
   1.5.6.1. 1.5.6.1 Automated test
   1.5.6.2. 1.5.6.2 Manual test
   1.5.6.3. 1.5.6.3 Test in a job file
  1.5.7. 1.5.7 Effect on PBS job submissions
   1.5.7.1. 1.5.7.1 Loading modules in job files
   1.5.7.2. 1.5.7.2 Job routing by operation system
  1.5.8. 1.5.8 Using multiple MPI flavors
 1.6. 1.6 Minor changes for the module command
  1.6.1. 1.6.1 Determining default module versions
  1.6.2. 1.6.2 Name completion on command line
2. 2 Changes from previous scheme (2008)
 2.1. 2.1 Introduction
 2.2. 2.2 Motivation
 2.3. 2.3 Nomenclature
 2.4. 2.4 Extent of module catalog
 2.5. 2.5 Name changes for most modules
 2.6. 2.6 Name change exceptions
 2.7. 2.7 Explicit module selections required


|-------------------------- # Properties

(*) Environment modules are the means by which software applications are made available to users. Using modules allows users and administrators to pick, by user or even by compute job, a desired or default version of an application from typically several current and historic versions persisting on the system. Older versions are kept to improve reproducibility of results, an important characteristic of scientific computing.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


|-------------------------- ## None


|-------------------------- ### Overview

The full name of a module has two or more components separated by slashes /, in one of the following forms:

  name/api/version-build			# binary packages, compilers
  name/api/compiler/version-build		# compiled applications
  name/api/mpi/compiler/version-build	# compiled applications that use MPI

• The first component is the applications's main name, usually as chosen by its author.
• The last component is the version number, also usually chosen by the author, followed by a build identifier chosen on Carbon.
• Other name components may be present and indicate which set of major tools were used to produce the application locally, which usually implies which modules are required to be loaded to run the application.


|-------------------------- ### Details

• name is the package's name as chosen on Carbon. It is the name given by the software's author, lowercased for consistency. It may contain numbers if they are customarily part of the name, fftw3 being a prime example.
• api is the leading part or parts of the package's version number which indicates to suitable precision the API (https://en.m.wikipedia.org/wiki/Application_programming_interface) level across which different package versions are expected to be compatible (interchangable in terms of features). The api component typically has one of these forms:
major
major.minor

• compiler is a name component that is present when an application was compiled here and thus usually needs runtime libraries associated with the compiler used. The compiler name component is not strictly needed for applications that are statically linked, or come with all their own libraries, but can be present even then for informative purposes. The name component is typically absent for applications installed as binaries, notably commercial applications and, naturally, compilers themselves. The name component typically has sub-components of the form:
compilerNAME-compilerAPI
• mpi, present when neeeded, denotes the MPI (https://en.m.wikipedia.org/wiki/Message_Passing_Interface) flavor in use for parallel computations. This name component typically also has sub-components of the form:
mpiNAME-mpiAPI


|-------------------------- ## Module loading


|-------------------------- ### No pre-loading

No compiler or MPI modules are pre-loaded by the system.
The system only loads the "meta" module profile/user for you,
which merely looks for and loads your own .module-* files.


|-------------------------- ### No recursive loading

A module in general does not load other modules that it might depend on,
such as modules for compilers, an MPI flavor, or specialized libraries.


|-------------------------- ## System-specific command files

For a time, nodes with different operating systems and therefore more or less
different module catalogs will coexist in the cluster.
Since you will always have the same home directory on each node, most of your
script files would have to be written so they run on either operating system.
This would mean having to code if statements in your scripts,
which can be difficult and fragile to keep up.
To simplify conditional module selection, each node on Carbon now looks for
specific file names in your home directory. Depending on which files exist, a node:

1. determines whether to use the legacy or new naming scheme, and then
2. loads the file that is appropriate for the operating system running on that node, in the scheme determined.

Specifically:

• The mere existence of files of the form ~/.modules-elx, with x = 5,6,..., activates the new naming scheme. Subsequently, the file will be loaded and interpreed (in Tcl language) on the corresponding OS.
• On CentOS-5 nodes, a file ~/.modules-el5-legacy will trigger the legacy scheme, but only if ~/.modules-el5 is not present. In other words, a ~/.modules-el5 file has priority and causes ~/.modules-el5-legacy to be ignored.
• Without any ~/.modules-* files, CentOS-5 nodes will use the legacy scheme; CentOS-6 nodes always use the new scheme.
• Your .bashrc file will always be read, expecting the naming scheme that was determined by the presence or absence of .modules-* files.
• When running a PBS job, module commands in the job file will be read, in the same naming scheme as .bashrc.

• To load the same modules on any node, in the new scheme:

cd; ln -s .modules-el6 .modules-el5
It is possible but not recommended (because less future-proof) to keep your module selection in ~/.bashrc, and activate the new scheme on CentOS-5 nodes by simply creating an empty configuration: touch ~/.modules-el5
 • Place your configuration in ~/.modules-el6, then create a symbolic link:
 • It is possible but not recommended (because less future-proof) to keep your module selection in ~/.bashrc, and activate the new scheme on CentOS-5 nodes by simply creating an empty configuration: touch ~/.modules-el5


|-------------------------- ## Workflow to determine module names to load

(***) Caution: Module names are typically sorted as text strings the same way as Unix ls(1) does it. The resulting order may be counter-intuitive when the same part of several version numbers has a different number of digits. In the following example, version 8.16.x is the most recent release and needed to be administrator-designated as default because character for character, the string 8.7.x would be sorted highest.$ module avail lumerical...lumerical/7.5.7-1lumerical/8.0.5-1lumerical/8.15.736-1lumerical/8.16.931-1(default)lumerical/8.5.4-1lumerical/8.7.1-1...


To determine a suitable module name for a desired package:

1. On a Carbon command line, list the available flavors and versions, keeping in mind that some older modules were not migrated:
module avail
module avail packagename
(When upgrading from the previous naming scheme, remove version numbers from names of the formpackagename/version, leaving only packagename.)
2. Use the module show command to inspect details of a module, particularly its full name:
module show name/api
The command will use the name you gave to determine a suitable subset of all available modules, pick either a designated default or the highest-sorting version(***) from that subset, and finally show the details for that single version only.
3. Complete the desired package's name by appending API, MPI, and/or compiler specifications as needed, and repeat the previous step.
4. Determine a package's dependencies.
Inspect the output of module show …, look for any prereq statements, and load those on a previous line.

Only give full versions if: you require a build with a specific feature or behavior (such as to reproduce prior results with numeric consistency). To do so:

• Let's load a vasp5 module that uses the Intel-MPI flavor ("impi"):

  $ module avail vasp5
  ------------------------------------------------------------ /opt/apps/M/x86_64/EL ------------------------------------------------------------
  vasp5/5.3/openmpi-1.4/intel/5.3.2-mkl-beef-1    vasp5/5.4/impi-5/intel-16/5.4.1.3-6
  vasp5/5.3/openmpi-1.4/intel/5.3.3p3-mkl-3       vasp5/5.4/openmpi-1.10/intel-16/5.4.1.3-6
  vasp5/5.3/openmpi-1.4/intel/5.3.3p3-mkl-cellz-1

• Let's see which version would be loaded using an abbreviated name:

  $ module show vasp5/5.4
  -------------------------------------------------------------------
  /opt/apps/M/x86_64/EL/vasp5/5.4/openmpi-1.10/intel-16/5.4.1.3-6: 
  …

• Careful: The first output line shows the full file name of the module that would get loaded by the short name. In this case, the abbreviated module name, having no MPI name component, yields a module that uses a different MPI flavor than you want.
• You will need to be more explicit:

  $ module show vasp5/5.4/impi-5
  -------------------------------------------------------------------
  /opt/apps/M/x86_64/EL/vasp5/5.4/impi-5/intel-16/5.4.1.3-6:

  module-whatis	 VASP - Vienna Ab-initio Simulation Package 
  conflict	 vasp 
  conflict	 vasp-vtst 
  prereq	 intel/16
  prereq	 impi/5
  setenv		 VASP5_HOME /opt/apps/vasp5/5.4.1.3-6-impi-5-intel-16 
  prepend-path	 PATH /opt/apps/vasp5/5.4.1.3-6-impi-5-intel-16/bin 
  setenv		 VASP_COMMAND vasp-ase 
  setenv		 VASP_PP_PATH /opt/soft/vasp-pot/ase 
  -------------------------------------------------------------------

• Therefore, you'd need to add the following lines to your .modules-el6 file:

  module load intel/16
  module load impi/5
  module load vasp5/5.4/impi-5


|-------------------------- ## Best Practices


|-------------------------- ### Use migration utility

Use a helper utility to get started on splitting off and diversifying your existing module selection from .bashrc into .modules-* files:

  modules-migrate

  .bashrc
  .modules-el5-legacy
  .modules-el6


|--------------------------- # Sandbox/Migration example

Here is an example of what you might see (subject to change as the utility evolves):

  $ modules-migrate  
  This application will help you adapt your environment-modules customizations to
  Carbon's 2016 module naming scheme.

  Your module commands in .bashrc will be deactivated (commented out) and instead
  placed into two similar files .modules-el5-legacy and .modules-el6, for use by different
  operating system releases.

  This helper application will modify your files in a fairly simplistic manner.
  You will have an opportunity to manually review and refine the edits. 

  Continue? [Y/n] y
  ----------------------------------------------------------------------
  diff of changes from .bashrc:
  ----------------------------------------------------------------------

  8,10c8,10
  < module load vasp5
  < module load g09/D.01.x86_64-2
  < module load GaussView
  ---
  > #	module load vasp5
  > #	module load g09/D.01.x86_64-2
  > #	module load GaussView
  Accept changes in .bashrc? [Y/n] y
  Putting in place ...
  `.bashrc.tentative' -> `.bashrc'

  Opening text editor for .modules-el5-legacy.tentative .modules-el6.tentative ...
  Continue? [Y/n] y

A text editor will open (session output omitted here).

• Review and adapt as needed.
• Save each file.
• Quit the editor.

Example output continues:

  ----------------------------------------------------------------------

  ==> .modules-el5-legacy.tentative <==
  	# Carbon initialization for modules in scheme 1, used on CentOS-5.
  	# To use scheme 2 instead, create .modules-el5.
  	#
  	# Initially extracted from .bashrc by modules-migrate .
  	#
  	# This file is read by module profile/user, in TCL syntax.
	
  	module load vasp5
  	module load g09/D.01.x86_64-2
  	module load GaussView
	
  	# vim:syntax=tcl:
	
  ==> .modules-el6.tentative <==
  	# Carbon initialization for modules in scheme 2, used on CentOS-6.
  	# Symlink this file to .modules-el5 to load the same set on older nodes.
  	#
  	# Initially extracted from .bashrc by modules-migrate .
  	#
  	# This file is read by module profile/user, in TCL syntax.
	
  	module load vasp5
  	module load gaussian/09/D.01.x86_64-2
  	module load gaussview
	
  	# vim:syntax=tcl:

  ----------------------------------------------------------------------

      View		(v)
      Edit		(e)
      Test		(t)
      Cancel		(c)
      Install and quit	(q)
  Enter selection: q

  Installing files ...
  `.modules-el5-legacy.tentative' -> `.modules-el5-legacy'
  `.modules-el6.tentative' -> `.modules-el6'
  Done.

• Please note that the utility is fairly basic and cannot transform or choose versions and their dependencies as described here.
• The utility will give you the opportunity to inspect and edit the resulting files. Use a text editor of your choice, such as nano or vi to re-examine or edit these files further.
• To switch to the new scheme on all nodes, create or copy from .modules-el6:

  .modules-el5

• #Test your module choices, as shown below.


|-------------------------- ### Omit detailed versions from module names

When constructing a module load command, try to omit detailed version and build numbers from the end, i.e., load a module that has the full name foo/m.n/compiler/version-build by an abbreviated name foo/m.n/compiler.

For instance, instead of:

  module load intel/16/16.0.0-3
  module load openmpi/1.10/intel-16/1.10.0-4

Write:

  module load intel/16
  module load openmpi/1.10/intel-16

It is preferable to supply the compiler name part of MPI modules (here …/intel-16) because they usually both (a) need compiler libraries and (b) impliclity use their native compiler for further compilations.


|-------------------------- ### Modules load order

To meet module dependencies, edit your configuration or job files to load required modules first, in this order:

1. compilers
2. MPI flavor
3. other libraries that are dynamically loaded.
4. your desired application(s).


|-------------------------- ### Understanding dependency errors

Learn to recognize error messages from module load when a required module has not been loaded:

Example: A typical error message will look like:

  $ module load openmpi/1.10
  openmpi/1.10/intel-16/1.10.2-1(27):ERROR:151: Module 'openmpi/1.10/intel-16/1.10.2-1' depends on one of the module(s) 'intel/16/16.0.2 intel/16/16.0.1-2 intel/16/16.0.0-3 intel/16/16.0.0-1 intel/16/16.0.0-0'
  openmpi/1.10/intel-16/1.10.2-1(27):ERROR:102: Tcl command execution failed: prereq intel/16

• The missing prerequisite is the red item on the last line.
• The modules that would currently satisfy the requirement are shown on the preceding line, indicated here in blue.
• The full name of the "offending module", deduced from a possibly abbreviated name on the command line, appears in brown.

• You can inspect the prerequisites of a module in a more succinct manner:

  $ module show openmpi/1.10 2>&1 | grep req
  prereq	 intel/16


|-------------------------- ### None

Previously on Carbon it was difficult to reset the module selection during an interactive terminal session,
because the commands for the job queueing system, like qsub, were provided via a module.
You may now safely use the module "purge" command for its intended purpose, as

  module purge

followed by module load … to choose compilers, MPI flavors, and applications.

To re-load the customizations from your .modules-* files using the module profile:

  module purge
  module load profile


|-------------------------- ### Test your module choices


|-------------------------- #### Automated test

Use the test built into the migration utility:

  modules-migrate -t
  modules-migrate --test

This will simulate loading your existing .module-* files under the available operating systems.
Review the output. To correct any errors, edit the respective files manually or use the migration utility again:

  modules-migrate -e
  modules-migrate --edit


|-------------------------- #### Manual test

Same node
-----------
bash -l
module list
exit

To test your new module configuration in your actual environment:

1. Open another login shell on the current or another node.
2. Review error messages that might appear before your prompt.
3. Inspect which modules are loaded.
4. Edit your .module-* files and address any errors.
5. Close the test shell and repeat until your desired modules are loaded without errors.


|-------------------------- #### Test in a job file

Your module selection is likely most important in a PBS job file.
To avoid the hassle of extended wait times for production jobs,
use test jobs with a short walltime limit and place just diagnostic commands in the job script.

Use the module list and type shell commands to verify that all your modules are loaded
and that an application is properly callable without full paths.

Consider the following job file modtest.sh:

  #!/bin/bash
  #PBS -l nodes=1:ppn=1
  #PBS -l walltime=0:1:00
  #PBS -N modtest

  module list

  type vasp_gam

Submit the job:

  qsub modtest.sh

Alternatively, do the whole thing on the command line, without the need for a separate file:

  echo "module list; type vasp5" | qsub -l nodes=1:ppn=1,walltime=0:1:00 -N modtest

In either case, wait for the job to finish, then inspect the output files:

  qstat jobnumber
  …
  head modtest.[eo0-9]*

You should see something like:

  vasp_gam is /opt/apps/vasp5/5.4.1.3-6-openmpi-1.10-intel-16/bin/vasp_gam

An error looks like:

  -bash: type: vasp_gam: not found


|-------------------------- ### Effect on PBS job submissions


|-------------------------- #### Loading modules in job files

• You may now safely load modules in PBS job files when using recent MPI modules, both in the legacy and new schemes. Previously, this was not recommended.

• However, best practice is still to load all modules in dotfiles under your home directory.


|-------------------------- #### Job routing by operation system

• TORQUE/PBS jobs that are submitted from a node running CentOS-5 or CentOS-6 will normally be routed to run only on nodes that run the same OS release.
• Find the eligible OS in the qstat -f output:

  $ qstat -f jobnumber | grep opsys
     Resource_List.opsys = el5

• You may override the automatic selection prior to submission by adding an opsys job resource:

  #PBS -l opsys=el5

or:

  #PBS -l opsys=el6

• In a pinch, you may even change the OS request of a queued job by using the qalter command, e.g.:

  qalter -l opsys=el6 jobnumber


|-------------------------- ### Using multiple MPI flavors

• Different MPI flavors can, with caution, be loaded at the same time. This may be necessary because the system is less homogeneous than in the past and no longer uses a single "one true" MPI implementation.
• When modules of multiple MPI flavors are loaded, call the appropriate MPI commands by a full path specified via the MODULENAME_HOME environment variables that is set (by Carbon convention) in the modules.

Example: In a job file that is to run 2 applications that were compiled with different MPI flavors, write:

  $OPENMPI_HOME/bin/mpirun app1_name
  $IMPI_HOME/bin/mpirun app2_name


|-------------------------- ## Minor changes for the module command


|-------------------------- ### Determining default module versions

To determine which module will be loaded when an abbreviated name is used, inspect the first relevant line in the output of one of these commands:

  module show name
  module help name

The reason is twofold:

• The module avail command under CentOS-6 no longer issues the marker "(default)" when set for a particular module (which is done administratively using a .version file). I am not sure if this is a bug or by design, but the change makes the output more consistent.
• On the older CentOS-5 system the module command honors .version files only for the last component of the module. This may lead to different module versions being selected on different systems even when the list of available modules is identical. (Side note: This is a possibly fortuitous bug since openmpi-1.4, used on CentOS-5, sorts after openmpi-1.10.)


|-------------------------- ### Name completion on command line

When working interactively in a terminal, you can use the "Tab completion" feature of the Bash shell to complete a partially typed module name and show all names available for the name typed so far.

The feature works as follows. At a shell prompt (shown as "$"), type:

  $ module load fft

Press the <TAB> key and the name will be expanded to fftw3/3.3/, and you'll see all possible completing names, with the cursor waiting at the end of the longest common substring:

  $ module load fftw3/3.3/_
  fftw3/3.3/impi-5/intel-16/3.3.4-10        fftw3/3.3/openmpi-1.10/intel-16/3.3.4-11
  fftw3/3.3/intel/3.3.2-1                   fftw3/3.3/openmpi-1.4/intel/3.3.2-4

Type the letter o, hit the <TAB> key again. The choices will be narrowed down to OpenMPI.

  $ module load fftw3/3.3/openmpi-1.<TAB>
  fftw3/3.3/openmpi-1.10/intel-16/3.3.4-11  fftw3/3.3/openmpi-1.4/intel/3.3.2-4

Typing the digit 1 will pick the 1.10 version, at which point the then remaining single module name choice will be completed all the way, with the cursor waiting after an additional space character:

  $ module load fftw3/3.3/openmpi-1.10/intel-16/3.3.4-11 _




|-------------------------- # None


|-------------------------- ## Introduction

On Carbon, the environment modules system has changed in the following aspects,
explained further in this document:

• The naming scheme is more developed and more versatile.
• The system does not preload compiler and MPI modules - you must specify all modules yourself.
• Dependent modules are no longer being loaded.
• The module command behaves in slightly different ways.


|-------------------------- ## Motivation

The changes were necessary because of increasing diversity and dependencies of applications, libraries,
and the underlying operating system.
The goal was to accommodate different compilers, MPI flavors, and (in the future)
different aspects of the machine architecture like CPU generation, capabilities, and coprocessor facilities.

For different releases of the operating system the new scheme enables existing application versions to continue being offered
where possible, and to make new application versions available where suitable,
either on both old and newer OS releases, or only on one.


|-------------------------- ## Nomenclature

Where the previous scheme used a relatively simple name form:

  name/version-build

the new scheme includes additional name components like api, mpi, and compiler.


|-------------------------- ## Extent of module catalog

• The legacy naming scheme is being retired, along with some of its attendant conventions.
• Newer applications will primarily be compiled and installed on the newer OS release and in the new naming scheme. Some applications may turn out to be backwards-compatible with a previous OS release, and will be made available there as well, in the new scheme, to appropriately offer applications that run on both or only a specific release of the operating system.
• Only a subset of modules from the legacy scheme has been carried over into the new scheme, typically the modules representing the most recent version of an application.


|-------------------------- ## Name changes for most modules

For most modules the leading name component (the part before any /) will be the same in the previous and new schemes.
What will always differ are the name parts after the first slash, which is relevant if you deliberately (and hopefully with good reason) chose a specific version.

Here are the names for the FFT3 library module in the legacy and new naming schemes,
as queried by the module avail shell command:

Current scheme                                                                                                                                                                                                                                                                                                                                   Legacy scheme

$ module -t avail fftw3
/opt/apps/M/x86_64/EL6:
/opt/apps/M/x86_64/EL:
fftw3/3.3/impi-5/intel-16/3.3.4-10	 # uses Intel-MPI
fftw3/3.3/intel/3.3.2-1			 # older serial version
fftw3/3.3/openmpi-1.10/intel-16/3.3.4-11 # uses OpenMPI
fftw3/3.3/openmpi-1.4/intel/3.3.2-4	 # older MPI version
/usr/share/Modules/modulefiles:
/etc/modulefiles: $ module -t avail fftw3
/opt/soft/modulefiles:
fftw3/3.2.1-1
fftw3/3.2.2-1
fftw3/3.3-1
fftw3/3.3.2-1
fftw3/3.3.2-4
/opt/intel/modulefiles:
/usr/share/Modules/modulefiles:
/etc/modulefiles:

  $ module -t avail fftw3
  /opt/apps/M/x86_64/EL6:
  /opt/apps/M/x86_64/EL:
  fftw3/3.3/impi-5/intel-16/3.3.4-10	 # uses Intel-MPI
  fftw3/3.3/intel/3.3.2-1			 # older serial version
  fftw3/3.3/openmpi-1.10/intel-16/3.3.4-11 # uses OpenMPI
  fftw3/3.3/openmpi-1.4/intel/3.3.2-4	 # older MPI version
  /usr/share/Modules/modulefiles:
  /etc/modulefiles:

  $ module -t avail fftw3
  /opt/soft/modulefiles:
  fftw3/3.2.1-1
  fftw3/3.2.2-1
  fftw3/3.3-1
  fftw3/3.3.2-1
  fftw3/3.3.2-4
  /opt/intel/modulefiles:
  /usr/share/Modules/modulefiles:
  /etc/modulefiles:

• Note the MPI flavor and the compiler name components compared to the legacy naming scheme (bold is used here for illustration only, your output will appear all as regular text.)
• The -t option of module avail shows the output in "terse" form, one entry per line.
• Lines ending in : indicate file system directories in which modules are being located on the current node.


|-------------------------- ## Name change exceptions

The names of following modules changed, making their names more consistent:

  legacy scheme	new scheme
  -------------------------------------
  asap3		asap/3.x		

  ase2		ase/2		- deprecated
  ase3		ase/3		- not needed as separate module, instead, is installed within each of the new "python-env" modules

  g09		gaussian/09
  GaussView	gaussview  (lowercase)

  python		python-env	- Several suites of Python environments, each with many packages
  		python.org	- The interpreter only, from the main Python web site.


|-------------------------- ## Explicit module selections required



• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)

1. media:Amtek_xr100cr detector.jpg (https://wiki.anl.gov/wiki_cnm/images/8/8c/Amtek_xr100cr_detector.jpg)
2. media:Beamline Overview Photo.jpg (https://wiki.anl.gov/wiki_cnm/images/f/f5/Beamline_Overview_Photo.jpg)
3. media:CM positions.jpg (https://wiki.anl.gov/wiki_cnm/images/2/21/CM_positions.jpg)
4. media:DataBook_Image_Small.jpg (https://wiki.anl.gov/wiki_cnm/images/f/fd/DataBook_Image_Small.jpg)
5. media:DataBook_Image_Small.jpg (https://wiki.anl.gov/wiki_cnm/images/f/fd/DataBook_Image_Small.jpg)
6. media:DataBook_Image_Small.jpg (https://wiki.anl.gov/wiki_cnm/images/f/fd/DataBook_Image_Small.jpg)
7. media:FOM ZP holder.jpg (https://wiki.anl.gov/wiki_cnm/images/b/b7/FOM_ZP_holder.jpg)
8. media:FOM positions.jpg (https://wiki.anl.gov/wiki_cnm/images/7/72/FOM_positions.jpg)
9. media:IMG_4458.JPG (https://wiki.anl.gov/wiki_cnm/images/8/88/IMG_4458.JPG)
10. media:OSA positions.jpg (https://wiki.anl.gov/wiki_cnm/images/a/af/OSA_positions.jpg)
11. media:PIXIS_XF.jpg (https://wiki.anl.gov/wiki_cnm/images/5/59/PIXIS_XF.jpg)
12. media:PIXIS_XF.jpg (https://wiki.anl.gov/wiki_cnm/images/5/59/PIXIS_XF.jpg)
13. media:Phase ring specs.jpg (https://wiki.anl.gov/wiki_cnm/images/3/35/Phase_ring_specs.jpg)
14. media:Phase rings.jpg (https://wiki.anl.gov/wiki_cnm/images/6/67/Phase_rings.jpg)
15. media:Princeton_Instruments_PIXIS_XF1024F_Rev_B1A.pdf (https://wiki.anl.gov/wiki_cnm/images/f/f5/Princeton_Instruments_PIXIS_XF1024F_Rev_B1A.pdf)
16. media:Princeton_Instruments_PIXIS_XF1024F_Rev_B1A.pdf (https://wiki.anl.gov/wiki_cnm/images/f/f5/Princeton_Instruments_PIXIS_XF1024F_Rev_B1A.pdf)
17. media:Slide1.jpg (https://wiki.anl.gov/wiki_cnm/images/0/08/Slide1.jpg)
18. media:Slide2.jpg (https://wiki.anl.gov/wiki_cnm/images/7/73/Slide2.jpg)
19. media:Slide3.jpg (https://wiki.anl.gov/wiki_cnm/images/b/b4/Slide3.jpg)
20. media:30_5mm_assy_landscape.pdf‎ (https://wiki.anl.gov/wiki_cnm/images/2/2d/30_5mm_assy_landscape.pdf)
21. media:30_5mm_cap_rot.pdf (https://wiki.anl.gov/wiki_cnm/images/7/7e/30_5mm_cap_rot.pdf)
22. media:Alignment_Nanoprobe_Mirror_4oct08.pdf (https://wiki.anl.gov/wiki_cnm/images/6/67/Alignment_Nanoprobe_Mirror_4oct08.pdf)
23. media:Amtek_xr100cr.pdf (https://wiki.anl.gov/wiki_cnm/images/5/5b/Amtek_xr100cr.pdf)
24. media:C848_User_MS100E110.pdf (https://wiki.anl.gov/wiki_cnm/images/5/59/C848_User_MS100E110.pdf)
25. media:Double Stack ZP 24-133-3 (1753.4-2 and 1753.4-3)_Page_1.jpg (https://wiki.anl.gov/wiki_cnm/images/4/40/Double_Stack_ZP_24-133-3_%281753.4-2_and_1753.4-3%29_Page_1.jpg)
26. media:Double Stack ZP 24-133-3 (1753.4-2 and 1753.4-3)_Page_2.jpg (https://wiki.anl.gov/wiki_cnm/images/1/11/Double_Stack_ZP_24-133-3_%281753.4-2_and_1753.4-3%29_Page_2.jpg)
27. media:Double Stack ZP 24-133-3 (1753.4-2 and 1753.4-3)_Page_3.jpg (https://wiki.anl.gov/wiki_cnm/images/2/25/Double_Stack_ZP_24-133-3_%281753.4-2_and_1753.4-3%29_Page_3.jpg)
28. media:Double Stack ZP 24-133-3 (1753.4-2 and 1753.4-3)_Page_4.jpg (https://wiki.anl.gov/wiki_cnm/images/5/5f/Double_Stack_ZP_24-133-3_%281753.4-2_and_1753.4-3%29_Page_4.jpg)
29. media:Double Stack ZP 24-133-3 (1753.4-2 and 1753.4-3)_Page_5.jpg (https://wiki.anl.gov/wiki_cnm/images/f/fa/Double_Stack_ZP_24-133-3_%281753.4-2_and_1753.4-3%29_Page_5.jpg)
30. media:Double Stack ZP 24-133-3 (1753.4-2 and 1753.4-3)_Page_6.jpg (https://wiki.anl.gov/wiki_cnm/images/7/7d/Double_Stack_ZP_24-133-3_%281753.4-2_and_1753.4-3%29_Page_6.jpg)
31. media:Efficiency_Au_t_300_nm_8keV_12keV.jpg (https://wiki.anl.gov/wiki_cnm/images/a/ab/Efficiency_Au_t_300_nm_8keV_12keV.jpg)
32. media:Efficiency_Au_t_900_nm_8keV_12keV.jpg (https://wiki.anl.gov/wiki_cnm/images/b/b8/Efficiency_Au_t_900_nm_8keV_12keV.jpg)
33. media:Fluorescence vs transmission orientation.jpg (https://wiki.anl.gov/wiki_cnm/images/d/d6/Fluorescence_vs_transmission_orientation.jpg)
34. media:Fluorescence_Standard.pdf‎ (https://wiki.anl.gov/wiki_cnm/images/d/d6/Fluorescence_Standard.pdf)
35. media:Import_Fluo_scans_into_Origin-1.pdf (https://wiki.anl.gov/wiki_cnm/images/d/d5/Import_Fluo_scans_into_Origin-1.pdf)
36. media:MAN-XMAP_1.0.3.pdf (https://wiki.anl.gov/wiki_cnm/images/f/fc/MAN-XMAP_1.0.3.pdf)
37. media:MirrorSystem_Radius_vs_theta_encoders_7nov08.pdf (https://wiki.anl.gov/wiki_cnm/images/4/48/MirrorSystem_Radius_vs_theta_encoders_7nov08.pdf)
38. media:NP_FDR_FinalPhase_Nov06_fnl.pdf (https://wiki.anl.gov/wiki_cnm/images/3/35/NP_FDR_FinalPhase_Nov06_fnl.pdf)
39. media:NanoXCT_lab-tool_manual.pdf (https://wiki.anl.gov/wiki_cnm/images/9/96/NanoXCT_lab-tool_manual.pdf)
40. media:Nanoprobe_MirrorSystem_SOW_fnl.pdf (https://wiki.anl.gov/wiki_cnm/images/d/d1/Nanoprobe_MirrorSystem_SOW_fnl.pdf)
41. media:Nanoprobe_tomography_alignment_for_dummies.pdf‎‎ (https://wiki.anl.gov/wiki_cnm/images/e/e0/Nanoprobe_tomography_alignment_for_dummies.pdf)
42. media:Parameters_ZP24_D133_t330.pdf (https://wiki.anl.gov/wiki_cnm/images/c/c9/Parameters_ZP24_D133_t330.pdf)
43. media:Parameters_ZP50_D240_t900.pdf (https://wiki.anl.gov/wiki_cnm/images/4/41/Parameters_ZP50_D240_t900.pdf)
44. media:Recommended_Systems_for_Tomography_Users_Version_2.pdf (https://wiki.anl.gov/wiki_cnm/images/3/3c/Recommended_Systems_for_Tomography_Users_Version_2.pdf)
45. media:Robert's Tomo Alignment.pdf (https://wiki.anl.gov/wiki_cnm/images/c/cf/Robert%27s_Tomo_Alignment.pdf)
46. media:SDD_4el_collimator_28feb08.jpg (https://wiki.anl.gov/wiki_cnm/images/e/e9/SDD_4el_collimator_28feb08.jpg)
47. media:Technote_dt_primer.pdf‎ (https://wiki.anl.gov/wiki_cnm/images/a/a3/Technote_dt_primer.pdf)
48. media:Technote_dt_record_positions_revB.pdf‎ (https://wiki.anl.gov/wiki_cnm/images/9/94/Technote_dt_record_positions_revB.pdf)
49. media:Tomography Manual.pdf (https://wiki.anl.gov/wiki_cnm/images/f/f5/Tomography_Manual.pdf)
50. media:Vortex-ME4 Multi-El User Manual Rev.4.doc (https://wiki.anl.gov/wiki_cnm/index.php)
51. media:VortexME4_specs_Rev.3.3.pdf (https://wiki.anl.gov/wiki_cnm/images/1/11/VortexME4_specs_Rev.3.3.pdf)
52. media:X24-30-2Au (1527.2-4 Encapsulated).jpg (https://wiki.anl.gov/wiki_cnm/images/7/77/X24-30-2Au_%281527.2-4_Encapsulated%29.jpg)
53. media:X24-30-2Au (1527.4-5)_Page_1 (https://wiki.anl.gov/wiki_cnm/images/b/bb/X24-30-2Au_%281527.4-5%29_Page_1)
54. media:X24-30-2Au (1527.4-5)_Page_2 (https://wiki.anl.gov/wiki_cnm/images/1/16/X24-30-2Au_%281527.4-5%29_Page_2)
55. media:X24-30-iNi (1757.1-3 Encapsulated) (https://wiki.anl.gov/wiki_cnm/images/8/8c/X24-30-iNi_%281757.1-3_Encapsulated%29)
56. media:X24-30-iNi (1757.1-4)_Page_1.jpg (https://wiki.anl.gov/wiki_cnm/images/1/15/X24-30-iNi_%281757.1-4%29_Page_1.jpg)
57. media:X24-30-iNi (1757.1-4)_Page_2.jpg (https://wiki.anl.gov/wiki_cnm/images/0/0f/X24-30-iNi_%281757.1-4%29_Page_2.jpg)
58. media:Zp24_80_3_1132_2_5_ANL_19jun2007.doc (https://wiki.anl.gov/wiki_cnm/images/9/92/Zp24_80_3_1132_2_5_ANL_19jun2007.doc)
59. media:nanoPi_usersmanual_2007_07_20.pdf (https://wiki.anl.gov/wiki_cnm/images/0/0b/NanoPi_usersmanual_2007_07_20.pdf)
60. media:nanoPi_usersmanual_2007_07_20.pdf (https://wiki.anl.gov/wiki_cnm/images/0/0b/NanoPi_usersmanual_2007_07_20.pdf)
61. media:nanoPi_usersmanual_2007_07_20.pdf (https://wiki.anl.gov/wiki_cnm/images/0/0b/NanoPi_usersmanual_2007_07_20.pdf)
62. media:zp50_240_9_1263_3_1_APS_8feb2008.pdf (https://wiki.anl.gov/wiki_cnm/images/b/bf/Zp50_240_9_1263_3_1_APS_8feb2008.pdf)

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image fileicon.png: >

  <image fileicon.png: >

  <image fileicon.png: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image 180px-PIXIS_XF.jpg: >

  <image fileicon-pdf.png: >

  <image 180px-Amtek_xr100cr_detector.jpg: >

  <image 180px-IMG_4458.JPG: >

  <image DataBook_Image_Small.jpg: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image 180px-Slide3.jpg: >

  <image 180px-Slide2.jpg: >

  <image 180px-Slide1.jpg: >

  <image 180px-Beamline_Overview_Photo.jpg: >

  <image 180px-Fluorescence_vs_transmission_orientation.jpg: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image 180px-Efficiency_Au_t_300_nm_8keV_12keV.jpg: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image 180px-Efficiency_Au_t_900_nm_8keV_12keV.jpg: >

  <image fileicon-pdf.png: >

  <image 180px-SDD_4el_collimator_28feb08.jpg: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image fileicon-pdf.png: >

  <image 180px-Phase_ring_specs.jpg: >

  <image 180px-Phase_rings.jpg: >

  <image 180px-CM_positions.jpg: >

  <image OSA_positions.jpg: >

  <image 180px-FOM_ZP_holder.jpg: >

  <image 180px-FOM_positions.jpg: >

  <image 180px-28718D25crop.jpg: >

  <image 180px-Nanoprobe_Instrument.jpg: >


|---------------------- # All public logs

Combined display of all available logs of CNM Wiki.
You can narrow down the view by selecting a log type, the username (case-sensitive), or the affected page (also case-sensitive).

1. 17:21, August 21, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Nanoprobe tomography alignment for dummies.pdf (https://wiki.anl.gov/cnm/File:Nanoprobe_tomography_alignment_for_dummies.pdf)
2. 19:54, August 19, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:John's Tomo.pdf (https://wiki.anl.gov/cnm/File:John%27s_Tomo.pdf) (John Provis view of tomography alignment)
3. 23:24, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded a new version of File:Robert's Tomo Alignment.pdf (https://wiki.anl.gov/cnm/File:Robert%27s_Tomo_Alignment.pdf) (Robert's handwritten notes from August 10,2009)
4. 23:20, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Robert's Tomo Alignment.pdf (https://wiki.anl.gov/cnm/File:Robert%27s_Tomo_Alignment.pdf) (Robert's handwritten notes from August 10, 2009 )
5. 17:27, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:OSA-3.tif (https://wiki.anl.gov/cnm/File:OSA-3.tif) (OSA 3, 35um, used, 20x 12 AUG 09)
6. 17:25, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:OSA-1.tif (https://wiki.anl.gov/cnm/File:OSA-1.tif) (OSA 35um used, 20X, 12 AUG 09)
7. 17:16, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:OSA-2.tif (https://wiki.anl.gov/cnm/File:OSA-2.tif) (50 um Hole, 20x, mounted 12 AUG 09)
8. 22:31, June 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:C848 User MS100E110.pdf (https://wiki.anl.gov/cnm/File:C848_User_MS100E110.pdf)
9. 19:13, April 30, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Technote dt primer.pdf (https://wiki.anl.gov/cnm/File:Technote_dt_primer.pdf) (This document describes basic usage of the PEWIN32Pro (a.k.a. PEWIN) program for diagnostics, maintenance and troubleshooting of the Delta Tau PMAC motion controller. For further information, consult the Delta Tau documentation (in particular the Software)
10. 19:12, April 30, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Technote dt record positions revB.pdf (https://wiki.anl.gov/cnm/File:Technote_dt_record_positions_revB.pdf) (This document describes how to record motor positions and PMAC variables as a function of time using PMAC Plot Pro, which is part of the PMAC Executive Suite provided by Delta Tau. The program is installed on many Xradia systems. )
11. 18:45, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Princeton Instruments PIXIS XF1024F Rev B1A.pdf (https://wiki.anl.gov/cnm/File:Princeton_Instruments_PIXIS_XF1024F_Rev_B1A.pdf)
12. 18:44, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:PIXIS XF.jpg (https://wiki.anl.gov/cnm/File:PIXIS_XF.jpg)
13. 18:40, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Amtek xr100cr.pdf (https://wiki.anl.gov/cnm/File:Amtek_xr100cr.pdf)
14. 18:40, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Amtek xr100cr detector.jpg (https://wiki.anl.gov/cnm/File:Amtek_xr100cr_detector.jpg)
15. 18:07, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:IMG 4458.JPG (https://wiki.anl.gov/cnm/File:IMG_4458.JPG)
16. 17:34, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:DataBook Image Small.jpg (https://wiki.anl.gov/cnm/File:DataBook_Image_Small.jpg)
17. 17:27, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Alignment Nanoprobe Mirror 4oct08.pdf (https://wiki.anl.gov/cnm/File:Alignment_Nanoprobe_Mirror_4oct08.pdf)
18. 17:21, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:MirrorSystem Radius vs theta encoders 7nov08.pdf (https://wiki.anl.gov/cnm/File:MirrorSystem_Radius_vs_theta_encoders_7nov08.pdf)
19. 17:19, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Nanoprobe MirrorSystem SOW fnl.pdf (https://wiki.anl.gov/cnm/File:Nanoprobe_MirrorSystem_SOW_fnl.pdf)
20. 17:09, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:NP FDR FinalPhase Nov06 fnl.pdf (https://wiki.anl.gov/cnm/File:NP_FDR_FinalPhase_Nov06_fnl.pdf)
21. 17:08, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Slide3.jpg (https://wiki.anl.gov/cnm/File:Slide3.jpg)
22. 17:08, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Slide2.jpg (https://wiki.anl.gov/cnm/File:Slide2.jpg)
23. 17:07, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Slide1.jpg (https://wiki.anl.gov/cnm/File:Slide1.jpg)
24. 17:05, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Beamline Overview Photo.jpg (https://wiki.anl.gov/cnm/File:Beamline_Overview_Photo.jpg)
25. 16:52, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Fluorescence vs transmission orientation.jpg (https://wiki.anl.gov/cnm/File:Fluorescence_vs_transmission_orientation.jpg)
26. 16:51, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Import Fluo scans into Origin-1.pdf (https://wiki.anl.gov/cnm/File:Import_Fluo_scans_into_Origin-1.pdf)
27. 16:40, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Parameters ZP24 D133 t330.pdf (https://wiki.anl.gov/cnm/File:Parameters_ZP24_D133_t330.pdf)
28. 16:40, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Efficiency Au t 300 nm 8keV 12keV.jpg (https://wiki.anl.gov/cnm/File:Efficiency_Au_t_300_nm_8keV_12keV.jpg)
29. 16:31, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Parameters ZP50 D240 t900.pdf (https://wiki.anl.gov/cnm/File:Parameters_ZP50_D240_t900.pdf)
30. 16:31, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Zp50 240 9 1263 3 1 APS 8feb2008.pdf (https://wiki.anl.gov/cnm/File:Zp50_240_9_1263_3_1_APS_8feb2008.pdf)
31. 16:31, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Efficiency Au t 900 nm 8keV 12keV.jpg (https://wiki.anl.gov/cnm/File:Efficiency_Au_t_900_nm_8keV_12keV.jpg)
32. 16:19, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Fluorescence Standard.pdf (https://wiki.anl.gov/cnm/File:Fluorescence_Standard.pdf)
33. 16:11, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:SDD 4el collimator 28feb08.jpg (https://wiki.anl.gov/cnm/File:SDD_4el_collimator_28feb08.jpg)
34. 16:10, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:30 5mm cap rot.pdf (https://wiki.anl.gov/cnm/File:30_5mm_cap_rot.pdf)
35. 16:10, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:30 5mm assy landscape.pdf (https://wiki.anl.gov/cnm/File:30_5mm_assy_landscape.pdf)
36. 15:59, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:MAN-XMAP 1.0.3.pdf (https://wiki.anl.gov/cnm/File:MAN-XMAP_1.0.3.pdf)
37. 15:58, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:VortexME4 specs Rev.3.3.pdf (https://wiki.anl.gov/cnm/File:VortexME4_specs_Rev.3.3.pdf)
38. 15:44, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:S26 Beamline Computers.xls (https://wiki.anl.gov/wiki_cnm/index.php)
39. 15:21, April 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:NanoPi usersmanual 2007 07 20.pdf (https://wiki.anl.gov/cnm/File:NanoPi_usersmanual_2007_07_20.pdf)
40. 22:21, April 13, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Phase ring specs.jpg (https://wiki.anl.gov/cnm/File:Phase_ring_specs.jpg)
41. 22:20, April 13, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Phase rings.jpg (https://wiki.anl.gov/cnm/File:Phase_rings.jpg)
42. 22:13, April 13, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:CM positions.jpg (https://wiki.anl.gov/cnm/File:CM_positions.jpg)
43. 22:09, April 13, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:OSA positions.jpg (https://wiki.anl.gov/cnm/File:OSA_positions.jpg)
44. 22:09, April 13, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:FOM ZP holder.jpg (https://wiki.anl.gov/cnm/File:FOM_ZP_holder.jpg)
45. 22:08, April 13, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:FOM positions.jpg (https://wiki.anl.gov/cnm/File:FOM_positions.jpg)
46. 21:52, April 13, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:28718D25crop.jpg (https://wiki.anl.gov/cnm/File:28718D25crop.jpg) (Nanoprobe Instrument (NPI))
47. 21:37, April 13, 2009 (https://wiki.anl.gov/wiki_cnm/index.php) Vrose (https://wiki.anl.gov/wiki_cnm/index.php) talk contribs uploaded File:Nanoprobe Instrument.jpg (https://wiki.anl.gov/cnm/File:Nanoprobe_Instrument.jpg) (Nanoprobe Instrument (NPI))


|--------------------- #### May 5, 2011

• 17:0617:06, May 5, 2011 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +295‎ 
Vortex ME4 (SII 4-element silicon drift diode) (https://wiki.anl.gov/cnm/Vortex_ME4_(SII_4-element_silicon_drift_diode))
‎No edit summary
current


|--------------------- #### April 12, 2011

• 15:0115:01, April 12, 2011 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +356‎ 
Pewin (https://wiki.anl.gov/cnm/Pewin)
‎No edit summary
current


|--------------------- #### April 11, 2011

• 14:1614:16, April 11, 2011 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +375‎  N
Pewin (https://wiki.anl.gov/cnm/Pewin)
‎ Created page with "Back to X-Ray Microscopy Pewin Device 02 controls lasers. {| {{table}} | align="center" style="background:#f0f0f0;"|'''command''' | align="center" style="background:#f0f0f0…"
• 14:1014:10, April 11, 2011 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +31‎ 
Beamline Controls (https://wiki.anl.gov/cnm/Beamline_Controls)
‎No edit summary


|--------------------- #### February 8, 2010

• 20:3620:36, February 8, 2010 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +17‎ 
Restart an IOC (https://wiki.anl.gov/cnm/Restart_an_IOC)
‎No edit summary
• 20:3520:35, February 8, 2010 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +39‎ 
Restart an IOC (https://wiki.anl.gov/cnm/Restart_an_IOC)
‎No edit summary
• 20:3420:34, February 8, 2010 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +139‎  Nm
Restart an IOC (https://wiki.anl.gov/cnm/Restart_an_IOC)
‎ New page: Back to X-Ray Microscopy 1) ssh to IOC (e.g., ssh epicsioc@ioc26idcdet) 2) type epicsioc 3) startioc You also can 'shutdown' the IOC.
• 20:3120:31, February 8, 2010 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +36‎ 
Beamline Controls (https://wiki.anl.gov/cnm/Beamline_Controls)
‎No edit summary


|--------------------- #### February 2, 2010

• 20:1120:11, February 2, 2010 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +30‎ 
Focusing optics module (FOM) (https://wiki.anl.gov/cnm/Focusing_optics_module_(FOM))
‎No edit summary
current
• 20:0520:05, February 2, 2010 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −60‎ 
Focusing optics module (FOM) (https://wiki.anl.gov/cnm/Focusing_optics_module_(FOM))
‎No edit summary
• 20:0420:04, February 2, 2010 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −80‎ 
Focusing optics module (FOM) (https://wiki.anl.gov/cnm/Focusing_optics_module_(FOM))
‎No edit summary


|--------------------- #### November 8, 2009

• 22:5622:56, November 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −2‎ 
Fluorescence (https://wiki.anl.gov/cnm/Fluorescence)
‎ →‎Coordinate Systems
current
• 22:5422:54, November 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +3‎ 
Fluorescence (https://wiki.anl.gov/cnm/Fluorescence)
‎ →‎Coordinate Systems
• 22:5222:52, November 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +141‎ 
Fluorescence (https://wiki.anl.gov/cnm/Fluorescence)
‎ →‎Coordinate Systems


|--------------------- #### August 21, 2009

• 17:2217:22, August 21, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +34‎ 
Attocubes (https://wiki.anl.gov/cnm/Attocubes)
‎No edit summary
current
• 17:2117:21, August 21, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  N
File:Nanoprobe tomography alignment for dummies.pdf (https://wiki.anl.gov/cnm/File:Nanoprobe_tomography_alignment_for_dummies.pdf)
‎No edit summary
current


|--------------------- #### August 19, 2009

• 19:5619:56, August 19, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +6‎ 
Attocubes (https://wiki.anl.gov/cnm/Attocubes)
‎ →‎Center-of-rotation alignment
• 19:5619:56, August 19, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +73‎ 
Attocubes (https://wiki.anl.gov/cnm/Attocubes)
‎ →‎Center-of-rotation alignment
• 19:5419:54, August 19, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +40‎  N
File:John's Tomo.pdf (https://wiki.anl.gov/cnm/File:John%27s_Tomo.pdf)
‎ John Provis view of tomography alignment
current


|--------------------- #### August 12, 2009

1. 23:2823:28, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +37‎ 
Imaging zone plates (https://wiki.anl.gov/cnm/Imaging_zone_plates)
‎No edit summary
current
2. 23:2823:28, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +16‎ 
Tomography (https://wiki.anl.gov/cnm/Tomography)
‎No edit summary
3. 23:2423:24, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎ 
File:Robert's Tomo Alignment.pdf (https://wiki.anl.gov/cnm/File:Robert%27s_Tomo_Alignment.pdf)
‎ uploaded a new version of "Image:Robert's Tomo Alignment.pdf": Robert's handwritten notes from August 10,2009
current
4. 23:2023:20, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +47‎  N
File:Robert's Tomo Alignment.pdf (https://wiki.anl.gov/cnm/File:Robert%27s_Tomo_Alignment.pdf)
‎ Robert's handwritten notes from August 10, 2009
5. 23:1923:19, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −1‎ 
Attocubes (https://wiki.anl.gov/cnm/Attocubes)
‎No edit summary
6. 23:1923:19, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +89‎ 
Attocubes (https://wiki.anl.gov/cnm/Attocubes)
‎No edit summary
7. 17:3017:30, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +40‎ 
Focusing optics module (FOM) (https://wiki.anl.gov/cnm/Focusing_optics_module_(FOM))
‎No edit summary
8. 17:2717:27, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +32‎  N
File:OSA-3.tif (https://wiki.anl.gov/cnm/File:OSA-3.tif)
‎ OSA 3, 35um, used, 20x 12 AUG 09
current
9. 17:2517:25, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +29‎  N
File:OSA-1.tif (https://wiki.anl.gov/cnm/File:OSA-1.tif)
‎ OSA 35um used, 20X, 12 AUG 09
current
10. 17:2017:20, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +20‎ 
Focusing optics module (FOM) (https://wiki.anl.gov/cnm/Focusing_optics_module_(FOM))
‎No edit summary
11. 17:1617:16, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +34‎  N
File:OSA-2.tif (https://wiki.anl.gov/cnm/File:OSA-2.tif)
‎ 50 um Hole, 20x, mounted 12 AUG 09
current
12. 17:1217:12, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +37‎ 
PIXIS 1024XF (https://wiki.anl.gov/cnm/PIXIS_1024XF)
‎No edit summary
current
13. 17:0417:04, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +59‎  m
Focusing optics module (FOM) (https://wiki.anl.gov/cnm/Focusing_optics_module_(FOM))
‎No edit summary
14. 16:2016:20, August 12, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +41‎  m
Focusing optics module (FOM) (https://wiki.anl.gov/cnm/Focusing_optics_module_(FOM))
‎No edit summary


|--------------------- #### August 8, 2009

• 19:3719:37, August 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +8‎ 
Attocubes (https://wiki.anl.gov/cnm/Attocubes)
‎No edit summary
• 19:2919:29, August 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +119‎ 
Attocubes (https://wiki.anl.gov/cnm/Attocubes)
‎No edit summary
• 19:2919:29, August 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −122‎ 
Tomography (https://wiki.anl.gov/cnm/Tomography)
‎ →‎Links
• 19:2919:29, August 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +99‎  N
Attocubes (https://wiki.anl.gov/cnm/Attocubes)
‎ New page: Back to X-Ray Microscopy <br /> Category:XMGCategory:TomographyCategory:Controls
• 19:2719:27, August 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +15‎ 
Tomography (https://wiki.anl.gov/cnm/Tomography)
‎ →‎Nanoprobe Instrument


|--------------------- #### June 15, 2009

• 16:1116:11, June 15, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +88‎  N
Region of Interest (ROI) (https://wiki.anl.gov/cnm/Region_of_Interest_(ROI))
‎ New page: ROIs are set by the ''MCA Display'' software. A local version can be found on Gluck.
current
• 16:0816:08, June 15, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +31‎ 
Fluorescence (https://wiki.anl.gov/cnm/Fluorescence)
‎ →‎Detectors


|--------------------- #### June 14, 2009

• 03:0603:06, June 14, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +6‎ 
Focusing optics module (FOM) (https://wiki.anl.gov/cnm/Focusing_optics_module_(FOM))
‎No edit summary


|--------------------- #### June 10, 2009

• 18:5718:57, June 10, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +4‎ 
Homing procedure for vertical focusing motors (https://wiki.anl.gov/cnm/Homing_procedure_for_vertical_focusing_motors)
‎No edit summary
current
• 18:5318:53, June 10, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎ 
Homing procedure for vertical focusing motors (https://wiki.anl.gov/cnm/Homing_procedure_for_vertical_focusing_motors)
‎No edit summary
• 18:5318:53, June 10, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +4‎ 
Homing procedure for vertical focusing motors (https://wiki.anl.gov/cnm/Homing_procedure_for_vertical_focusing_motors)
‎No edit summary
• 18:5218:52, June 10, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1,171‎  N
Homing procedure for vertical focusing motors (https://wiki.anl.gov/cnm/Homing_procedure_for_vertical_focusing_motors)
‎ New page: Back to X-Ray Microscopy This procedure describes the homing of the motors vzm, vyu, vyd.<br/> At the beginning make sure that not 2 MLLs are mounted in order to avoid collisions dur...
• 18:3118:31, June 10, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +51‎ 
The MLL Project (https://wiki.anl.gov/cnm/The_MLL_Project)
‎ →‎How to...
current


|--------------------- #### June 8, 2009

• 22:3322:33, June 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +14‎ 
Initialize the PI C-848 controller (https://wiki.anl.gov/cnm/Initialize_the_PI_C-848_controller)
‎No edit summary
current
• 22:3222:32, June 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +30‎ 
Initialize the PI C-848 controller (https://wiki.anl.gov/cnm/Initialize_the_PI_C-848_controller)
‎No edit summary
• 22:3122:31, June 8, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  N
File:C848 User MS100E110.pdf (https://wiki.anl.gov/cnm/File:C848_User_MS100E110.pdf)
‎No edit summary
current


|--------------------- #### June 5, 2009

• 15:3715:37, June 5, 2009 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +6‎ 
Blank EPICS windows (https://wiki.anl.gov/cnm/Blank_EPICS_windows)
‎No edit summary
current

• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|-------- ### Software

• Redhat (http://www.redhat.com/) Enterprise Linux 5 (http://www.redhat.com/software/rhel/)/CentOS 5 (http://www.centos.org)
• Moab Cluster Suite (http://www.clusterresources.com/pages/products/moab-cluster-suite.php)
• GNU and Intel (http://www.intel.com/support/performancetools/) compilers
• Applications (https://wiki.anl.gov/cnm/HPC/Applications)

• HPC (https://wiki.anl.gov/cnm/Category:HPC)


|----- ## Contents

1. 1 Introduction
 1.1. 1.1 Access
2. 2 Manual and Knowledge Base
3. 3 Ways to run Lumerical GUI applications
 3.1. 3.1 Directly on your computer – for Windows/Linux only
 3.2. 3.2 On Carbon, over X11 – for Windows/Linux/Mac
 3.3. 3.3 On Carbon, over VNC – for Windows/Linux/Mac
4. 4 Ways to run Lumerical compute engine applications
 4.1. 4.1 Running within the GUI application
 4.2. 4.2 Running as a batch job on Carbon
5. 5 Configuring license access when not running on Carbon directly
 5.1. 5.1 When inside CNM or using VPN as a CNM staff member or postdoc
  5.1.1. 5.1.1 Check license access configuration
  5.1.2. 5.1.2 Note on Web blocking
 5.2. 5.2 When outside CNM
 5.3. 5.3 File-based license configuration (advanced)
  5.3.1. 5.3.1 When inside CNM
  5.3.2. 5.3.2 When outside CNM
6. 6 Running compute jobs within fdtd-engine (FDTD)
 6.1. 6.1 Memory issues
7. 7 Running Optimization Jobs
 7.1. 7.1 Resource Configuration
 7.2. 7.2 Testing the Configuration
 7.3. 7.3 Running the optimization


|----- ## Introduction

Lumerical consists of several applications, the most popular being FDTD Solutions to perform photonics modeling. Others are Multiphysics (formerly DEVICE), MODE, and INTERCONNECT.

The applications typically have two primary components.

• A design application (GUI). These are licensed by user.
• A solver, or engine, licensed by compute job.

Lumerical was originally produced by Lumerical, Inc., which has been acquired by Ansys in 2020.
Ansys introduced major changes to the Lumerical licensing engine and terms,
notably limiting user eligibility and reducing concurrent capabilities of solvers.


|----- ### Access

Access to Lumerical is limited to Argonne staff who are CNM users, and to CNM staff.

To request access, submit a support request (https://wiki.anl.gov/cdn-cgi/l/email-protection).


|----- ## Manual and Knowledge Base

https://kb.lumerical.com/


|----- ## Ways to run Lumerical GUI applications

The Lumerical applications, both GUI and compute engines, can be run on any desktop or laptop computer, and on our HPC cluster, Carbon.
In every situation, the application requires network access to a Lumerical license service running on Carbon.

For the GUI applications, there are three ways to run:

1. Run on your desktop or laptop directly and use license port forwarding. For versions 2021 and later, this is possible on Linux or Windows only, because ANSYS decided to no longer offer macOS packages.
2. Run on Carbon and display on your machine over X11 forwarding (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS)
3. Run on Carbon in a VNC virtual desktop (https://wiki.anl.gov/cnm/HPC/Network_Access/Virtual_Desktop) and display that desktop on your machine.

Here are considerations to help you choose:


|----- ### None

Run any Lumerical application directly, or natively on your Windows or Linux machine; Macs are not supported from 2021 on.
The application needs to be installed on your machine and be configured to obtain the Lumerical license over the network from Carbon.

• Advantage: Native graphics speed.
• Caveat: When running outside of CNM (which is possible), you will need an active network connection to NST.

To get started:

• You will need to have the Lumerical software installed on your desktop or laptop.
 • For an Argonne-owned machine, submit an IT support request (https://wiki.anl.gov/cdn-cgi/l/email-protection) to have the software installed.
 • For your own machine, you must have Lumerical binaries installed yourself, either through your home institution or by stepping up from a trial version.
• In the application, configure license access as shown below.


|----- ### None

Run a Lumerical GUI application on a Carbon login node, and have its windows appear on your screen using the X Window system

  fdtd-solutions &

• Requires an X11 server application on your desktop machine.
• Requires X11 forwarding under SSH.
• Advantage: Runs with its own windows, has basic Copy&Paste support.
• Disadvantage: May run sluggish.


|----- ### None

Run a Lumerical GUI application on Carbon in a VNC virtual desktop (https://wiki.anl.gov/cnm/HPC/Network_Access/Virtual_Desktop), and view this virtual desktop on your machine.

• Requires a VNC client on your side.
• Advantage: uses compression and hence can be faster than X11.
• Disadvantage: Limited desktop environment, Copy&Paste support depends on VNC viewer client.


|----- ## Ways to run Lumerical compute engine applications

For the compute engine, there are two distinct ways to run:


|----- ### Running within the GUI application

Select this means when you expect the compute task to complete relatively quickly – say, up to an hour or so, or however long you can tolerate to dedicate CPU on your machine.

1. Push the "Run" button in the GUI.
2. Wait for the result.
3. Analyze results in the GUI.


|----- ### None

Select this means when the compute task runs for a longer time, or you have many compute tasks, in particular when you run a "parameter sweep". Running a sweep on Carbon allows you to process the grid points of your parameter mesh in parallel over the CPUs on one compute node or even on several compute nodes.

To run a batch job:

1. Design and your model in the GUI.
2. Place "monitors" as you need.
3. For a parameter sweep: define your parameter grid, i.e., the variables, search intervals, and number of variable steps.
4. Save the model as *.fsp file.
5. Transfer the file to Carbon (if you did the above steps on your machine).
6. Copy and adapt one of the Carbon Lumerical job templates for your model.
7. Submit the job.
8. Await job completion, either by inspection, or by receiving a job completion mail.
9. Transfer any updated *.fsp files back from Carbon to your machine, if so desired, for analysis there.


|----- ## Configuring license access when not running on Carbon directly

To use the #Native Lumerical applications on your computer, as opposed to running on Carbon over a graphical connection, the following conditions must be met:

• Your computer must be able to reach the Carbon license server, at least while you run any of the Lumerical applications.
• Your Lumerical suite must be configured to use those license servers.

The specific configuration steps depend on the network location of your computer, as follows:


|----- ### When inside CNM or using VPN as a CNM staff member or postdoc

Reminder: Licensing for all Lumerical applications running on Carbon itself (i.e., as started on a login node or by a batch job) are pre-configured, so none of the following applies there.

On your desktop or laptop, do the following:

  <image 350px-HPC_2019-04-12_Carbon_reachability.png: HPC 2019-04-12 Carbon reachability.png>

1. Verify that your computer is connected inside of CNM's network, by one of the following:

A connection over the Argonne-guest WiFi network or over VPN as a user of another division will not suffice.
 1.1. a wired connection in a CNM building (440, 441), or
 1.2. over Argonne-auth WiFi in the same building, or
 1.3. over Argonne VPN, established as a CNM staff user.
2. In a web browser open the following URL exactly as shown, i.e., having a bare hostname without dots:

Example for mac OS 
Open your computer's "Network" configuration settings.
Select the "VPN" configuration profile.
If needed, unlock the panel to make changes. You may need to have administrator privileges to do so. Request assistance if needed.
push the "Advanced…" button.
Locate the tab or section for DNS configuration.
Add cnm.anl.gov as a DNS Search Domain and apply the settings.
Retry the link above.
Explanation: There are two reasons for the steps above:
 (https://wiki.anl.gov/cnm/File:HPC_2020-11-05_mac_VPN_DNS.png)
 2.1. http://carbonmgmt/
 2.2. If you get a status page mentioning "Carbon", your configuration is OK. Proceed to step 2.
 2.3. Otherwise, you will see an error message similar to "server cannot be found". Proceed as follows:
 2.4. Open your computer's "Network" configuration settings.
 2.5. Select the "VPN" configuration profile.
 2.6. If needed, unlock the panel to make changes. You may need to have administrator privileges to do so. Request assistance if needed.
 2.7. push the "Advanced…" button.
 2.8. Locate the tab or section for DNS configuration.
 2.9. Add cnm.anl.gov as a DNS Search Domain and apply the settings.
 2.10. Retry the link above.
 2.11. Accommodate both nst.anl.gov and cnm.anl.gov as domain names. Carbon-based license services use only the latter.
 2.12. Accommodate license access from both inside and outside of the Carbon cluster.
3. Start the License Configure or simply the main FDTD Solutions application on your machine.
 3.1. Note: You may see a window with title "Getting Started" containing a notice titled "Blocked by Outdated Software" from Argonne's Cyber Security Program Office. You may safely close the window. The notice appears because the window is a web page that is rendered by an often older browser engine compiled-in to FDTD.
4. If you started FDTD Solutions, locate the Configure License menu item, either in the application or Help menu.
5. Choose the tab "Floating" in the Configure License window.
 5.1. Activate the checkbox: Configure redundant servers.
 5.2. Set the Server entries to clicense1, clicense2, and clicense3, exactly as shown, without a domain name part.
6. If you used the License Configure app, close it, and start the main FDTD Solutions application.
7. In FDTD, choose About FDTD Solutions.

• a wired connection in a CNM building (440, 441), or
 • over Argonne-auth WiFi in the same building, or
 • over Argonne VPN, established as a CNM staff user.

  <image 350px-HPC_2020-11-05_mac_VPN_DNS.png: HPC 2020-11-05 mac VPN DNS.png>

0.1. Open your computer's "Network" configuration settings.
 0.2. Select the "VPN" configuration profile.
 0.3. If needed, unlock the panel to make changes. You may need to have administrator privileges to do so. Request assistance if needed.
 0.4. push the "Advanced…" button.
 0.5. Locate the tab or section for DNS configuration.
 0.6. Add cnm.anl.gov as a DNS Search Domain and apply the settings.
 0.7. Retry the link above.


|----- #### Check license access configuration

License settings change across releases. For reference on recent versions, see the panels below.

• License config 2022


 (https://wiki.anl.gov/cnm/File:HPC_2022-08-23_Lumerical_ANSYS_setup_inside.png)
• License config 2023


 (https://wiki.anl.gov/cnm/File:HPC_2023-08-22_Lumerical_License_config_2023_R2.png)

  <image 120px-HPC_2022-08-23_Lumerical_ANSYS_setup_inside.png: License config 2022>

License config 2022

  <image 120px-HPC_2023-08-22_Lumerical_License_config_2023_R2.png: License config 2023>

License config 2023


|----- #### Note on Web blocking

  <image 350px-HPC_2019-04-12_Argonne_Network_Blocking_in_FDTD.png: HPC 2019-04-12 Argonne Network Blocking in FDTD.png>

For the About Lumerical menu item, instead of proper license information, an Argonne network blocking page may appear when using an older (or even not-so old) version of FDTD.
This is due to Lumerical using a built-in web browser engine that may be considered outdated by Argonne's network security configuration.


|----- ### When outside CNM

1. Close any connection to Carbon's login nodes, and Mega.
2. Revisit the port forwarding configuration for your your SSH client (one-time only).

• Mac and Linux users: Add to  ~/.ssh/config (https://wiki.anl.gov/cnm/HPC/Network_Access/SSH_Tunnel_Setup_on_Linux_and_MacOS), in the section for mega:

  Host mega
  	…
  	# ANSYS-LM at former Lumerical-LM
  	LocalForward	1055	clicense1:1055
  	LocalForward	27011	clicense1:27011

• Windows users: See HPC/Network Access/PuTTY Configuration/Accessing Carbon licenses remotely (https://wiki.anl.gov/cnm/HPC/Network_Access/PuTTY_Configuration/Accessing_Carbon_licenses_remotely)

1. Re-open the connection to Mega.
2. Install or upgrade the Lumerical application
3. Open Lumerical as usual.
4. Select the "Licenses" menu item.
5. Open the "Floating" tab.
Enter the host IP address as follows:

Note: Do not use "localhost" - this is ambiguous when IPv6 is in play.
 (https://wiki.anl.gov/cnm/File:HPC_2013-07-24_Lumerical_FlexNet_client_setup.png)
6. Push "Apply".
7. Start Lumerical.: To inspect the license setting, choose About Lumerical from the application menu.

  <image 350px-HPC_2013-07-24_Lumerical_FlexNet_client_setup.png: HPC 2013-07-24 Lumerical FlexNet client setup.png>


|----- ### None

• The license path all Lumerical application is stored in one of the following files:

  <USER_HOME_DIR>/.config/Lumerical/License.ini
  <LUMERICAL_INSTALL_DIR>/Lumerical/License.ini

• You may edit the files manually in a text editor while the respective application is not running. (Otherwise your edits will be overwritten when the application closes and saves state.)
• The file contents are as follows:


|----- #### When inside CNM

  [license]
  ansysserver\host=1055@clicense1:1055@clicense2:1055@clicense3
  default=user
  domain=2


|----- #### When outside CNM

  [license]
  ansysserver\host=1055@localhost
  default=user
  domain=2

• To use, set up SSH tunneling for ports 1055 and 27011 (both are needed, as of 2023).




|----- ## None

To run a presumably parallel job, construct your model and task within the fdtd-solutions application and save it as an .fsp file.
Then copy and customize the following job template, entering your account and file names:

  $LUMERICAL_HOME/sample.job

Note: fdtd-engine does not support checkpointing. Select your #PBS -l walltime parameter generously.


|----- ### Memory issues

When running an fdtd-engine compute job in parallel, during the final stage (Data Collection) the memory use of the MPI master process could dramatically increase.
For example, during the calculation ("cruising") stage each MPI process may be happy with using 2-4 GB, but in the collection stage, the master process (MPI rank 0) may require 10 times as much and more.
The other MPI processes evidently remain idle but running during the collection stage, and continue to hold on to their memory, which could amount to a valuable 10–15 GB, say.
The increased memory demand may cause the node to go into swap, even for Carbon's "bigmem" nodes which have 48 GB RAM each.
Swap use will be detected and at first tolerated by TORQUE (PBS), but after a few minutes TORQUE will kill the job.
In that case, the following error will appear in the standard error stream:

  =>> PBS: job killed: swap rate due to memory oversubscription is too high
  mpirun: abort is already in progress...hit ctrl-c again to forcibly terminate

  mpirun: killing job...

The standard output stream may reach 99% or 100%, then stop:

  0% complete. Max time remaining: 16 mins, 4 secs. Auto Shutoff: 1
  1% complete. Max time remaining: 15 mins, 4 secs. Auto Shutoff: 1
  …
  98% complete. Max time remaining: 20 secs. Auto Shutoff: 6.21184e-05
  99% complete. Max time remaining: 9 secs. Auto Shutoff: 5.5162e-05
  100% complete. Max time remaining: 0 secs. Auto Shutoff: 4.51006e-05

• Try to collect less data.

Chris K. from Lumerical Support wrote:
For example, all field monitors allow you to choose which E/H/P fields to collect. If you only care about power transmission through a monitor, you can disable all the E/H/P fields and just collect the 'net power'. You can also control the number of frequency points, and you can enable spatial downsampling, and obviously just make the monitors smaller.

• Have the master process run on a node of its own, as shown at HPC/Submitting and Managing Jobs/Advanced node selection#Different PPN by node (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection). You will trade away compute capacity for memory. Caveat: Try to keep the total number of cores highly divisible. Example:
 • A typical request for 64 cores:

  #PBS -l nodes=8:ppn=8

• 
 • Improved request:

  #PBS -l nodes=1:ppn=1:bigmem+1:ppn=7+7:ppn=8
  #PBS -l naccesspolicy=SINGLEJOB -n

Note that the + sign is a field delimiter in the "nodes" specification.
This specification requests the same number of cores total, but split up the load of the original first node over two nodes, one with a single core, and the second with the remaining 7 cores, followed by as many 8-core nodes as needed.

  nodes = ( 1:ppn=1 ) + ( 1:ppn=7 ) + ( 7:ppn=8 ) = 1 + 7 + 7 * 8 = 64 cores.

Rank 0 will have the entire RAM on the first node available, and is the only rank to likely need "bigmem". The other ranks are modest in memory needs and unlikely to face contention.
Usually, Moab will ensure that all ranks run on the same node generation, in this case gen2 (see HPC/Submitting and Managing Jobs/Advanced node selection#Hardware (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Advanced_node_selection)).


|----- ## Running Optimization Jobs

• Prepare your optimization project as needed, save it as *.fsp file, and if needed copy it onto Carbon.
• Open fdtd-solutions on Carbon.


|----- ### Resource Configuration

1. Click Configure resources under the Simulation menu entry.
2. Remove all but the "localhost" entry.
 (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_1.png)
3. Push Add.
4. Double-click the Name column of the new resource entry, enter "Carbon", and press enter.
 (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_2.png)
5. Push Edit.
6. Enter the advanced options as shown:
 (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_3.png)

  <image HPC_2014-04-28_Lumerical_optimizations_1.png: HPC 2014-04-28 Lumerical optimizations 1.png>

  <image HPC_2014-04-28_Lumerical_optimizations_2.png: HPC 2014-04-28 Lumerical optimizations 2.png>

  <image HPC_2014-04-28_Lumerical_optimizations_3.png: HPC 2014-04-28 Lumerical optimizations 3.png>

  Job launching:				Custom

  	mpiexec engine:				/opt/apps/lumerical/8.16.931-1/bin/mpiexec-as-job
  						(Copy the directory components from the "FDTF engine" setting below).

  	Extra mpiexec command line options:	-l nodes=1:ppn=8 -l walltime=2:00:00 --
  	Suppress any default mpiexec options:	yes
  	Bypass mpi on localhost:		no

  	FDTD engine:				(leave default)
  	Extra FDTD … options:			(leave empty)
  	Create log for all processes:		no

• Push OK. The window will close.


|----- ### Testing the Configuration

• In the toplevel Resource Configuration window you may want to push "Run tests". This may work and you get "MPICH tests completed successfully". Likely, this will turn into "Timeout" shortly afterwards.

 (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_4.png)
• Duplicate the "Carbon" resource about 5-8 times.
• Push Save.

  <image HPC_2014-04-28_Lumerical_optimizations_4.png: HPC 2014-04-28 Lumerical optimizations 4.png>

  <image HPC_2014-04-28_Lumerical_optimizations_5.png: HPC 2014-04-28 Lumerical optimizations 5.png>

You are ready to run the optimization.


|----- ### Running the optimization

• You'll get windows like the following. There will be several volleys, each producing a "swarm" point in the figure-of-merit trend plot.
 (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_6.png)

  <image HPC_2014-04-28_Lumerical_optimizations_6.png: HPC 2014-04-28 Lumerical optimizations 6.png>

  <image HPC_2014-04-28_Lumerical_optimizations_7.png: HPC 2014-04-28 Lumerical optimizations 7.png>

  <image HPC_2014-04-28_Lumerical_optimizations_8.png: HPC 2014-04-28 Lumerical optimizations 8.png>

• You may go back and edit the Advanced options of a resource, but you must remove all other previously cloned entries, and re-clone the newly edited resource.
• When you choose to provide qsub options under "Extra mpiexec command line options", such as to allow for a walltime longer than the default 1 hour, ensure to append "--".

  <image 180px-HPC_2023-08-22_Lumerical_License_config_2023_R2.png: >

  <image 180px-HPC_2022-08-23_Lumerical_ANSYS_setup_inside.png: >

  <image 180px-HPC_Comsol_licensed_modules.png: >

  <image 180px-HPC_2020-11-05_mac_VPN_DNS.png: >

  <image 180px-HPC_2012-08_PuTTY_config_4a_command.png: >

  <image 180px-HPC_2019-04-12_Lumerical_Floating_setup_inside.png: >

  <image 180px-HPC_2013-07-24_Lumerical_FlexNet_client_setup.png: >

  <image 180px-HPC_2020-01_VNC_Screen_Sharing_Preferences_2.png: >

  <image 180px-HPC_2020-01_VNC_Screen_Sharing_Preferences_1.png: >

  <image 180px-HPC_2019-04-12_Argonne_Network_Blocking_in_FDTD.png: >

  <image 180px-HPC_2014-07-31_Lumerical_3_server_About.png: >

  <image 180px-HPC_2019-04-12_Carbon_reachability.png: >

  <image 180px-HPC_2014-04-28_Lumerical_optimizations_3.png: >

  <image 180px-VNC_add_cnm_to_DNS_2.png: >

  <image 180px-VNC_add_cnm_to_DNS_1.png: >

  <image 180px-HPC_2014-07-31_Lumerical_FlexNet_client_setup_3_servers_inside.png: >

  <image 180px-HPC_2014-04-28_Lumerical_optimizations_8.png: >

  <image 180px-HPC_2014-04-28_Lumerical_optimizations_7.png: >

  <image 180px-HPC_2014-04-28_Lumerical_optimizations_6.png: >

  <image 180px-HPC_2014-04-28_Lumerical_optimizations_5.png: >

  <image 180px-HPC_2014-04-28_Lumerical_optimizations_4.png: >

  <image 180px-HPC_2014-04-28_Lumerical_optimizations_2.png: >

  <image 180px-HPC_2014-04-28_Lumerical_optimizations_1.png: >

  <image 180px-HPC_2012-10-04_VNC_running.png: >

  <image 180px-HPC_2013-07-24_Lumerical_FlexNet_client_setup_inside.png: >

  <image 180px-HPC_2012-08_PuTTY_config_13_loaded_clogin.png: >

  <image 180px-HPC_2012-10_WinSCP_config_12_PuTTY_integration.png: >

  <image 180px-HPC_2012-10_WinSCP_connect_11_clogin.png: >

  <image 180px-HPC_2012-10_WinSCP_connect_10_mega.png: >

  <image 180px-HPC_2012-10_WinSCP_config_3_clogin.png: >

  <image 180px-HPC_2012-10_WinSCP_config_2_mega.png: >

  <image 180px-HPC_2012-10_WinSCP_config_1_new.png: >

  <image 180px-HPC_2012-10-04_VNC_in_Screen_Sharing_Preferences.png: >

  <image HPC_2012-10-04_VNC_MWM_context_menu.png: >

  <image 180px-HPC_2012-10-04_VNC_in_Screen_Sharing_View_menu.png: >

  <image 180px-HPC_2012-10-04_VNC_in_Screen_Sharing_Connection_menu.png: >

  <image 180px-HPC_2012-10-04_VNC_in_Screen_Sharing_with_mouse_hovering_over_toolbar.png: >

  <image 180px-HPC_2012-10-04_VNC_Screen_Sharing_password.png: >

  <image 180px-HPC_2012-10-04_VNC_Screen_Sharing_warning.png: >

  <image 180px-HPC_2012-10-04_VNC_Finder_Connect_to_Server.png: >

  <image HPC_2012-08_VNL_LMX_log.png: >

  <image 180px-HPC_2012-08_PuTTY_config_2a_load_default.png: >

  <image 180px-HPC_2012-08_PuTTY_config_12_loaded_clogin.png: >

  <image 180px-HPC_2012-08_PuTTY_config_5_tunnels_remove.png: >

  <image 180px-HPC_2012-08_PuTTY_config_6_tunnels_clean.png: >

  <image 180px-HPC_2012-08_PuTTY_config_11_load_clogin.png: >

  <image 180px-HPC_2012-08_PuTTY_config_14_mega_re-prompt.png: >

  <image 180px-HPC_2012-08_PuTTY_config_13_mega_prompt.png: >

  <image 180px-HPC_2012-08_PuTTY_shortcuts_3.png: >

  <image 180px-HPC_2012-08_PuTTY_shortcuts_1.png: >


|--- # All public logs

Combined display of all available logs of CNM Wiki.
You can narrow down the view by selecting a log type, the username (case-sensitive), or the affected page (also case-sensitive).

1. 15:04, August 22, 2023 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs created page File:HPC 2023-08-22 Lumerical License config 2023 R2.png (https://wiki.anl.gov/cnm/File:HPC_2023-08-22_Lumerical_License_config_2023_R2.png)
2. 15:04, August 22, 2023 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2023-08-22 Lumerical License config 2023 R2.png (https://wiki.anl.gov/cnm/File:HPC_2023-08-22_Lumerical_License_config_2023_R2.png)
3. 16:19, April 14, 2023 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs created page Template:Catalog Modules (https://wiki.anl.gov/cnm/Template:Catalog_Modules) (Created page with "Query date: 2018-01-09, 14:56. {| class="wikitable sortable" cellspacing="0" cellpadding="5" style="text-align:left; margin: 1em auto 1em auto;" |- style="background:#ccc;"...")
4. 22:10, January 23, 2023 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs created page TMG (https://wiki.anl.gov/cnm/TMG) (Redirected page to HPC) Tag: New redirect
5. 19:15, August 23, 2022 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs created page File:HPC 2022-08-23 Lumerical ANSYS setup inside.png (https://wiki.anl.gov/cnm/File:HPC_2022-08-23_Lumerical_ANSYS_setup_inside.png)
6. 19:15, August 23, 2022 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2022-08-23 Lumerical ANSYS setup inside.png (https://wiki.anl.gov/cnm/File:HPC_2022-08-23_Lumerical_ANSYS_setup_inside.png)
7. 23:00, December 14, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC Comsol licensed modules.png (https://wiki.anl.gov/cnm/File:HPC_Comsol_licensed_modules.png)
8. 17:43, September 21, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs created page HPC/Application licenses (https://wiki.anl.gov/cnm/HPC/Application_licenses) (Created page with "== Introduction == Licenses for several high-profile commercial applications are hosted on servers within the Carbon HPC cluster. Applications consuming these licenses can run...")
9. 17:48, September 1, 2021 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs moved page News (https://wiki.anl.gov/wiki_cnm/index.php) to Sandbox/News (https://wiki.anl.gov/cnm/Sandbox/News) without leaving a redirect
10. 18:29, November 5, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2020-11-05 mac VPN DNS.png (https://wiki.anl.gov/cnm/File:HPC_2020-11-05_mac_VPN_DNS.png)
11. 04:33, October 23, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC 2012-08 PuTTY config 4a command.png (https://wiki.anl.gov/cnm/File:HPC_2012-08_PuTTY_config_4a_command.png)
12. 15:15, April 8, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC 2019-04-12 Lumerical Floating setup inside.png (https://wiki.anl.gov/cnm/File:HPC_2019-04-12_Lumerical_Floating_setup_inside.png)
13. 22:55, January 30, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC 2013-07-24 Lumerical FlexNet client setup.png (https://wiki.anl.gov/cnm/File:HPC_2013-07-24_Lumerical_FlexNet_client_setup.png)
14. 21:33, January 17, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2020-01 VNC Screen Sharing Preferences 2.png (https://wiki.anl.gov/cnm/File:HPC_2020-01_VNC_Screen_Sharing_Preferences_2.png)
15. 21:33, January 17, 2020 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2020-01 VNC Screen Sharing Preferences 1.png (https://wiki.anl.gov/cnm/File:HPC_2020-01_VNC_Screen_Sharing_Preferences_1.png)
16. 19:24, April 12, 2019 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2019-04-12 Argonne Network Blocking in FDTD.png (https://wiki.anl.gov/cnm/File:HPC_2019-04-12_Argonne_Network_Blocking_in_FDTD.png)
17. 19:22, April 12, 2019 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC 2014-07-31 Lumerical 3 server About.png (https://wiki.anl.gov/cnm/File:HPC_2014-07-31_Lumerical_3_server_About.png)
18. 19:16, April 12, 2019 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2019-04-12 Lumerical Floating setup inside.png (https://wiki.anl.gov/cnm/File:HPC_2019-04-12_Lumerical_Floating_setup_inside.png)
19. 19:03, April 12, 2019 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2019-04-12 Carbon reachability.png (https://wiki.anl.gov/cnm/File:HPC_2019-04-12_Carbon_reachability.png)
20. 19:24, April 5, 2019 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC Comsol licensed modules.png (https://wiki.anl.gov/cnm/File:HPC_Comsol_licensed_modules.png)
21. 19:11, May 21, 2018 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC Comsol licensed modules.png (https://wiki.anl.gov/cnm/File:HPC_Comsol_licensed_modules.png) (2018 items)
22. 19:05, September 1, 2017 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC 2014-04-28 Lumerical optimizations 3.png (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_3.png) (added path copy overlays)
23. 18:47, September 1, 2017 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC 2014-04-28 Lumerical optimizations 3.png (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_3.png) (Need full path to mpiexec command - ugh!)
24. 18:23, September 1, 2017 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC 2014-04-28 Lumerical optimizations 3.png (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_3.png)
25. 16:18, June 22, 2017 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page HPC/Applications/atk/Installation on Windows (https://wiki.anl.gov/wiki_cnm/index.php) (content was: "# Download the Program Installation Package for your OS from http://quantumwise.com/products/download # Locate the installer in the Download...", and the only contributor was "Stern" (talk))
26. 16:57, May 18, 2017 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:VNC add cnm to DNS 2.png (https://wiki.anl.gov/cnm/File:VNC_add_cnm_to_DNS_2.png)
27. 16:57, May 18, 2017 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:VNC add cnm to DNS 1.png (https://wiki.anl.gov/cnm/File:VNC_add_cnm_to_DNS_1.png)
28. 22:42, November 17, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs moved page HPC/Module naming scheme 2008 (https://wiki.anl.gov/wiki_cnm/index.php) to HPC/Module naming scheme, 2008 edition (https://wiki.anl.gov/cnm/HPC/Module_naming_scheme,_2008_edition)
29. 18:18, November 17, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs moved page HPC/Module changes 2016 (https://wiki.anl.gov/wiki_cnm/index.php) to HPC/Module naming scheme 2016 (https://wiki.anl.gov/cnm/HPC/Module_naming_scheme_2016)
30. 22:27, November 4, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page Sandbox/Module changes (https://wiki.anl.gov/wiki_cnm/index.php) (content was: "#REDIRECT HPC/Module changes 2016" (and the only contributor was "Stern"))
31. 22:26, November 4, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page HPC/Module changes 2016 – Details (https://wiki.anl.gov/wiki_cnm/index.php) (Integrated into parent HPC/Module changes 2016)
32. 22:24, November 4, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page Sandbox/Module changes – Details (https://wiki.anl.gov/wiki_cnm/index.php) (content was: "#REDIRECT HPC/Module changes 2016 – Details" (and the only contributor was "Stern"))
33. 22:23, November 2, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page HPC/Modules Best Practices (https://wiki.anl.gov/wiki_cnm/index.php) (content was: "== Modules load order == * To resolve module dependencies, edit your configuration or job files to load required modules first, in this order: *# compilers *# MPI fl..." (and the only contributor was "Stern"))
34. 22:40, April 26, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page Technical Support/Panasonic Projector Location: 440-A208 (https://wiki.anl.gov/wiki_cnm/index.php) (obsolete)
35. 22:40, April 26, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page Technical Support/Optoma Projector A106 (https://wiki.anl.gov/wiki_cnm/index.php) (obsolete)
36. 22:39, April 26, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page Request Tracking System (https://wiki.anl.gov/wiki_cnm/index.php) (obsolete)
37. 18:57, April 26, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page Sandbox/Module conventions (https://wiki.anl.gov/wiki_cnm/index.php) (content was: "Integrated into [[../Module changes]]" (and the only contributor was "Stern"))
38. 18:55, April 26, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs moved page Sandbox/Module changes – Details (https://wiki.anl.gov/wiki_cnm/index.php) to HPC/Module changes 2016 – Details (https://wiki.anl.gov/wiki_cnm/index.php)
39. 18:52, April 26, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs moved page Sandbox/Module changes (https://wiki.anl.gov/wiki_cnm/index.php) to HPC/Module changes 2016 (https://wiki.anl.gov/cnm/HPC/Module_changes_2016)
40. 18:20, April 26, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs moved page Sandbox/Actions required for module changes (https://wiki.anl.gov/wiki_cnm/index.php) to Sandbox/Module changes – Details (https://wiki.anl.gov/wiki_cnm/index.php)
41. 22:32, February 26, 2016 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page Sandbox/Module features (https://wiki.anl.gov/wiki_cnm/index.php) (content was: "New and changed features <!-- == Dependent modules to be user-loaded == New-style modules are less implicit (less automatic and less rigid) in loading modules that t..." (and the only contributor was "Stern"))
42. 16:49, November 10, 2015 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page File:S26 Beamline Computers.xls (https://wiki.anl.gov/wiki_cnm/index.php) (Information leakage)
43. 16:45, November 10, 2015 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs deleted page Sector 26 beamline Computers (https://wiki.anl.gov/wiki_cnm/index.php) (content was: "Back to X-Ray Microscopy {| {{table}} | align="center" style="background:#f0f0f0;"|'''IP Addr.''' | align="center" style="background:#f0f0f0;"|'''''' | align="center" style="background:#f0f0f0;"|'''Name''' | align="center" style="bac...")
44. 21:33, August 13, 2015 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs moved page Sandbox/Test 6 (https://wiki.anl.gov/wiki_cnm/index.php) to Sandbox/Module features (https://wiki.anl.gov/wiki_cnm/index.php)
45. 21:32, August 13, 2015 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs moved page Sandbox/Test 5 (https://wiki.anl.gov/wiki_cnm/index.php) to Sandbox/Module changes (https://wiki.anl.gov/wiki_cnm/index.php)
46. 19:03, July 16, 2015 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC 2013-07-24 Lumerical FlexNet client setup.png (https://wiki.anl.gov/cnm/File:HPC_2013-07-24_Lumerical_FlexNet_client_setup.png)
47. 16:28, October 27, 2014 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded a new version of File:HPC Comsol licensed modules.png (https://wiki.anl.gov/cnm/File:HPC_Comsol_licensed_modules.png)
48. 22:45, July 31, 2014 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2014-07-31 Lumerical 3 server About.png (https://wiki.anl.gov/cnm/File:HPC_2014-07-31_Lumerical_3_server_About.png)
49. 22:42, July 31, 2014 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2014-07-31 Lumerical FlexNet client setup 3 servers inside.png (https://wiki.anl.gov/cnm/File:HPC_2014-07-31_Lumerical_FlexNet_client_setup_3_servers_inside.png)
50. 21:39, April 28, 2014 (https://wiki.anl.gov/wiki_cnm/index.php) Stern (https://wiki.anl.gov/cnm/User:Stern) talk contribs uploaded File:HPC 2014-04-28 Lumerical optimizations 8.png (https://wiki.anl.gov/cnm/File:HPC_2014-04-28_Lumerical_optimizations_8.png)


|---- # HPC/Module naming scheme, 2008 edition


|---- ## Contents

1. 1 Module naming scheme
2. 2 Default modules being loaded
3. 3 Module conventions on Carbon
 3.1. 3.1 Package description
 3.2. 3.2 Environment variable for package home directory
 3.3. 3.3 Package home directory organization
 3.4. 3.4 Package-specific sample job


|---- ## Module naming scheme

• Most application software is installed under /opt/soft
• Package directories are named  name-version-build , e.g. /opt/soft/jmol-12.1.37-1.
• Module names are organized by a mostly version-less name, with the version following after a slash:  name/version-build . Using the name component alone is possible and will select a default version for module subcommand to act upon. Some packages do carry a major version number in their name, notably fftw3 and vasp5.


|---- ## Default modules being loaded

The following modules are loaded by default for all users:

  $ module list
  Currently Loaded Modulefiles:
    1) icc/11/11.1.073           4) openmpi/1.4.5-intel11-2
    2) ifort/11/11.1.073         5) profile/user/1.0
    3) mkl/10.3.10


|---- ## Module conventions on Carbon


|---- ### Package description

The command module help brings up a brief description of a package, gives its version number (in the form of the full module name) and will usually contain a link to the package home page and/or documentation, e.g.:

  $ module help jmol

  ----------- Module Specific Help for 'jmol/12.0.34-1' -------------

  	Jmol is a molecule viewer platform for researchers in chemistry and
  	biochemistry, implemented in Java for multi-platform use.  This is the
  	standalone application.  It offers high-performance 3D rendering with
  	no hardware requirements and supports many popular file formats.

  	http://jmol.sourceforge.net/
  	http://wiki.jmol.org/


|---- ### Environment variable for package home directory

Most modules will set a convenience variable  $NAME_HOME which points to the package's toplevel directory.
Dashes in the package name are converted to underscores in the environment variable.
This is a convention on Carbon and is useful to inspect binaries or documentation and auxiliary files of a package:

  $ module load quantum-espresso

  $ ls $QUANTUM_ESPRESSO_HOME/bin
  average.x     dos.x              …
  band_plot.x   dynmat.x           …
  bands.x       epsilon.x          …
  bands_FS.x    ev.x               …
  …

  $ ls -F $QUANTUM_ESPRESSO_HOME/doc
  Doc/  atomic_doc/  examples/

  $ module load fftw3
  $ cat Makefile
  …
  CPPFLAGS += -I$(FFTW3_HOME)/include
  FPPFLAGS += -I$(FFTW3_HOME)/include
  …
  LDFLAGS += -L$(FFTW3_HOME)/lib
  …


|---- ### Package home directory organization

A package directory usually contains Unix-style subdirectories for the various files, which the modulefile usually automatically integrates into your user environment by means of standard environment variables.


|---- ### Package-specific sample job

Packages that require more than the  standard Carbon job template (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs/Example_Job_Script) contain a sample job in the toplevel directory:

  module load quantum-espresso
  cat $QUANTUM_ESPRESSO_HOME/*.job

which gives:

  #!/bin/bash
  # Job template for Quantum ESPRESSO 4.x on Carbon
  #
  #PBS -l nodes=1:ppn=8
  #PBS -l walltime=1:00:00
  #PBS -N qe_jobname
  #PBS -A cnm12345
  #
  # Output and error log:
  #PBS -o job.out
  #PBS -e job.err
  #
  ## send mail at begin, end, abort, or never (b, e, a, n):
  #PBS -m ea

  cd $PBS_O_WORKDIR

  # job-specific tmp directories -- each is node-local, wiped on exit
  export ESPRESSO_TMPDIR=$TMPDIR

  mpirun -x ESPRESSO_TMPDIR \
  	-machinefile  $PBS_NODEFILE \
  	-np $(wc -l < $PBS_NODEFILE) \
  	pw.x \
  	< input.txt > output.txt


|---- # HPC/Module naming scheme 2016


|---- ## Contents

1. 1 Properties
 1.1. 1.1 Naming scheme (Nomenclature)
  1.1.1. 1.1.1 Overview
  1.1.2. 1.1.2 Details
 1.2. 1.2 Module loading
  1.2.1. 1.2.1 No pre-loading
  1.2.2. 1.2.2 No recursive loading
 1.3. 1.3 System-specific command files
 1.4. 1.4 Workflow to determine module names to load
 1.5. 1.5 Best Practices
  1.5.1. 1.5.1 Use migration utility
  1.5.2. 1.5.2 Omit detailed versions from module names
  1.5.3. 1.5.3 Modules load order
  1.5.4. 1.5.4 Understanding dependency errors
  1.5.5. 1.5.5 "module purge" command
  1.5.6. 1.5.6 Test your module choices
   1.5.6.1. 1.5.6.1 Automated test
   1.5.6.2. 1.5.6.2 Manual test
   1.5.6.3. 1.5.6.3 Test in a job file
  1.5.7. 1.5.7 Effect on PBS job submissions
   1.5.7.1. 1.5.7.1 Loading modules in job files
   1.5.7.2. 1.5.7.2 Job routing by operation system
  1.5.8. 1.5.8 Using multiple MPI flavors
 1.6. 1.6 Minor changes for the module command
  1.6.1. 1.6.1 Determining default module versions
  1.6.2. 1.6.2 Name completion on command line
2. 2 Changes from previous scheme (2008)
 2.1. 2.1 Introduction
 2.2. 2.2 Motivation
 2.3. 2.3 Nomenclature
 2.4. 2.4 Extent of module catalog
 2.5. 2.5 Name changes for most modules
 2.6. 2.6 Name change exceptions
 2.7. 2.7 Explicit module selections required


|---- # Properties

(*) Environment modules are the means by which software applications are made available to users. Using modules allows users and administrators to pick, by user or even by compute job, a desired or default version of an application from typically several current and historic versions persisting on the system. Older versions are kept to improve reproducibility of results, an important characteristic of scientific computing.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


|---- ## None


|---- ### Overview

The full name of a module has two or more components separated by slashes /, in one of the following forms:

  name/api/version-build			# binary packages, compilers
  name/api/compiler/version-build		# compiled applications
  name/api/mpi/compiler/version-build	# compiled applications that use MPI

• The first component is the applications's main name, usually as chosen by its author.
• The last component is the version number, also usually chosen by the author, followed by a build identifier chosen on Carbon.
• Other name components may be present and indicate which set of major tools were used to produce the application locally, which usually implies which modules are required to be loaded to run the application.


|---- ### Details

• name is the package's name as chosen on Carbon. It is the name given by the software's author, lowercased for consistency. It may contain numbers if they are customarily part of the name, fftw3 being a prime example.
• api is the leading part or parts of the package's version number which indicates to suitable precision the API (https://en.m.wikipedia.org/wiki/Application_programming_interface) level across which different package versions are expected to be compatible (interchangable in terms of features). The api component typically has one of these forms:
major
major.minor

• compiler is a name component that is present when an application was compiled here and thus usually needs runtime libraries associated with the compiler used. The compiler name component is not strictly needed for applications that are statically linked, or come with all their own libraries, but can be present even then for informative purposes. The name component is typically absent for applications installed as binaries, notably commercial applications and, naturally, compilers themselves. The name component typically has sub-components of the form:
compilerNAME-compilerAPI
• mpi, present when neeeded, denotes the MPI (https://en.m.wikipedia.org/wiki/Message_Passing_Interface) flavor in use for parallel computations. This name component typically also has sub-components of the form:
mpiNAME-mpiAPI


|---- ## Module loading


|---- ### No pre-loading

No compiler or MPI modules are pre-loaded by the system.
The system only loads the "meta" module profile/user for you,
which merely looks for and loads your own .module-* files.


|---- ### No recursive loading

A module in general does not load other modules that it might depend on,
such as modules for compilers, an MPI flavor, or specialized libraries.


|---- ## System-specific command files

For a time, nodes with different operating systems and therefore more or less
different module catalogs will coexist in the cluster.
Since you will always have the same home directory on each node, most of your
script files would have to be written so they run on either operating system.
This would mean having to code if statements in your scripts,
which can be difficult and fragile to keep up.
To simplify conditional module selection, each node on Carbon now looks for
specific file names in your home directory. Depending on which files exist, a node:

1. determines whether to use the legacy or new naming scheme, and then
2. loads the file that is appropriate for the operating system running on that node, in the scheme determined.

Specifically:

• The mere existence of files of the form ~/.modules-elx, with x = 5,6,..., activates the new naming scheme. Subsequently, the file will be loaded and interpreed (in Tcl language) on the corresponding OS.
• On CentOS-5 nodes, a file ~/.modules-el5-legacy will trigger the legacy scheme, but only if ~/.modules-el5 is not present. In other words, a ~/.modules-el5 file has priority and causes ~/.modules-el5-legacy to be ignored.
• Without any ~/.modules-* files, CentOS-5 nodes will use the legacy scheme; CentOS-6 nodes always use the new scheme.
• Your .bashrc file will always be read, expecting the naming scheme that was determined by the presence or absence of .modules-* files.
• When running a PBS job, module commands in the job file will be read, in the same naming scheme as .bashrc.

• To load the same modules on any node, in the new scheme:

cd; ln -s .modules-el6 .modules-el5
It is possible but not recommended (because less future-proof) to keep your module selection in ~/.bashrc, and activate the new scheme on CentOS-5 nodes by simply creating an empty configuration: touch ~/.modules-el5
 • Place your configuration in ~/.modules-el6, then create a symbolic link:
 • It is possible but not recommended (because less future-proof) to keep your module selection in ~/.bashrc, and activate the new scheme on CentOS-5 nodes by simply creating an empty configuration: touch ~/.modules-el5


|---- ## Workflow to determine module names to load

(***) Caution: Module names are typically sorted as text strings the same way as Unix ls(1) does it. The resulting order may be counter-intuitive when the same part of several version numbers has a different number of digits. In the following example, version 8.16.x is the most recent release and needed to be administrator-designated as default because character for character, the string 8.7.x would be sorted highest.$ module avail lumerical...lumerical/7.5.7-1lumerical/8.0.5-1lumerical/8.15.736-1lumerical/8.16.931-1(default)lumerical/8.5.4-1lumerical/8.7.1-1...


To determine a suitable module name for a desired package:

1. On a Carbon command line, list the available flavors and versions, keeping in mind that some older modules were not migrated:
module avail
module avail packagename
(When upgrading from the previous naming scheme, remove version numbers from names of the formpackagename/version, leaving only packagename.)
2. Use the module show command to inspect details of a module, particularly its full name:
module show name/api
The command will use the name you gave to determine a suitable subset of all available modules, pick either a designated default or the highest-sorting version(***) from that subset, and finally show the details for that single version only.
3. Complete the desired package's name by appending API, MPI, and/or compiler specifications as needed, and repeat the previous step.
4. Determine a package's dependencies.
Inspect the output of module show …, look for any prereq statements, and load those on a previous line.

Only give full versions if: you require a build with a specific feature or behavior (such as to reproduce prior results with numeric consistency). To do so:

• Let's load a vasp5 module that uses the Intel-MPI flavor ("impi"):

  $ module avail vasp5
  ------------------------------------------------------------ /opt/apps/M/x86_64/EL ------------------------------------------------------------
  vasp5/5.3/openmpi-1.4/intel/5.3.2-mkl-beef-1    vasp5/5.4/impi-5/intel-16/5.4.1.3-6
  vasp5/5.3/openmpi-1.4/intel/5.3.3p3-mkl-3       vasp5/5.4/openmpi-1.10/intel-16/5.4.1.3-6
  vasp5/5.3/openmpi-1.4/intel/5.3.3p3-mkl-cellz-1

• Let's see which version would be loaded using an abbreviated name:

  $ module show vasp5/5.4
  -------------------------------------------------------------------
  /opt/apps/M/x86_64/EL/vasp5/5.4/openmpi-1.10/intel-16/5.4.1.3-6: 
  …

• Careful: The first output line shows the full file name of the module that would get loaded by the short name. In this case, the abbreviated module name, having no MPI name component, yields a module that uses a different MPI flavor than you want.
• You will need to be more explicit:

  $ module show vasp5/5.4/impi-5
  -------------------------------------------------------------------
  /opt/apps/M/x86_64/EL/vasp5/5.4/impi-5/intel-16/5.4.1.3-6:

  module-whatis	 VASP - Vienna Ab-initio Simulation Package 
  conflict	 vasp 
  conflict	 vasp-vtst 
  prereq	 intel/16
  prereq	 impi/5
  setenv		 VASP5_HOME /opt/apps/vasp5/5.4.1.3-6-impi-5-intel-16 
  prepend-path	 PATH /opt/apps/vasp5/5.4.1.3-6-impi-5-intel-16/bin 
  setenv		 VASP_COMMAND vasp-ase 
  setenv		 VASP_PP_PATH /opt/soft/vasp-pot/ase 
  -------------------------------------------------------------------

• Therefore, you'd need to add the following lines to your .modules-el6 file:

  module load intel/16
  module load impi/5
  module load vasp5/5.4/impi-5


|---- ## Best Practices


|---- ### Use migration utility

Use a helper utility to get started on splitting off and diversifying your existing module selection from .bashrc into .modules-* files:

  modules-migrate

  .bashrc
  .modules-el5-legacy
  .modules-el6

• Please note that the utility is fairly basic and cannot transform or choose versions and their dependencies as described here.
• The utility will give you the opportunity to inspect and edit the resulting files. Use a text editor of your choice, such as nano or vi to re-examine or edit these files further.
• To switch to the new scheme on all nodes, create or copy from .modules-el6:

  .modules-el5

• #Test your module choices, as shown below.


|---- ### Omit detailed versions from module names

When constructing a module load command, try to omit detailed version and build numbers from the end, i.e., load a module that has the full name foo/m.n/compiler/version-build by an abbreviated name foo/m.n/compiler.

For instance, instead of:

  module load intel/16/16.0.0-3
  module load openmpi/1.10/intel-16/1.10.0-4

Write:

  module load intel/16
  module load openmpi/1.10/intel-16

It is preferable to supply the compiler name part of MPI modules (here …/intel-16) because they usually both (a) need compiler libraries and (b) impliclity use their native compiler for further compilations.


|---- ### Modules load order

To meet module dependencies, edit your configuration or job files to load required modules first, in this order:

1. compilers
2. MPI flavor
3. other libraries that are dynamically loaded.
4. your desired application(s).


|---- ### Understanding dependency errors

Learn to recognize error messages from module load when a required module has not been loaded:

Example: A typical error message will look like:

  $ module load openmpi/1.10
  openmpi/1.10/intel-16/1.10.2-1(27):ERROR:151: Module 'openmpi/1.10/intel-16/1.10.2-1' depends on one of the module(s) 'intel/16/16.0.2 intel/16/16.0.1-2 intel/16/16.0.0-3 intel/16/16.0.0-1 intel/16/16.0.0-0'
  openmpi/1.10/intel-16/1.10.2-1(27):ERROR:102: Tcl command execution failed: prereq intel/16

• The missing prerequisite is the red item on the last line.
• The modules that would currently satisfy the requirement are shown on the preceding line, indicated here in blue.
• The full name of the "offending module", deduced from a possibly abbreviated name on the command line, appears in brown.

• You can inspect the prerequisites of a module in a more succinct manner:

  $ module show openmpi/1.10 2>&1 | grep req
  prereq	 intel/16


|---- ### None

Previously on Carbon it was difficult to reset the module selection during an interactive terminal session,
because the commands for the job queueing system, like qsub, were provided via a module.
You may now safely use the module "purge" command for its intended purpose, as

  module purge

followed by module load … to choose compilers, MPI flavors, and applications.

To re-load the customizations from your .modules-* files using the module profile:

  module purge
  module load profile


|---- ### Test your module choices


|---- #### Automated test

Use the test built into the migration utility:

  modules-migrate -t
  modules-migrate --test

This will simulate loading your existing .module-* files under the available operating systems.
Review the output. To correct any errors, edit the respective files manually or use the migration utility again:

  modules-migrate -e
  modules-migrate --edit


|---- #### Manual test

Same node
-----------
bash -l
module list
exit

To test your new module configuration in your actual environment:

1. Open another login shell on the current or another node.
2. Review error messages that might appear before your prompt.
3. Inspect which modules are loaded.
4. Edit your .module-* files and address any errors.
5. Close the test shell and repeat until your desired modules are loaded without errors.


|---- #### Test in a job file

Your module selection is likely most important in a PBS job file.
To avoid the hassle of extended wait times for production jobs,
use test jobs with a short walltime limit and place just diagnostic commands in the job script.

Use the module list and type shell commands to verify that all your modules are loaded
and that an application is properly callable without full paths.

Consider the following job file modtest.sh:

  #!/bin/bash
  #PBS -l nodes=1:ppn=1
  #PBS -l walltime=0:1:00
  #PBS -N modtest

  module list

  type vasp_gam

Submit the job:

  qsub modtest.sh

Alternatively, do the whole thing on the command line, without the need for a separate file:

  echo "module list; type vasp5" | qsub -l nodes=1:ppn=1,walltime=0:1:00 -N modtest

In either case, wait for the job to finish, then inspect the output files:

  qstat jobnumber
  …
  head modtest.[eo0-9]*

You should see something like:

  vasp_gam is /opt/apps/vasp5/5.4.1.3-6-openmpi-1.10-intel-16/bin/vasp_gam

An error looks like:

  -bash: type: vasp_gam: not found


|---- ### Effect on PBS job submissions


|---- #### Loading modules in job files

• You may now safely load modules in PBS job files when using recent MPI modules, both in the legacy and new schemes. Previously, this was not recommended.

• However, best practice is still to load all modules in dotfiles under your home directory.


|---- #### Job routing by operation system

• TORQUE/PBS jobs that are submitted from a node running CentOS-5 or CentOS-6 will normally be routed to run only on nodes that run the same OS release.
• Find the eligible OS in the qstat -f output:

  $ qstat -f jobnumber | grep opsys
     Resource_List.opsys = el5

• You may override the automatic selection prior to submission by adding an opsys job resource:

  #PBS -l opsys=el5

or:

  #PBS -l opsys=el6

• In a pinch, you may even change the OS request of a queued job by using the qalter command, e.g.:

  qalter -l opsys=el6 jobnumber


|---- ### Using multiple MPI flavors

• Different MPI flavors can, with caution, be loaded at the same time. This may be necessary because the system is less homogeneous than in the past and no longer uses a single "one true" MPI implementation.
• When modules of multiple MPI flavors are loaded, call the appropriate MPI commands by a full path specified via the MODULENAME_HOME environment variables that is set (by Carbon convention) in the modules.

Example: In a job file that is to run 2 applications that were compiled with different MPI flavors, write:

  $OPENMPI_HOME/bin/mpirun app1_name
  $IMPI_HOME/bin/mpirun app2_name


|---- ## Minor changes for the module command


|---- ### Determining default module versions

To determine which module will be loaded when an abbreviated name is used, inspect the first relevant line in the output of one of these commands:

  module show name
  module help name

The reason is twofold:

• The module avail command under CentOS-6 no longer issues the marker "(default)" when set for a particular module (which is done administratively using a .version file). I am not sure if this is a bug or by design, but the change makes the output more consistent.
• On the older CentOS-5 system the module command honors .version files only for the last component of the module. This may lead to different module versions being selected on different systems even when the list of available modules is identical. (Side note: This is a possibly fortuitous bug since openmpi-1.4, used on CentOS-5, sorts after openmpi-1.10.)


|---- ### Name completion on command line

When working interactively in a terminal, you can use the "Tab completion" feature of the Bash shell to complete a partially typed module name and show all names available for the name typed so far.

The feature works as follows. At a shell prompt (shown as "$"), type:

  $ module load fft

Press the <TAB> key and the name will be expanded to fftw3/3.3/, and you'll see all possible completing names, with the cursor waiting at the end of the longest common substring:

  $ module load fftw3/3.3/_
  fftw3/3.3/impi-5/intel-16/3.3.4-10        fftw3/3.3/openmpi-1.10/intel-16/3.3.4-11
  fftw3/3.3/intel/3.3.2-1                   fftw3/3.3/openmpi-1.4/intel/3.3.2-4

Type the letter o, hit the <TAB> key again. The choices will be narrowed down to OpenMPI.

  $ module load fftw3/3.3/openmpi-1.<TAB>
  fftw3/3.3/openmpi-1.10/intel-16/3.3.4-11  fftw3/3.3/openmpi-1.4/intel/3.3.2-4

Typing the digit 1 will pick the 1.10 version, at which point the then remaining single module name choice will be completed all the way, with the cursor waiting after an additional space character:

  $ module load fftw3/3.3/openmpi-1.10/intel-16/3.3.4-11 _




|---- # None


|---- ## Introduction

On Carbon, the environment modules system has changed in the following aspects,
explained further in this document:

• The naming scheme is more developed and more versatile.
• The system does not preload compiler and MPI modules - you must specify all modules yourself.
• Dependent modules are no longer being loaded.
• The module command behaves in slightly different ways.


|---- ## Motivation

The changes were necessary because of increasing diversity and dependencies of applications, libraries,
and the underlying operating system.
The goal was to accommodate different compilers, MPI flavors, and (in the future)
different aspects of the machine architecture like CPU generation, capabilities, and coprocessor facilities.

For different releases of the operating system the new scheme enables existing application versions to continue being offered
where possible, and to make new application versions available where suitable,
either on both old and newer OS releases, or only on one.


|---- ## Nomenclature

Where the previous scheme used a relatively simple name form:

  name/version-build

the new scheme includes additional name components like api, mpi, and compiler.


|---- ## Extent of module catalog

• The legacy naming scheme is being retired, along with some of its attendant conventions.
• Newer applications will primarily be compiled and installed on the newer OS release and in the new naming scheme. Some applications may turn out to be backwards-compatible with a previous OS release, and will be made available there as well, in the new scheme, to appropriately offer applications that run on both or only a specific release of the operating system.
• Only a subset of modules from the legacy scheme has been carried over into the new scheme, typically the modules representing the most recent version of an application.


|---- ## Name changes for most modules

For most modules the leading name component (the part before any /) will be the same in the previous and new schemes.
What will always differ are the name parts after the first slash, which is relevant if you deliberately (and hopefully with good reason) chose a specific version.

Here are the names for the FFT3 library module in the legacy and new naming schemes,
as queried by the module avail shell command:

Current scheme                                                                                                                                                                                                                                                                                                                                   Legacy scheme
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
$ module -t avail fftw3
/opt/apps/M/x86_64/EL6:
/opt/apps/M/x86_64/EL:
fftw3/3.3/impi-5/intel-16/3.3.4-10	 # uses Intel-MPI
fftw3/3.3/intel/3.3.2-1			 # older serial version
fftw3/3.3/openmpi-1.10/intel-16/3.3.4-11 # uses OpenMPI
fftw3/3.3/openmpi-1.4/intel/3.3.2-4	 # older MPI version
/usr/share/Modules/modulefiles:
/etc/modulefiles: $ module -t avail fftw3
/opt/soft/modulefiles:
fftw3/3.2.1-1
fftw3/3.2.2-1
fftw3/3.3-1
fftw3/3.3.2-1
fftw3/3.3.2-4
/opt/intel/modulefiles:
/usr/share/Modules/modulefiles:
/etc/modulefiles:

  $ module -t avail fftw3
  /opt/apps/M/x86_64/EL6:
  /opt/apps/M/x86_64/EL:
  fftw3/3.3/impi-5/intel-16/3.3.4-10	 # uses Intel-MPI
  fftw3/3.3/intel/3.3.2-1			 # older serial version
  fftw3/3.3/openmpi-1.10/intel-16/3.3.4-11 # uses OpenMPI
  fftw3/3.3/openmpi-1.4/intel/3.3.2-4	 # older MPI version
  /usr/share/Modules/modulefiles:
  /etc/modulefiles:

  $ module -t avail fftw3
  /opt/soft/modulefiles:
  fftw3/3.2.1-1
  fftw3/3.2.2-1
  fftw3/3.3-1
  fftw3/3.3.2-1
  fftw3/3.3.2-4
  /opt/intel/modulefiles:
  /usr/share/Modules/modulefiles:
  /etc/modulefiles:

• Note the MPI flavor and the compiler name components compared to the legacy naming scheme (bold is used here for illustration only, your output will appear all as regular text.)
• The -t option of module avail shows the output in "terse" form, one entry per line.
• Lines ending in : indicate file system directories in which modules are being located on the current node.


|---- ## Name change exceptions

The names of following modules changed, making their names more consistent:

  legacy scheme	new scheme
  -------------------------------------
  asap3		asap/3.x		

  ase2		ase/2		- deprecated
  ase3		ase/3		- not needed as separate module, instead, is installed within each of the new "python-env" modules

  g09		gaussian/09
  GaussView	gaussview  (lowercase)

  python		python-env	- Several suites of Python environments, each with many packages
  		python.org	- The interpreter only, from the main Python web site.


|---- ## Explicit module selections required



• Pages using deprecated source tags (https://wiki.anl.gov/wiki_cnm/index.php)


|-- #### August 22, 2023

• 15:0915:09, August 22, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +292‎  m
HPC/Applications/lumerical (https://wiki.anl.gov/cnm/HPC/Applications/lumerical)
‎ →‎When inside CNM or using VPN as a CNM staff member or postdoc
current
• 15:0415:04, August 22, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  N
File:HPC 2023-08-22 Lumerical License config 2023 R2.png (https://wiki.anl.gov/cnm/File:HPC_2023-08-22_Lumerical_License_config_2023_R2.png)
‎No edit summary
current
• 15:0315:03, August 22, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +120‎  m
HPC/Applications/lumerical (https://wiki.anl.gov/cnm/HPC/Applications/lumerical)
‎ →‎When inside CNM or using VPN as a CNM staff member or postdoc


|-- #### May 12, 2023

1. 21:1021:10, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +11‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Declaring that a job requires licenses
current
2. 21:0921:09, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −48‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Declaring that a job requires licenses
3. 21:0621:06, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +25‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Declaring that a job requires licenses
4. 21:0421:04, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +3‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Setting a job to depend on licenses
5. 15:1915:19, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +3‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Several license types
6. 15:1915:19, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +30‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Several license types
7. 15:1815:18, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +1‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Several license types
8. 15:0815:08, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +100‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Several license types
9. 15:0615:06, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −7‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Several license types
10. 15:0515:05, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +56‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎One license type
11. 15:0315:03, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +6‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Setting a job to depend on licenses
12. 15:0215:02, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Several license types
13. 15:0215:02, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +383‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Setting a job to depend on licenses
14. 14:5514:55, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +4‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Setting a job to depend on licenses
15. 14:5414:54, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +6‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Setting a job to depend on licenses
16. 14:5414:54, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +18‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Setting a job to depend on licenses
17. 14:5114:51, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +68‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Several license types
18. 14:4614:46, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Setting a job to depend on licenses
19. 14:4614:46, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +42‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Setting a job to depend on licenses
20. 14:4414:44, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +14‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Setting a job to depend on licenses
21. 14:4014:40, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +144‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎One license type
22. 14:3714:37, May 12, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +976‎  m
HPC/Submitting and Managing Jobs (https://wiki.anl.gov/cnm/HPC/Submitting_and_Managing_Jobs)
‎ →‎Interactive node access


|-- #### May 3, 2023

• 13:3713:37, May 3, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +195‎  m
Template:Table of node types (https://wiki.anl.gov/cnm/Template:Table_of_node_types)
‎No edit summary
current


|-- #### April 25, 2023

• 20:1820:18, April 25, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +234‎  m
HPC/FAQ (https://wiki.anl.gov/cnm/HPC/FAQ)
‎ →‎Finalize your Argonne computer account
current


|-- #### April 14, 2023

1. 16:2016:20, April 14, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +9‎  m
HPC/Applications (https://wiki.anl.gov/cnm/HPC/Applications)
‎No edit summary
current
2. 16:1916:19, April 14, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +167,946‎  N
Template:Catalog Modules (https://wiki.anl.gov/cnm/Template:Catalog_Modules)
‎ Created page with "Query date: 2018-01-09, 14:56. {| class="wikitable sortable" cellspacing="0" cellpadding="5" style="text-align:left; margin: 1em auto 1em auto;" |- style="background:#ccc;"..."
current
3. 16:1816:18, April 14, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −167,954‎  m
HPC/Applications (https://wiki.anl.gov/cnm/HPC/Applications)
‎ Replaced content with "__NOTOC__ {{Catalog Header Modules}} <!-- = Index = <div style='column-width:14em; -moz-column-width:14em; -webkit-column-width:14em; column-gap:1em; -moz-column-gap:1em;..."
Tag: Replaced
4. 16:1516:15, April 14, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +7‎  m
HPC/Applications (https://wiki.anl.gov/cnm/HPC/Applications)
‎No edit summary
5. 16:1316:13, April 14, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +40‎  m
HPC/Applications (https://wiki.anl.gov/cnm/HPC/Applications)
‎ →‎Development tools
6. 16:1216:12, April 14, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +35‎  m
HPC/Applications (https://wiki.anl.gov/cnm/HPC/Applications)
‎ →‎Applications
7. 16:1016:10, April 14, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +45‎  m
HPC/Applications (https://wiki.anl.gov/cnm/HPC/Applications)
‎No edit summary


|-- #### April 13, 2023

• 18:3818:38, April 13, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +5,247‎  m
HPC/Applications (https://wiki.anl.gov/cnm/HPC/Applications)
‎No edit summary


|-- #### March 31, 2023

1. 21:3921:39, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  m
HPC/Applications/lumerical (https://wiki.anl.gov/cnm/HPC/Applications/lumerical)
‎ →‎When outside CNM
2. 21:3821:38, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  m
HPC/Applications/lumerical (https://wiki.anl.gov/cnm/HPC/Applications/lumerical)
‎ →‎Configuring license access when not running on Carbon directly
3. 21:3721:37, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +269‎  m
HPC/Applications/lumerical (https://wiki.anl.gov/cnm/HPC/Applications/lumerical)
‎ →‎File-based license configuration (advanced)
4. 21:3321:33, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +8‎  m
HPC/Applications/lumerical (https://wiki.anl.gov/cnm/HPC/Applications/lumerical)
‎ →‎File-based license configuration (advanced)
5. 21:2921:29, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −196‎  m
Template:Table of license ports (https://wiki.anl.gov/cnm/Template:Table_of_license_ports)
‎No edit summary
current
6. 21:2521:25, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −94‎  m
HPC/Applications/lumerical (https://wiki.anl.gov/cnm/HPC/Applications/lumerical)
‎ →‎When outside CNM
7. 16:2616:26, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +18‎  m
HPC/Applications/vasp (https://wiki.anl.gov/cnm/HPC/Applications/vasp)
‎ →‎Available binaries and their compile-time flags used
current
8. 16:2516:25, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +823‎  m
HPC/Applications/vasp (https://wiki.anl.gov/cnm/HPC/Applications/vasp)
‎ →‎Available binaries and their compile-time flags used
9. 16:1516:15, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  0‎  m
HPC/Applications/vasp (https://wiki.anl.gov/cnm/HPC/Applications/vasp)
‎ →‎Module considerations
10. 16:1516:15, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +135‎  m
HPC/Applications/vasp (https://wiki.anl.gov/cnm/HPC/Applications/vasp)
‎ →‎Module considerations
11. 16:1216:12, March 31, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −10‎  m
HPC/Applications/vasp (https://wiki.anl.gov/cnm/HPC/Applications/vasp)
‎ →‎Requesting Access


|-- #### January 26, 2023

• 18:4318:43, January 26, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +30‎  m
HPC/FAQ (https://wiki.anl.gov/cnm/HPC/FAQ)
‎ →‎Carbon account and access
• 18:4218:42, January 26, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −1‎  m
HPC/FAQ (https://wiki.anl.gov/cnm/HPC/FAQ)
‎ →‎Carbon account and access


|-- #### January 24, 2023

• 21:1321:13, January 24, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  +177‎  m
Template:Table of CPU flags (https://wiki.anl.gov/cnm/Template:Table_of_CPU_flags)
‎No edit summary
current
• 17:3017:30, January 24, 2023 (https://wiki.anl.gov/wiki_cnm/index.php)
diff hist  −302‎  m
Template:Section node types (https://wiki.anl.gov/cnm/Template:Section_node_types)
‎No edit summary
current

